{"ast":null,"code":"import { FormArray, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { IssueTypeEnum } from \"../../../../../core/enums\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../../../../core/services\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/material/button\";\nimport * as i5 from \"@angular/forms\";\nimport * as i6 from \"@angular/material/form-field\";\nimport * as i7 from \"@angular/material/input\";\nimport * as i8 from \"@angular/material/checkbox\";\nimport * as i9 from \"@angular/material/select\";\nimport * as i10 from \"@angular/material/core\";\nfunction IssueTypeAddEditComponent_mat_option_15_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\", 12);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const issueType_r2 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", issueType_r2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", issueType_r2, \" \");\n  }\n}\nfunction IssueTypeAddEditComponent_div_30_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r6 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 13)(1, \"div\", 14)(2, \"mat-form-field\")(3, \"mat-label\");\n    i0.ɵɵtext(4, \"Name\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(5, \"input\", 2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"mat-form-field\")(7, \"mat-label\");\n    i0.ɵɵtext(8, \"Field Name\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(9, \"input\", 15);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(10, \"mat-checkbox\", 16);\n    i0.ɵɵtext(11, \"Is required\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(12, \"button\", 9);\n    i0.ɵɵlistener(\"click\", function IssueTypeAddEditComponent_div_30_Template_button_click_12_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r6);\n      const i_r4 = restoredCtx.index;\n      const ctx_r5 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r5.removeColumn(i_r4));\n    });\n    i0.ɵɵtext(13, \"Remove Column\");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const i_r4 = ctx.index;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"formGroupName\", i_r4);\n  }\n}\nexport class IssueTypeAddEditComponent {\n  get columnsFormArray() {\n    return this.form.get('issueTypeColumns');\n  }\n  constructor(issueTypeService, router, route) {\n    this.issueTypeService = issueTypeService;\n    this.router = router;\n    this.route = route;\n    this.form = new FormGroup({\n      id: new FormControl(null),\n      name: new FormControl(null, Validators.required),\n      icon: new FormControl(null, Validators.required),\n      color: new FormControl(1, Validators.required),\n      description: new FormControl(null, Validators.required),\n      type: new FormControl(null, Validators.required),\n      issueTypeColumns: new FormArray([], Validators.required)\n    });\n    this.issueTypes = Object.values(IssueTypeEnum);\n  }\n  ngOnInit() {\n    this.route.params.subscribe(params => {\n      if (params['id']) {\n        this.issueTypeId = +params['id'];\n        this.getBoard();\n      }\n    });\n  }\n  getBoard() {\n    this.issueTypeService.getIssueTypeByID(this.issueTypeId).subscribe(res => {\n      this.form.patchValue(res);\n      res.issueTypeColumns.forEach(column => {\n        this.columnsFormArray.push(new FormGroup({\n          id: new FormControl(column.id),\n          name: new FormControl(column.name, Validators.required),\n          filedName: new FormControl(column.filedName, Validators.required),\n          isRequired: new FormControl(column.isRequired, Validators.required)\n        }, Validators.required));\n      });\n    });\n  }\n  addColumn() {\n    this.columnsFormArray.push(new FormGroup({\n      name: new FormControl(null, Validators.required),\n      filedName: new FormControl(null, Validators.required),\n      isRequired: new FormControl(false, Validators.required)\n    }, Validators.required));\n  }\n  save() {\n    this.form.markAllAsTouched();\n    if (this.form.invalid) {\n      return;\n    }\n    if (this.issueTypeId) {\n      this.issueTypeService.updateIssueType(this.form.value).subscribe(res => {\n        this.router.navigate(['/projects/setting/issue-types']).then();\n      });\n    } else {\n      this.issueTypeService.setIssueType(this.form.value).subscribe(res => {\n        this.router.navigate(['/projects/setting/issue-types']).then();\n      });\n    }\n  }\n  removeColumn(i) {\n    this.columnsFormArray.removeAt(i);\n  }\n}\nIssueTypeAddEditComponent.ɵfac = function IssueTypeAddEditComponent_Factory(t) {\n  return new (t || IssueTypeAddEditComponent)(i0.ɵɵdirectiveInject(i1.IssueTypesService), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i2.ActivatedRoute));\n};\nIssueTypeAddEditComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: IssueTypeAddEditComponent,\n  selectors: [[\"app-issue-type-add-edit\"]],\n  decls: 31,\n  vars: 3,\n  consts: [[3, \"formGroup\"], [1, \"form-container\"], [\"matInput\", \"\", \"placeholder\", \"Name\", \"formControlName\", \"name\"], [\"matInput\", \"\", \"placeholder\", \"Description\", \"formControlName\", \"description\"], [\"formControlName\", \"type\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"matInput\", \"\", \"placeholder\", \"Color\", \"formControlName\", \"color\", \"type\", \"color\"], [\"matInput\", \"\", \"placeholder\", \"Icon\", \"formControlName\", \"icon\"], [1, \"btns\"], [\"mat-raised-button\", \"\", \"color\", \"primary\", 3, \"click\"], [\"formArrayName\", \"issueTypeColumns\", 1, \"columns\"], [\"class\", \"item\", 4, \"ngFor\", \"ngForOf\"], [3, \"value\"], [1, \"item\"], [1, \"flex\", 3, \"formGroupName\"], [\"matInput\", \"\", \"placeholder\", \"Description\", \"formControlName\", \"filedName\"], [\"formControlName\", \"isRequired\", 1, \"example-margin\"]],\n  template: function IssueTypeAddEditComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\")(1, \"form\", 0)(2, \"div\", 1)(3, \"mat-form-field\")(4, \"mat-label\");\n      i0.ɵɵtext(5, \"Name\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(6, \"input\", 2);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(7, \"mat-form-field\")(8, \"mat-label\");\n      i0.ɵɵtext(9, \"Description\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(10, \"input\", 3);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(11, \"mat-form-field\")(12, \"mat-label\");\n      i0.ɵɵtext(13, \"Type\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(14, \"mat-select\", 4);\n      i0.ɵɵtemplate(15, IssueTypeAddEditComponent_mat_option_15_Template, 2, 2, \"mat-option\", 5);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(16, \"mat-form-field\")(17, \"mat-label\");\n      i0.ɵɵtext(18, \"Color\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(19, \"input\", 6);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(20, \"mat-form-field\")(21, \"mat-label\");\n      i0.ɵɵtext(22, \"Icon\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(23, \"input\", 7);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(24, \"div\", 8)(25, \"button\", 9);\n      i0.ɵɵlistener(\"click\", function IssueTypeAddEditComponent_Template_button_click_25_listener() {\n        return ctx.addColumn();\n      });\n      i0.ɵɵtext(26, \"Add Field\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(27, \"button\", 9);\n      i0.ɵɵlistener(\"click\", function IssueTypeAddEditComponent_Template_button_click_27_listener() {\n        return ctx.save();\n      });\n      i0.ɵɵtext(28, \"Save\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(29, \"div\", 10);\n      i0.ɵɵtemplate(30, IssueTypeAddEditComponent_div_30_Template, 14, 1, \"div\", 11);\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"formGroup\", ctx.form);\n      i0.ɵɵadvance(14);\n      i0.ɵɵproperty(\"ngForOf\", ctx.issueTypes);\n      i0.ɵɵadvance(15);\n      i0.ɵɵproperty(\"ngForOf\", ctx.columnsFormArray.controls);\n    }\n  },\n  dependencies: [i3.NgForOf, i4.MatButton, i5.ɵNgNoValidate, i5.DefaultValueAccessor, i5.NgControlStatus, i5.NgControlStatusGroup, i5.FormGroupDirective, i5.FormControlName, i5.FormGroupName, i5.FormArrayName, i6.MatFormField, i6.MatLabel, i7.MatInput, i8.MatCheckbox, i9.MatSelect, i10.MatOption],\n  styles: [\".form-container[_ngcontent-%COMP%]{display:flex;flex-direction:column;width:300px}.btns[_ngcontent-%COMP%]{display:flex;gap:30px;margin-bottom:40px}.flex[_ngcontent-%COMP%]{display:flex;flex-direction:column}\"]\n});","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}