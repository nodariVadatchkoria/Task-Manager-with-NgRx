{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../core/services/cookie.service\";\nexport class AuthFacade {\n  get isAuth() {\n    return !!this.cookieService.getCookie('accessToken');\n  }\n  get roles() {\n    const roles = this.cookieService.getCookie('roles');\n    return roles ? JSON.parse(roles) : [];\n  }\n  get permissions() {\n    const permissions = localStorage.getItem('permissions');\n    return permissions ? JSON.parse(permissions) : [];\n  }\n  constructor(cookieService) {\n    this.cookieService = cookieService;\n  }\n  logout() {\n    this.cookieService.eraseCookie('accessToken');\n    this.cookieService.eraseCookie('refreshToken');\n    localStorage.clear();\n  }\n}\nAuthFacade.ɵfac = function AuthFacade_Factory(t) {\n  return new (t || AuthFacade)(i0.ɵɵinject(i1.CookieService));\n};\nAuthFacade.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: AuthFacade,\n  factory: AuthFacade.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";;AAMA,OAAM,MAAOA,UAAU;EAErB,IAAIC,MAAM;IACR,OAAO,CAAC,CAAC,IAAI,CAACC,aAAa,CAACC,SAAS,CAAC,aAAa,CAAC;EACtD;EAEA,IAAIC,KAAK;IACP,MAAMA,KAAK,GAAG,IAAI,CAACF,aAAa,CAACC,SAAS,CAAC,OAAO,CAAC;IACnD,OAAQC,KAAK,GAAGC,IAAI,CAACC,KAAK,CAACF,KAAK,CAAC,GAAG,EAAE;EACxC;EAEA,IAAIG,WAAW;IAEb,MAAMA,WAAW,GAAGC,YAAY,CAACC,OAAO,CAAC,aAAa,CAAC;IACvD,OAAQF,WAAW,GAAGF,IAAI,CAACC,KAAK,CAACC,WAAW,CAAC,GAAG,EAAE;EACpD;EAEAG,YACUR,aAA4B;IAA5B,kBAAa,GAAbA,aAAa;EACnB;EAEJS,MAAM;IACJ,IAAI,CAACT,aAAa,CAACU,WAAW,CAAC,aAAa,CAAC;IAC7C,IAAI,CAACV,aAAa,CAACU,WAAW,CAAC,cAAc,CAAC;IAC9CJ,YAAY,CAACK,KAAK,EAAE;EACtB;;AAzBWb,UAAU;mBAAVA,UAAU;AAAA;AAAVA,UAAU;SAAVA,UAAU;EAAAc,SAAVd,UAAU;EAAAe,YAFT;AAAM","names":["AuthFacade","isAuth","cookieService","getCookie","roles","JSON","parse","permissions","localStorage","getItem","constructor","logout","eraseCookie","clear","factory","providedIn"],"sourceRoot":"","sources":["/Users/macbookpro/Desktop/GitHubRepo/Task-Manager-with-NgRx/src/app/facades/auth.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport {CookieService} from \"../core/services/cookie.service\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthFacade {\n\n  get isAuth(): boolean {\n    return !!this.cookieService.getCookie('accessToken');\n  }\n\n  get roles(): string[] {\n    const roles = this.cookieService.getCookie('roles');\n    return (roles ? JSON.parse(roles) : []) as string[];\n  }\n\n  get permissions(): string[] {\n\n    const permissions = localStorage.getItem('permissions');\n    return (permissions ? JSON.parse(permissions) : []) as string[];\n  }\n\n  constructor(\n    private cookieService: CookieService\n  ) { }\n\n  logout() {\n    this.cookieService.eraseCookie('accessToken');\n    this.cookieService.eraseCookie('refreshToken');\n    localStorage.clear();\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}