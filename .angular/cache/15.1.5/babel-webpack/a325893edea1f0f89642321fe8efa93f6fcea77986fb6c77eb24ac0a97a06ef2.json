{"ast":null,"code":"import { FormControl, FormGroup } from \"@angular/forms\";\nimport { Subject, takeUntil } from \"rxjs\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../../core/services/project.service\";\nimport * as i2 from \"../../../facades/project-facade.service\";\nimport * as i3 from \"../../../core/services/control-projects.service\";\nimport * as i4 from \"@angular/router\";\nimport * as i5 from \"@angular/forms\";\nimport * as i6 from \"@angular/material/form-field\";\nimport * as i7 from \"@angular/material/input\";\nimport * as i8 from \"@angular-material-components/color-picker\";\nimport * as i9 from \"@angular/material/button\";\nexport class ProjectEditComponent {\n  constructor(projectService, projectFacade, controlProjectsService, router, route) {\n    this.projectService = projectService;\n    this.projectFacade = projectFacade;\n    this.controlProjectsService = controlProjectsService;\n    this.router = router;\n    this.route = route;\n    this.disabled = true;\n    this.touchUi = false;\n    this.projects$ = this.projectFacade.myProjects$;\n    this.sub$ = new Subject();\n    this.form = new FormGroup({\n      id: new FormControl('null'),\n      name: new FormControl('null'),\n      description: new FormControl('null'),\n      abbreviation: new FormControl('null'),\n      color: new FormControl('null')\n    });\n    this.project = {};\n    this.currentProjectId = this.projectFacade.getProjectId();\n    this.currentProj = this.projectService.getProjectById(this.currentProjectId).pipe(takeUntil(this.sub$)).subscribe(res => {\n      this.project = res;\n      this.form.patchValue(this.project);\n    });\n  }\n  get currentProject() {\n    return this.projectFacade.getProject();\n  }\n  delete() {\n    this.projectService.deleteProject(this.currentProjectId).pipe(takeUntil(this.sub$)).subscribe(res => {\n      localStorage.removeItem('project');\n    });\n    setTimeout(() => {\n      location.reload();\n    }, 2000);\n  }\n  ngOnInit() {\n    this.project = JSON.parse(localStorage.getItem('project'));\n    this.form.patchValue(this.project);\n    this.route.params.subscribe(params => {\n      if (params['id']) {\n        this.projectService.getProjectById(+params['id']).pipe(takeUntil(this.sub$)).subscribe(res => {\n          this.form.patchValue(res);\n        });\n      }\n    });\n  }\n  save() {\n    this.form.markAllAsTouched();\n    if (this.form.invalid) {\n      return;\n    }\n    this.projectService.updateProject(this.currentProjectId, this.form.value).pipe(takeUntil(this.sub$)).subscribe(res => {\n      localStorage.setItem('project', JSON.stringify(res));\n      setTimeout(() => {\n        this.router.navigate(['/application/setting/info']).then();\n      }, 2000);\n    });\n  }\n}\nProjectEditComponent.ɵfac = function ProjectEditComponent_Factory(t) {\n  return new (t || ProjectEditComponent)(i0.ɵɵdirectiveInject(i1.ProjectService), i0.ɵɵdirectiveInject(i2.ProjectFacade), i0.ɵɵdirectiveInject(i3.ControlProjectsService), i0.ɵɵdirectiveInject(i4.Router), i0.ɵɵdirectiveInject(i4.ActivatedRoute));\n};\nProjectEditComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ProjectEditComponent,\n  selectors: [[\"app-project-edit\"]],\n  decls: 27,\n  vars: 6,\n  consts: [[1, \"container\"], [3, \"formGroup\"], [\"matInput\", \"\", \"placeholder\", \"Name\", \"formControlName\", \"name\"], [\"matInput\", \"\", \"placeholder\", \"Abbreviation\", \"formControlName\", \"abbreviation\"], [\"matInput\", \"\", \"placeholder\", \"Description\", \"formControlName\", \"description\"], [\"matInput\", \"\", \"formControlName\", \"color\", 3, \"ngxMatColorPicker\", \"formControl\"], [\"matSuffix\", \"\", 3, \"for\"], [3, \"touchUi\", \"color\"], [\"picker\", \"\"], [\"mat-raised-button\", \"\", \"color\", \"primary\", 3, \"click\"]],\n  template: function ProjectEditComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"h1\");\n      i0.ɵɵtext(1, \"Edit Project\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"div\", 0)(3, \"form\", 1)(4, \"mat-form-field\")(5, \"mat-label\");\n      i0.ɵɵtext(6, \"Project Name\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(7, \"input\", 2);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(8, \"mat-form-field\")(9, \"mat-label\");\n      i0.ɵɵtext(10, \"Abbreviation\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(11, \"input\", 3);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(12, \"mat-form-field\")(13, \"mat-label\");\n      i0.ɵɵtext(14, \"Description\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(15, \"input\", 4);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(16, \"mat-form-field\")(17, \"mat-label\");\n      i0.ɵɵtext(18, \"Color\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(19, \"input\", 5)(20, \"ngx-mat-color-toggle\", 6)(21, \"ngx-mat-color-picker\", 7, 8);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(23, \"button\", 9);\n      i0.ɵɵlistener(\"click\", function ProjectEditComponent_Template_button_click_23_listener() {\n        return ctx.delete();\n      });\n      i0.ɵɵtext(24, \"delete\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(25, \"button\", 9);\n      i0.ɵɵlistener(\"click\", function ProjectEditComponent_Template_button_click_25_listener() {\n        return ctx.save();\n      });\n      i0.ɵɵtext(26, \"Save changes\");\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      const _r0 = i0.ɵɵreference(22);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"formGroup\", ctx.form);\n      i0.ɵɵadvance(16);\n      i0.ɵɵproperty(\"ngxMatColorPicker\", _r0)(\"formControl\", ctx.colorCtr);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"for\", _r0);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"touchUi\", ctx.touchUi)(\"color\", ctx.color);\n    }\n  },\n  dependencies: [i5.ɵNgNoValidate, i5.DefaultValueAccessor, i5.NgControlStatus, i5.NgControlStatusGroup, i6.MatFormField, i6.MatLabel, i6.MatSuffix, i7.MatInput, i8.NgxMatColorToggleComponent, i8.NgxMatColorPickerInput, i8.NgxMatColorPickerComponent, i5.FormControlDirective, i5.FormGroupDirective, i5.FormControlName, i9.MatButton],\n  styles: [\"h1[_ngcontent-%COMP%]{display:flex;flex-direction:row;align-items:flex-start;justify-content:center;width:100%;height:100%;text-align:center;margin-top:20px;font-size:30px;font-weight:500}[_nghost-%COMP%]{display:flex;flex-direction:column;align-items:flex-start}[_nghost-%COMP%]   button[_ngcontent-%COMP%]{margin-left:5px;flex-wrap:wrap;padding:5px}.container[_ngcontent-%COMP%]{display:flex;flex-direction:row;align-items:flex-start;justify-content:center;width:100%;height:100%;margin:10px}.container[_ngcontent-%COMP%]   form[_ngcontent-%COMP%]{display:flex;gap:5px}\"]\n});","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}