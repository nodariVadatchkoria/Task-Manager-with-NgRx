{"ast":null,"code":"import { FormControl, FormGroup, Validators } from \"@angular/forms\";\nimport { MAT_DIALOG_DATA } from \"@angular/material/dialog\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/material/dialog\";\nimport * as i2 from \"../../../../core/services/users.service\";\nimport * as i3 from \"@angular/material/form-field\";\nimport * as i4 from \"@angular/material/button\";\nimport * as i5 from \"@angular/forms\";\nimport * as i6 from \"@angular/material/input\";\nexport class UserAddEditComponent {\n  constructor(dialogRef, userService, data) {\n    this.dialogRef = dialogRef;\n    this.userService = userService;\n    this.data = data;\n    this.form = new FormGroup({\n      id: new FormControl(null),\n      firstName: new FormControl(null, [Validators.required]),\n      lastName: new FormControl(null, [Validators.required]),\n      mobileNumber: new FormControl(null, [Validators.required]),\n      email: new FormControl(null, [Validators.required, Validators.email]),\n      identityNumber: new FormControl(null)\n    });\n  }\n  ngOnInit() {\n    if (this.data.userId) {\n      this.userService.getUserByID(this.data.userId).subscribe(res => {\n        this.form.patchValue(res);\n      });\n    }\n  }\n  onSubmit() {\n    this.form.markAllAsTouched();\n    if (this.form.invalid) {\n      return;\n    }\n    this.userService.createUser(this.form.value).subscribe(res => {\n      this.dialogRef.close(res);\n    });\n  }\n}\nUserAddEditComponent.ɵfac = function UserAddEditComponent_Factory(t) {\n  return new (t || UserAddEditComponent)(i0.ɵɵdirectiveInject(i1.MatDialogRef), i0.ɵɵdirectiveInject(i2.UsersService), i0.ɵɵdirectiveInject(MAT_DIALOG_DATA));\n};\nUserAddEditComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: UserAddEditComponent,\n  selectors: [[\"app-user-add-edit\"]],\n  decls: 29,\n  vars: 1,\n  consts: [[\"mat-dialog-title\", \"\"], [\"mat-dialog-content\", \"\"], [3, \"formGroup\"], [\"matInput\", \"\", \"placeholder\", \"Name\", \"formControlName\", \"firstName\"], [\"matInput\", \"\", \"placeholder\", \"Name\", \"formControlName\", \"lastName\"], [\"matInput\", \"\", \"placeholder\", \"Name\", \"formControlName\", \"identityNumber\"], [\"matInput\", \"\", \"placeholder\", \"Name\", \"formControlName\", \"email\"], [\"matInput\", \"\", \"placeholder\", \"Name\", \"formControlName\", \"mobileNumber\"], [\"mat-dialog-actions\", \"\"], [\"mat-button\", \"\", 3, \"click\"]],\n  template: function UserAddEditComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"h1\", 0);\n      i0.ɵɵtext(1, \"Add User\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"div\", 1)(3, \"form\", 2)(4, \"mat-form-field\")(5, \"mat-label\");\n      i0.ɵɵtext(6, \"First Name\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(7, \"input\", 3);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(8, \"mat-form-field\")(9, \"mat-label\");\n      i0.ɵɵtext(10, \"Last Name\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(11, \"input\", 4);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(12, \"mat-form-field\")(13, \"mat-label\");\n      i0.ɵɵtext(14, \"identityNumber\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(15, \"input\", 5);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(16, \"mat-form-field\")(17, \"mat-label\");\n      i0.ɵɵtext(18, \"email\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(19, \"input\", 6);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(20, \"mat-form-field\")(21, \"mat-label\");\n      i0.ɵɵtext(22, \"mobileNumber\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(23, \"input\", 7);\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(24, \"div\", 8)(25, \"button\", 9);\n      i0.ɵɵlistener(\"click\", function UserAddEditComponent_Template_button_click_25_listener() {\n        return ctx.dialogRef.close(false);\n      });\n      i0.ɵɵtext(26, \"Cancel\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(27, \"button\", 9);\n      i0.ɵɵlistener(\"click\", function UserAddEditComponent_Template_button_click_27_listener() {\n        return ctx.onSubmit();\n      });\n      i0.ɵɵtext(28, \"Save\");\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"formGroup\", ctx.form);\n    }\n  },\n  dependencies: [i1.MatDialogTitle, i1.MatDialogContent, i1.MatDialogActions, i3.MatFormField, i3.MatLabel, i4.MatButton, i5.ɵNgNoValidate, i5.DefaultValueAccessor, i5.NgControlStatus, i5.NgControlStatusGroup, i5.FormGroupDirective, i5.FormControlName, i6.MatInput],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"AACA,SAAQA,WAAW,EAAEC,SAAS,EAAEC,UAAU,QAAO,gBAAgB;AACjE,SAAQC,eAAe,QAAqB,0BAA0B;;;;;;;;AAQtE,OAAM,MAAOC,oBAAoB;EAW/BC,YACSC,SAA6C,EAC5CC,WAAyB,EACDC,IAAS;IAFlC,cAAS,GAATF,SAAS;IACR,gBAAW,GAAXC,WAAW;IACa,SAAI,GAAJC,IAAI;IAZtC,SAAI,GAAc,IAAIP,SAAS,CAAC;MAC9BQ,EAAE,EAAE,IAAIT,WAAW,CAAC,IAAI,CAAC;MACzBU,SAAS,EAAE,IAAIV,WAAW,CAAC,IAAI,EAAE,CAACE,UAAU,CAACS,QAAQ,CAAC,CAAC;MACvDC,QAAQ,EAAE,IAAIZ,WAAW,CAAC,IAAI,EAAE,CAACE,UAAU,CAACS,QAAQ,CAAC,CAAC;MACtDE,YAAY,EAAE,IAAIb,WAAW,CAAC,IAAI,EAAE,CAACE,UAAU,CAACS,QAAQ,CAAC,CAAC;MAC1DG,KAAK,EAAE,IAAId,WAAW,CAAC,IAAI,EAAE,CAACE,UAAU,CAACS,QAAQ,EAAET,UAAU,CAACY,KAAK,CAAC,CAAC;MACrEC,cAAc,EAAE,IAAIf,WAAW,CAAC,IAAI;KACrC,CAAC;EAOF;EAEAgB,QAAQ;IACN,IAAI,IAAI,CAACR,IAAI,CAACS,MAAM,EAAE;MACpB,IAAI,CAACV,WAAW,CAACW,WAAW,CAAC,IAAI,CAACV,IAAI,CAACS,MAAM,CAAC,CAC3CE,SAAS,CAAEC,GAAG,IAAI;QACjB,IAAI,CAACC,IAAI,CAACC,UAAU,CAACF,GAAG,CAAC;MAC3B,CAAC,CAAC;;EAER;EAEAG,QAAQ;IACN,IAAI,CAACF,IAAI,CAACG,gBAAgB,EAAE;IAC5B,IAAI,IAAI,CAACH,IAAI,CAACI,OAAO,EAAE;MACrB;;IAGF,IAAI,CAAClB,WAAW,CAACmB,UAAU,CAAC,IAAI,CAACL,IAAI,CAACM,KAAK,CAAC,CACzCR,SAAS,CAAEC,GAAG,IAAI;MACjB,IAAI,CAACd,SAAS,CAACsB,KAAK,CAACR,GAAG,CAAC;IAC3B,CAAC,CAAC;EACN;;AArCWhB,oBAAoB;mBAApBA,oBAAoB,qGAcrBD,eAAe;AAAA;AAddC,oBAAoB;QAApBA,oBAAoB;EAAAyB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCVjCC,6BAAqB;MAAAA,wBAAQ;MAAAA,iBAAK;MAClCA,8BAAwB;MAGPA,0BAAU;MAAAA,iBAAY;MACjCA,2BAA+D;MACjEA,iBAAiB;MAEjBA,sCAAgB;MACHA,0BAAS;MAAAA,iBAAY;MAChCA,4BAA8D;MAChEA,iBAAiB;MAEjBA,uCAAgB;MACHA,+BAAc;MAAAA,iBAAY;MACrCA,4BAAoE;MACtEA,iBAAiB;MAEjBA,uCAAgB;MACHA,sBAAK;MAAAA,iBAAY;MAC5BA,4BAA2D;MAC7DA,iBAAiB;MAEjBA,uCAAgB;MACHA,6BAAY;MAAAA,iBAAY;MACnCA,4BAAkE;MACpEA,iBAAiB;MAGrBA,+BAAwB;MACHA;QAAA,OAASC,oBAAgB,KAAK,CAAC;MAAA,EAAC;MAACD,uBAAM;MAAAA,iBAAS;MACnEA,kCAAwC;MAArBA;QAAA,OAASC,cAAU;MAAA,EAAC;MAACD,qBAAI;MAAAA,iBAAS;;;MA7B/CA,eAAkB;MAAlBA,oCAAkB","names":["FormControl","FormGroup","Validators","MAT_DIALOG_DATA","UserAddEditComponent","constructor","dialogRef","userService","data","id","firstName","required","lastName","mobileNumber","email","identityNumber","ngOnInit","userId","getUserByID","subscribe","res","form","patchValue","onSubmit","markAllAsTouched","invalid","createUser","value","close","selectors","decls","vars","consts","template","i0","ctx"],"sourceRoot":"","sources":["/Users/macbookpro/Desktop/GitHubRepo/Task-Manager-with-NgRx/src/app/pages/user/components/user-add-edit/user-add-edit.component.ts","/Users/macbookpro/Desktop/GitHubRepo/Task-Manager-with-NgRx/src/app/pages/user/components/user-add-edit/user-add-edit.component.html"],"sourcesContent":["import {Component, Inject, OnInit} from '@angular/core';\nimport {FormControl, FormGroup, Validators} from \"@angular/forms\";\nimport {MAT_DIALOG_DATA, MatDialogRef} from \"@angular/material/dialog\";\nimport {UsersService} from \"../../../../core/services/users.service\";\n\n@Component({\n  selector: 'app-user-add-edit',\n  templateUrl: './user-add-edit.component.html',\n  styleUrls: ['./user-add-edit.component.scss']\n})\nexport class UserAddEditComponent implements OnInit{\n\n  form: FormGroup = new FormGroup({\n    id: new FormControl(null),\n    firstName: new FormControl(null, [Validators.required]),\n    lastName: new FormControl(null, [Validators.required]),\n    mobileNumber: new FormControl(null, [Validators.required]),\n    email: new FormControl(null, [Validators.required, Validators.email]),\n    identityNumber: new FormControl(null),\n  });\n\n  constructor(\n    public dialogRef: MatDialogRef<UserAddEditComponent>,\n    private userService: UsersService,\n    @Inject(MAT_DIALOG_DATA) public data: any\n  ) {\n  }\n\n  ngOnInit(): void {\n    if (this.data.userId) {\n      this.userService.getUserByID(this.data.userId)\n        .subscribe((res) => {\n          this.form.patchValue(res);\n        })\n    }\n  }\n\n  onSubmit() {\n    this.form.markAllAsTouched()\n    if (this.form.invalid) {\n      return\n    }\n\n    this.userService.createUser(this.form.value)\n      .subscribe((res) => {\n        this.dialogRef.close(res);\n      })\n  }\n}\n","<h1 mat-dialog-title>Add User</h1>\n<div mat-dialog-content>\n  <form [formGroup]=\"form\">\n    <mat-form-field>\n      <mat-label>First Name</mat-label>\n      <input matInput placeholder=\"Name\" formControlName=\"firstName\">\n    </mat-form-field>\n\n    <mat-form-field>\n      <mat-label>Last Name</mat-label>\n      <input matInput placeholder=\"Name\" formControlName=\"lastName\">\n    </mat-form-field>\n\n    <mat-form-field>\n      <mat-label>identityNumber</mat-label>\n      <input matInput placeholder=\"Name\" formControlName=\"identityNumber\">\n    </mat-form-field>\n\n    <mat-form-field>\n      <mat-label>email</mat-label>\n      <input matInput placeholder=\"Name\" formControlName=\"email\">\n    </mat-form-field>\n\n    <mat-form-field>\n      <mat-label>mobileNumber</mat-label>\n      <input matInput placeholder=\"Name\" formControlName=\"mobileNumber\">\n    </mat-form-field>\n  </form>\n</div>\n<div mat-dialog-actions>\n  <button mat-button (click)=\"dialogRef.close(false)\">Cancel</button>\n  <button mat-button (click)=\"onSubmit()\">Save</button>\n</div>\n\n\n\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}