{"ast":null,"code":"import { moveItemInArray, transferArrayItem } from \"@angular/cdk/drag-drop\";\nimport * as _ from 'lodash';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../../core/services/board.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"../../../core/services/task.service\";\nimport * as i4 from \"@angular/material/dialog\";\nimport * as i5 from \"@angular/common\";\nimport * as i6 from \"@angular/cdk/drag-drop\";\nimport * as i7 from \"@angular/material/button\";\nfunction BoardComponent_div_2_div_7_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"div\", 9);\n  }\n}\nfunction BoardComponent_div_2_div_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 7);\n    i0.ɵɵtemplate(1, BoardComponent_div_2_div_7_div_1_Template, 1, 0, \"div\", 8);\n    i0.ɵɵelementStart(2, \"h3\");\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"h4\");\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const card_r3 = ctx.$implicit;\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\"ID:\", card_r3.id, \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"Title:\", card_r3.title, \"\");\n  }\n}\nconst _c0 = function () {\n  return [];\n};\nfunction BoardComponent_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r6 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 3);\n    i0.ɵɵlistener(\"cdkDropListDropped\", function BoardComponent_div_2_Template_div_cdkDropListDropped_0_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r6);\n      const column_r1 = restoredCtx.$implicit;\n      const ctx_r5 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r5.drop($event, column_r1));\n    });\n    i0.ɵɵelementStart(1, \"div\", 4)(2, \"h3\");\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"button\", 5);\n    i0.ɵɵlistener(\"click\", function BoardComponent_div_2_Template_button_click_4_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r6);\n      const column_r1 = restoredCtx.$implicit;\n      const ctx_r7 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r7.addTask(column_r1.id));\n    });\n    i0.ɵɵtext(5, \"Add Task\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(6, \"div\");\n    i0.ɵɵtemplate(7, BoardComponent_div_2_div_7_Template, 6, 2, \"div\", 6);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const column_r1 = ctx.$implicit;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"cdkDropListData\", ctx_r0.tasks[column_r1.id] || i0.ɵɵpureFunction0(3, _c0));\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\"Status: \", column_r1.taskStatus, \"\");\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r0.tasks[column_r1.id] || i0.ɵɵpureFunction0(4, _c0));\n  }\n}\nexport class BoardComponent {\n  constructor(boardService, router, taskService, dialog) {\n    this.boardService = boardService;\n    this.router = router;\n    this.taskService = taskService;\n    this.dialog = dialog;\n    this.tasks = {\n      // 25: [\n      //    {\n      //      id: 1,\n      //      title: 'Task 1',\n      //    },\n      //    {\n      //      id: 2,\n      //      title: 'Task 2',\n      //    }\n      //  ],\n      //  26: [],\n      //  27: []\n    };\n  }\n  ngOnInit() {\n    this.router.params.subscribe(params => {\n      if (params['id']) {\n        this.boardId = +params['id'];\n        this.getBoard();\n      }\n    });\n  }\n  getBoard() {\n    this.boardService.getBoardId(this.boardId).subscribe(board => {\n      console.log(board);\n      this.board = board;\n      this.getTasks();\n    });\n  }\n  getTasks() {\n    this.taskService.getTasks({\n      boardId: this.boardId\n    }).subscribe(tasks => {\n      this.tasks = _.groupBy(tasks, 'boardColumnId');\n    });\n  }\n  drop(event, column) {\n    console.log(event);\n    if (event.previousContainer === event.container) {\n      moveItemInArray(event.container.data, event.previousIndex, event.currentIndex);\n    } else {\n      transferArrayItem(event.previousContainer.data, event.container.data, event.previousIndex, event.currentIndex);\n      const tasks = event.container.data.map((task, index) => {\n        return {\n          ...task,\n          taskStatus: column.taskStatus,\n          boardColumnId: column.id\n        };\n      });\n      this.tasks[column.id] = tasks;\n      const currentTask = tasks[event.currentIndex];\n      console.log(currentTask);\n      this.taskService.updateTask(currentTask.id, currentTask).subscribe(task => {\n        console.log(task);\n        this.getTasks();\n      });\n    }\n  }\n  addTask(id) {}\n}\nBoardComponent.ɵfac = function BoardComponent_Factory(t) {\n  return new (t || BoardComponent)(i0.ɵɵdirectiveInject(i1.BoardService), i0.ɵɵdirectiveInject(i2.ActivatedRoute), i0.ɵɵdirectiveInject(i3.TaskService), i0.ɵɵdirectiveInject(i4.MatDialog));\n};\nBoardComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: BoardComponent,\n  selectors: [[\"app-board\"]],\n  decls: 3,\n  vars: 1,\n  consts: [[1, \"container\"], [\"cdkDropListGroup\", \"\", 1, \"board-columns\"], [\"class\", \"column\", \"cdkDropList\", \"\", 3, \"cdkDropListData\", \"cdkDropListDropped\", 4, \"ngFor\", \"ngForOf\"], [\"cdkDropList\", \"\", 1, \"column\", 3, \"cdkDropListData\", \"cdkDropListDropped\"], [1, \"head\"], [\"mat-raised-button\", \"\", 3, \"click\"], [\"class\", \"card\", \"cdkDrag\", \"\", 4, \"ngFor\", \"ngForOf\"], [\"cdkDrag\", \"\", 1, \"card\"], [\"class\", \"example-custom-placeholder\", 4, \"cdkDragPlaceholder\"], [1, \"example-custom-placeholder\"]],\n  template: function BoardComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1);\n      i0.ɵɵtemplate(2, BoardComponent_div_2_Template, 8, 5, \"div\", 2);\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngForOf\", ctx.board == null ? null : ctx.board.columns);\n    }\n  },\n  dependencies: [i5.NgForOf, i6.CdkDropList, i6.CdkDropListGroup, i6.CdkDrag, i6.CdkDragPlaceholder, i7.MatButton],\n  styles: [\".container[_ngcontent-%COMP%]{justify-content:center;height:400px;width:100%;overflow-x:scroll;overflow-y:scroll}.board-columns[_ngcontent-%COMP%]{display:flex;gap:10px;flex:1 1 400px;flex-direction:row;padding:10px;margin:10px;height:100%;max-width:1042px}.board-columns[_ngcontent-%COMP%]   .column[_ngcontent-%COMP%]{display:flex;flex-direction:column;flex:1 1 400px;padding:5px;height:100%;min-width:300px;background-color:#faf8f8;border-radius:5px;box-shadow:0 0 10px #0003}.board-columns[_ngcontent-%COMP%]   .column[_ngcontent-%COMP%]   .head[_ngcontent-%COMP%]{display:flex;flex-direction:row;justify-content:space-between}.card[_ngcontent-%COMP%]{padding:20px 10px;border-bottom:solid 1px #ccc;color:#000000de;display:flex;flex-direction:row;align-items:center;justify-content:space-between;box-sizing:border-box;cursor:move;background:white;font-size:14px}.example-custom-placeholder[_ngcontent-%COMP%]{background:#ccc;border:dotted 3px #999;min-height:60px;transition:transform .25s cubic-bezier(0,0,.2,1)}.cdk-drag-preview[_ngcontent-%COMP%]{box-sizing:border-box;border-radius:4px;box-shadow:0 5px 5px -3px #0003,0 8px 10px 1px #00000024,0 3px 14px 2px #0000001f}.cdk-drag-animating[_ngcontent-%COMP%]{transition:transform .25s cubic-bezier(0,0,.2,1)}\"]\n});","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}