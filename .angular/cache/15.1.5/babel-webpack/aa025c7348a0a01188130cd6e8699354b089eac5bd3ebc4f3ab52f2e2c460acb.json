{"ast":null,"code":"import { FormControl, FormGroup, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"src/app/core/services/stepper.next.service\";\nimport * as i3 from \"src/app/core/services/board.service\";\nimport * as i4 from \"../../../core/services/valid-counter.service\";\nimport * as i5 from \"@angular/common\";\nimport * as i6 from \"@angular/material/stepper\";\nimport * as i7 from \"@angular/material/button\";\nimport * as i8 from \"@angular/material/form-field\";\nimport * as i9 from \"@angular/material/input\";\nimport * as i10 from \"@angular/material/select\";\nimport * as i11 from \"@angular/material/core\";\nimport * as i12 from \"../../../core/directives/next-button.directive\";\nfunction CreateBoardComponent_div_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"div\", 10)(2, \"mat-form-field\", 11);\n    i0.ɵɵelement(3, \"input\", 12);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"mat-form-field\", 13);\n    i0.ɵɵelement(5, \"input\", 14);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"mat-form-field\", 11)(7, \"mat-label\");\n    i0.ɵɵtext(8, \"Task Status\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"mat-select\", 15)(10, \"mat-option\", 16);\n    i0.ɵɵtext(11, \"Todo\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(12, \"mat-option\", 17);\n    i0.ɵɵtext(13, \"In Progress\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(14, \"mat-option\", 18);\n    i0.ɵɵtext(15, \"Done\");\n    i0.ɵɵelementEnd()()()()();\n  }\n  if (rf & 2) {\n    const i_r2 = ctx.index;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"formGroupName\", i_r2);\n  }\n}\nexport class CreateBoardComponent {\n  constructor(_formBuilder, stepperService, boardService, validCounter) {\n    this._formBuilder = _formBuilder;\n    this.stepperService = stepperService;\n    this.boardService = boardService;\n    this.validCounter = validCounter;\n    this.project = {};\n    this.boardFormGroup = this._formBuilder.group({\n      name: ['', [Validators.required, Validators.minLength(4)]],\n      description: ['', [Validators.required, Validators.minLength(4)]],\n      position: 0,\n      columns: this._formBuilder.array([])\n    });\n  }\n  ngAfterViewInit() {\n    this.boardFormGroup.get('name')?.setValue('ss');\n    this.boardComponent(1);\n    this.boardFormGroup.get('name')?.setValue('');\n  }\n  boardComponent(index) {\n    this.validCounter.validCounter(this.boardFormGroup, index);\n    console.log('board');\n  }\n  ngOnInit() {\n    this.project = JSON.parse(localStorage.getItem('board'));\n    this.boardFormGroup.patchValue(this.project);\n  }\n  get colsArray() {\n    return this.boardFormGroup.get('columns');\n  }\n  addCol() {\n    this.colsArray.push(new FormGroup({\n      name: new FormControl('', [Validators.required, Validators.minLength(4)]),\n      description: new FormControl('', [Validators.required, Validators.minLength(4)]),\n      position: new FormControl(this.colsArray.length + 1, Validators.required),\n      taskStatus: new FormControl('', Validators.required)\n    }, Validators.required));\n  }\n  onSubmit() {\n    // Next btn\n    this.stepperService.changeFromLinear();\n    this.stepperService.openNextStep(2);\n    setTimeout(() => {\n      this.stepperService.changeToLinear();\n    }, 1000);\n    //Creating Board\n    console.log(this.boardFormGroup.value);\n    this.boardService.addBoard(this.boardFormGroup.value).subscribe({\n      next: res => console.log(res)\n    });\n  }\n  // Prev Btn\n  goBack() {\n    this.stepperService.changeFromLinear();\n    this.stepperService.openNextStep(0);\n    setTimeout(() => {\n      this.stepperService.changeToLinear();\n    }, 500);\n    if (this.boardFormGroup.valid) {\n      this.stepperService.complete.next(true);\n    }\n    this.stepperService.complete.next(false);\n  }\n}\nCreateBoardComponent.ɵfac = function CreateBoardComponent_Factory(t) {\n  return new (t || CreateBoardComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.StepperNextService), i0.ɵɵdirectiveInject(i3.BoardService), i0.ɵɵdirectiveInject(i4.ValidCounterService));\n};\nCreateBoardComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: CreateBoardComponent,\n  selectors: [[\"app-create-board\"]],\n  decls: 19,\n  vars: 3,\n  consts: [[1, \"flex\", \"step-form-field\", 3, \"formGroup\"], [1, \"margin-auto\"], [\"appearance\", \"fill\"], [\"matInput\", \"\", \"formControlName\", \"name\", \"placeholder\", \"\", \"required\", \"\"], [\"matInput\", \"\", \"formControlName\", \"description\", \"placeholder\", \"\", \"required\", \"\"], [\"formArrayName\", \"columns\", 1, \"step-form-field\", \"added\"], [4, \"ngFor\", \"ngForOf\"], [\"type\", \"button\", \"mat-button\", \"\", \"color\", \"primary\", 1, \"add\", 3, \"click\"], [\"mat-button\", \"\", \"matStepperPrevious\", \"\", 3, \"click\"], [\"mat-button\", \"\", \"matStepperNext\", \"\", \"appNextButton\", \"\", 3, \"disabled\", \"click\"], [3, \"formGroupName\"], [1, \"step-form-field\"], [\"matInput\", \"\", \"type\", \"text\", \"formControlName\", \"name\", \"placeholder\", \"Column name\"], [\"matInput\", \"\", 1, \"step-form-field\"], [\"matInput\", \"\", \"type\", \"text\", \"formControlName\", \"description\", \"placeholder\", \"Column description\"], [\"formControlName\", \"taskStatus\"], [\"value\", \"ToDo\"], [\"value\", \"InProgress\"], [\"value\", \"Done\"]],\n  template: function CreateBoardComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"form\", 0)(1, \"div\", 1)(2, \"mat-form-field\", 2)(3, \"mat-label\");\n      i0.ɵɵtext(4, \"Board Name\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(5, \"input\", 3);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(6, \"mat-form-field\", 2)(7, \"mat-label\");\n      i0.ɵɵtext(8, \"Board Description\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(9, \"input\", 4);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(10, \"div\", 5);\n      i0.ɵɵtemplate(11, CreateBoardComponent_div_11_Template, 16, 1, \"div\", 6);\n      i0.ɵɵelementStart(12, \"button\", 7);\n      i0.ɵɵlistener(\"click\", function CreateBoardComponent_Template_button_click_12_listener() {\n        return ctx.addCol();\n      });\n      i0.ɵɵtext(13, \" Add Column \");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(14, \"div\")(15, \"button\", 8);\n      i0.ɵɵlistener(\"click\", function CreateBoardComponent_Template_button_click_15_listener() {\n        return ctx.goBack();\n      });\n      i0.ɵɵtext(16, \"Back\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(17, \"button\", 9);\n      i0.ɵɵlistener(\"click\", function CreateBoardComponent_Template_button_click_17_listener() {\n        return ctx.onSubmit();\n      });\n      i0.ɵɵtext(18, \" Next \");\n      i0.ɵɵelementEnd()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"formGroup\", ctx.boardFormGroup);\n      i0.ɵɵadvance(11);\n      i0.ɵɵproperty(\"ngForOf\", ctx.colsArray.controls);\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"disabled\", !ctx.boardFormGroup.valid);\n    }\n  },\n  dependencies: [i5.NgForOf, i6.MatStepperNext, i6.MatStepperPrevious, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.RequiredValidator, i1.FormGroupDirective, i1.FormControlName, i1.FormGroupName, i1.FormArrayName, i7.MatButton, i8.MatFormField, i8.MatLabel, i9.MatInput, i10.MatSelect, i11.MatOption, i12.NextButtonDirective],\n  styles: [\"[_ngcontent-%COMP%]:root{min-width:100%!important}form[_ngcontent-%COMP%]{min-width:100%!important;overflow:auto;padding-bottom:70px;max-height:100%}form[_ngcontent-%COMP%]   .margin-auto[_ngcontent-%COMP%]{display:flex;justify-content:space-evenly;align-items:center;gap:50px;padding:10px;flex-direction:row;flex-wrap:wrap;min-width:100%;max-height:100%;overflow-y:auto!important}form[_ngcontent-%COMP%]   .margin-auto[_ngcontent-%COMP%]   mat-form-field[_ngcontent-%COMP%]{flex-basis:40%;min-width:250px}form[_ngcontent-%COMP%]   .margin-auto[_ngcontent-%COMP%]   .add[_ngcontent-%COMP%]{width:150px;position:absolute;bottom:20px;left:calc(50% - 75px);background:green;border:1px solid white;border-radius:5px;color:#fff}form[_ngcontent-%COMP%]   .margin-auto[_ngcontent-%COMP%]   .added[_ngcontent-%COMP%]{width:100%}form[_ngcontent-%COMP%]   .margin-auto[_ngcontent-%COMP%]   .added[_ngcontent-%COMP%]   div[_ngcontent-%COMP%]   div[_ngcontent-%COMP%]{display:flex;justify-content:center;align-items:center;gap:30px;flex-wrap:wrap}form[_ngcontent-%COMP%]   .margin-auto[_ngcontent-%COMP%]   .added[_ngcontent-%COMP%]   div[_ngcontent-%COMP%]   div[_ngcontent-%COMP%]   mat-form-field[_ngcontent-%COMP%]{flex-basis:30%;min-width:250px}\"]\n});","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}