{"ast":null,"code":"import { inject } from '@angular/core';\nimport { HttpClient } from \"@angular/common/http\";\nimport { environment } from \"../../../environments/environment\";\nimport * as i0 from \"@angular/core\";\nexport class BaseService {\n  constructor() {\n    this.http = inject(HttpClient);\n    this.apiUrl = environment.apiUrl;\n  }\n  post(url, body) {\n    return this.http.post(this.apiUrl + url, body);\n  }\n  // get<T>(url: string, params?: any): Observable<T> {\n  //   return this.http.get<T>(this.apiUrl + url,\n  //     {params: new HttpParams({fromObject: params})})\n  // }\n  get(url, params = {}) {\n    return this.http.get(this.apiUrl + url, {\n      params: params\n    });\n  }\n  delete(url) {\n    return this.http.delete(this.apiUrl + url);\n  }\n  put(url, body) {\n    return this.http.put(this.apiUrl + url, body);\n  }\n}\nBaseService.ɵfac = function BaseService_Factory(t) {\n  return new (t || BaseService)();\n};\nBaseService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: BaseService,\n  factory: BaseService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AAAA,SAAQA,MAAM,QAAmB,eAAe;AAChD,SAAQC,UAAU,QAAgC,sBAAsB;AAExE,SAAQC,WAAW,QAAO,mCAAmC;;AAK7D,OAAM,MAAOC,WAAW;EAHxBC;IAIE,SAAI,GAAeJ,MAAM,CAACC,UAAU,CAAC;IACrC,WAAM,GAAGC,WAAW,CAACG,MAAM;;EAG3BC,IAAI,CAAIC,GAAW,EAAEC,IAAU;IAC7B,OAAO,IAAI,CAACC,IAAI,CAACH,IAAI,CAAI,IAAI,CAACD,MAAM,GAAGE,GAAG,EAAEC,IAAI,CAAC;EACnD;EAEA;EACA;EACA;EACA;EAIAE,GAAG,CAAIH,GAAW,EAAEI,MAAM,GAAG,EAAE;IAC7B,OAAO,IAAI,CAACF,IAAI,CAACC,GAAG,CAAI,IAAI,CAACL,MAAM,GAAGE,GAAG,EAAE;MACzCI,MAAM,EAAEA;KACP,CAAC;EACN;EAGAC,MAAM,CAAIL,GAAW;IACnB,OAAO,IAAI,CAACE,IAAI,CAACG,MAAM,CAAI,IAAI,CAACP,MAAM,GAAGE,GAAG,CAAC;EAC/C;EAEAM,GAAG,CAAIN,GAAW,EAAEC,IAAU;IAC5B,OAAO,IAAI,CAACC,IAAI,CAACI,GAAG,CAAI,IAAI,CAACR,MAAM,GAAGE,GAAG,EAAEC,IAAI,CAAC;EAClD;;AA7BWL,WAAW;mBAAXA,WAAW;AAAA;AAAXA,WAAW;SAAXA,WAAW;EAAAW,SAAXX,WAAW;EAAAY,YAFV;AAAM","names":["inject","HttpClient","environment","BaseService","constructor","apiUrl","post","url","body","http","get","params","delete","put","factory","providedIn"],"sourceRoot":"","sources":["/Users/macbookpro/Desktop/GitHubRepo/Task-Manager-with-NgRx/src/app/core/services/base.service.ts"],"sourcesContent":["import {inject, Injectable} from '@angular/core';\nimport {HttpClient, HttpHeaders, HttpParams} from \"@angular/common/http\";\nimport {Observable} from \"rxjs\";\nimport {environment} from \"../../../environments/environment\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class BaseService {\n  http: HttpClient = inject(HttpClient);\n  apiUrl = environment.apiUrl\n\n\n  post<T>(url: string, body?: any): Observable<T> {\n    return this.http.post<T>(this.apiUrl + url, body)\n  }\n\n  // get<T>(url: string, params?: any): Observable<T> {\n  //   return this.http.get<T>(this.apiUrl + url,\n  //     {params: new HttpParams({fromObject: params})})\n  // }\n\n\n\n  get<T>(url: string, params = {}): Observable<T> {\n    return this.http.get<T>(this.apiUrl + url, {\n      params: params\n      })\n  }\n\n\n  delete<T>(url: string): Observable<T> {\n    return this.http.delete<T>(this.apiUrl + url)\n  }\n\n  put<T>(url: string, body?: any): Observable<T> {\n    return this.http.put<T>(this.apiUrl + url, body)\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}