{"ast":null,"code":"import { BaseService } from './base.service';\nimport * as i0 from \"@angular/core\";\nexport class BoardService extends BaseService {\n  addBoard(payload) {\n    localStorage.setItem('board', JSON.stringify(payload));\n    return this.post('board', payload);\n  }\n  getBoards(header) {\n    return this.get('board');\n  }\n  getBoardByID(boardId, projectId) {\n    return this.get(`board/${boardId}`, {\n      headers: {\n        project: projectId\n      }\n    });\n  }\n  getBoardss() {\n    return this.get('board');\n  }\n  getBoardId(id) {\n    return this.get(`board/${id}`);\n  }\n  updateBoard(data) {\n    return this.put(`board/${data.id}`, data);\n  }\n  getProjBoards() {\n    return this.get('board');\n  }\n  deleteBoard(id) {\n    return this.delete(`board/${id}`);\n  }\n}\nBoardService.ɵfac = /*@__PURE__*/function () {\n  let ɵBoardService_BaseFactory;\n  return function BoardService_Factory(t) {\n    return (ɵBoardService_BaseFactory || (ɵBoardService_BaseFactory = i0.ɵɵgetInheritedFactory(BoardService)))(t || BoardService);\n  };\n}();\nBoardService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: BoardService,\n  factory: BoardService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AAEA,SAASA,WAAW,QAAQ,gBAAgB;;AAM5C,OAAM,MAAOC,YAAa,SAAQD,WAAW;EAE3CE,QAAQ,CAACC,OAAY;IACnBC,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEC,IAAI,CAACC,SAAS,CAACJ,OAAO,CAAC,CAAC;IACtD,OAAO,IAAI,CAACK,IAAI,CAAM,OAAO,EAAEL,OAAO,CAAC;EACzC;EAEAM,SAAS,CAACC,MAAW;IACnB,OAAO,IAAI,CAACC,GAAG,CAAM,OAAO,CAAC;EAC/B;EAEAC,YAAY,CAACC,OAAe,EAAEC,SAAiB;IAC7C,OAAO,IAAI,CAACH,GAAG,CAAM,SAASE,OAAO,EAAE,EAAE;MAACE,OAAO,EAAE;QAACC,OAAO,EAAEF;MAAS;IAAC,CAAC,CAAC;EAC3E;EACAG,UAAU;IACR,OAAO,IAAI,CAACN,GAAG,CAAW,OAAO,CAAC;EACpC;EACAO,UAAU,CAACC,EAAU;IACnB,OAAO,IAAI,CAACR,GAAG,CAAS,SAASQ,EAAE,EAAE,CAAC;EACxC;EACAC,WAAW,CAACC,IAAS;IACnB,OAAO,IAAI,CAACC,GAAG,CAAC,SAASD,IAAI,CAACF,EAAE,EAAE,EAAEE,IAAI,CAAC;EAC3C;EAEAE,aAAa;IACX,OAAO,IAAI,CAACZ,GAAG,CAAW,OAAO,CAAC;EACpC;EACAa,WAAW,CAACL,EAAU;IACpB,OAAO,IAAI,CAACM,MAAM,CAAC,SAASN,EAAE,EAAE,CAAC;EACnC;;AA7BWlB,YAAa;;;+FAAbA,YAAY,SAAZA,YAAY;EAAA;AAAA;AAAZA,YAAa;SAAbA,YAAY;EAAAyB,SAAZzB,YAAY;EAAA0B,YADC;AAAM","names":["BaseService","BoardService","addBoard","payload","localStorage","setItem","JSON","stringify","post","getBoards","header","get","getBoardByID","boardId","projectId","headers","project","getBoardss","getBoardId","id","updateBoard","data","put","getProjBoards","deleteBoard","delete","factory","providedIn"],"sourceRoot":"","sources":["/Users/macbookpro/Desktop/GitHubRepo/Task-Manager-with-NgRx/src/app/core/services/board.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { BaseService } from './base.service';\nimport {HttpHeaders} from \"@angular/common/http\";\n\nimport {IBoard} from \"../interfaces/board\";\n\n@Injectable({ providedIn: 'root' })\nexport class BoardService extends BaseService {\n\n  addBoard(payload: any): Observable<any> {\n    localStorage.setItem('board', JSON.stringify(payload));\n    return this.post<any>('board', payload);\n  }\n\n  getBoards(header: any): Observable<any> {\n    return this.get<any>('board')\n  }\n\n  getBoardByID(boardId: number, projectId: string): Observable<any> {\n    return this.get<any>(`board/${boardId}`, {headers: {project: projectId}})\n  }\n  getBoardss(): Observable<IBoard[]> {\n    return this.get<IBoard[]>('board');\n  }\n  getBoardId(id: number): Observable<IBoard> {\n    return this.get<IBoard>(`board/${id}`);\n  }\n  updateBoard(data: any): Observable<IBoard> {\n    return this.put(`board/${data.id}`, data);\n  }\n\n  getProjBoards(): Observable<IBoard[]> {\n    return this.get<IBoard[]>('board');\n  }\n  deleteBoard(id: number): Observable<any> {\n    return this.delete(`board/${id}`);\n  }\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}