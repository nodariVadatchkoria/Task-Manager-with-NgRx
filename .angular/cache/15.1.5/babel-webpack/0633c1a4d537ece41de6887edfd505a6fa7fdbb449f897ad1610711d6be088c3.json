{"ast":null,"code":"import { BaseService } from \"./base.service\";\nimport * as i0 from \"@angular/core\";\nexport class TaskService extends BaseService {\n  getTask(id) {\n    return this.get(`task/${id}`);\n  }\n  getTasks(params = {}) {\n    return this.get(`task`, params);\n  }\n  createTask(data) {\n    return this.post(`task`, data);\n  }\n  updateTask(id, data) {\n    return this.put(`task/${id}`, data);\n  }\n  deleteTask(id) {\n    return this.delete(`task/${id}`);\n  }\n}\nTaskService.ɵfac = /*@__PURE__*/function () {\n  let ɵTaskService_BaseFactory;\n  return function TaskService_Factory(t) {\n    return (ɵTaskService_BaseFactory || (ɵTaskService_BaseFactory = i0.ɵɵgetInheritedFactory(TaskService)))(t || TaskService);\n  };\n}();\nTaskService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: TaskService,\n  factory: TaskService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AACA,SAAQA,WAAW,QAAO,gBAAgB;;AAO1C,OAAM,MAAOC,WAAY,SAAQD,WAAW;EAE1CE,OAAO,CAACC,EAAU;IAChB,OAAO,IAAI,CAACC,GAAG,CAAQ,QAAQD,EAAE,EAAE,CAAC;EACtC;EAEAE,QAAQ,CAACC,MAAM,GAAG,EAAE;IAClB,OAAO,IAAI,CAACF,GAAG,CAAU,MAAM,EAAEE,MAAM,CAAE;EAC3C;EAEAC,UAAU,CAACC,IAAS;IAClB,OAAO,IAAI,CAACC,IAAI,CAAQ,MAAM,EAAED,IAAI,CAAC;EACvC;EAEAE,UAAU,CAACP,EAAU,EAAEK,IAAS;IAC9B,OAAO,IAAI,CAACG,GAAG,CAAQ,QAAQR,EAAE,EAAE,EAAEK,IAAI,CAAC;EAC5C;EAEAI,UAAU,CAACT,EAAU;IACnB,OAAO,IAAI,CAACU,MAAM,CAAQ,QAAQV,EAAE,EAAE,CAAC;EACzC;;AApBWF,WAAY;;;6FAAZA,WAAW,SAAXA,WAAW;EAAA;AAAA;AAAXA,WAAY;SAAZA,WAAW;EAAAa,SAAXb,WAAW;EAAAc,YAFV;AAAM","names":["BaseService","TaskService","getTask","id","get","getTasks","params","createTask","data","post","updateTask","put","deleteTask","delete","factory","providedIn"],"sourceRoot":"","sources":["/Users/macbookpro/Desktop/GitHubRepo/Task-Manager-with-NgRx/src/app/core/services/task.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport {BaseService} from \"./base.service\";\nimport {Observable} from \"rxjs\";\nimport {ITask} from \"../interfaces/task\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TaskService extends BaseService{\n\n  getTask(id: number): Observable<ITask> {\n    return this.get<ITask>(`task/${id}`)\n  }\n\n  getTasks(params = {}): Observable<ITask[]> {\n    return this.get<ITask[]>(`task`, params )\n  }\n\n  createTask(data: any): Observable<ITask> {\n    return this.post<ITask>(`task`, data)\n  }\n\n  updateTask(id: number, data: any): Observable<ITask> {\n    return this.put<ITask>(`task/${id}`, data)\n  }\n\n  deleteTask(id: number): Observable<any> {\n    return this.delete<ITask>(`task/${id}`)\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}