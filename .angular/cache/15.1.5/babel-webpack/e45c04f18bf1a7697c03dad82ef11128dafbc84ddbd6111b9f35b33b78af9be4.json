{"ast":null,"code":"import { FormControl, FormGroup, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"src/app/core/services/stepper.next.service\";\nimport * as i3 from \"src/app/core/services/board.service\";\nimport * as i4 from \"../../../core/services/valid-counter.service\";\nimport * as i5 from \"@angular/common\";\nimport * as i6 from \"@angular/material/stepper\";\nimport * as i7 from \"@angular/material/button\";\nimport * as i8 from \"@angular/material/form-field\";\nimport * as i9 from \"@angular/material/input\";\nimport * as i10 from \"@angular/material/select\";\nimport * as i11 from \"@angular/material/core\";\nimport * as i12 from \"../../../core/directives/next-button.directive\";\nfunction CreateBoardComponent_div_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"div\", 10)(2, \"mat-form-field\", 11);\n    i0.ɵɵelement(3, \"input\", 12);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"mat-form-field\", 13);\n    i0.ɵɵelement(5, \"input\", 14);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"mat-form-field\", 11)(7, \"mat-label\");\n    i0.ɵɵtext(8, \"Task Status\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"mat-select\", 15)(10, \"mat-option\", 16);\n    i0.ɵɵtext(11, \"Todo\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(12, \"mat-option\", 17);\n    i0.ɵɵtext(13, \"In Progress\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(14, \"mat-option\", 18);\n    i0.ɵɵtext(15, \"Done\");\n    i0.ɵɵelementEnd()()()()();\n  }\n  if (rf & 2) {\n    const i_r2 = ctx.index;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"formGroupName\", i_r2);\n  }\n}\nexport class CreateBoardComponent {\n  constructor(_formBuilder, stepperService, boardService, validCounter) {\n    this._formBuilder = _formBuilder;\n    this.stepperService = stepperService;\n    this.boardService = boardService;\n    this.validCounter = validCounter;\n    this.project = {};\n    this.boardFormGroup = this._formBuilder.group({\n      name: ['', [Validators.required, Validators.minLength(4)]],\n      description: ['', [Validators.required, Validators.minLength(4)]],\n      position: 0,\n      columns: this._formBuilder.array([])\n    });\n  }\n  ngAfterViewInit() {\n    this.boardFormGroup.get('name')?.setValue('ss');\n    this.boardComponent(1);\n    this.boardFormGroup.get('name')?.setValue('');\n  }\n  boardComponent(index) {\n    this.validCounter.validCounter(this.boardFormGroup, index);\n    console.log('board');\n  }\n  ngOnInit() {\n    this.project = JSON.parse(localStorage.getItem('board'));\n    this.boardFormGroup.patchValue(this.project);\n  }\n  get colsArray() {\n    return this.boardFormGroup.get('columns');\n  }\n  addCol() {\n    this.colsArray.push(new FormGroup({\n      name: new FormControl('', [Validators.required, Validators.minLength(4)]),\n      description: new FormControl('', [Validators.required, Validators.minLength(4)]),\n      position: new FormControl(this.colsArray.length + 1, Validators.required),\n      taskStatus: new FormControl('', Validators.required)\n    }, Validators.required));\n  }\n  onSubmit() {\n    // Next btn\n    this.stepperService.changeFromLinear();\n    this.stepperService.openNextStep(2);\n    setTimeout(() => {\n      this.stepperService.changeToLinear();\n    }, 1000);\n    //Creating Board\n    console.log(this.boardFormGroup.value);\n    this.boardService.addBoard(this.boardFormGroup.value).subscribe({\n      next: res => console.log(res)\n    });\n  }\n  // Prev Btn\n  goBack() {\n    this.stepperService.changeFromLinear();\n    this.stepperService.openNextStep(0);\n    setTimeout(() => {\n      this.stepperService.changeToLinear();\n    }, 500);\n    if (this.boardFormGroup.valid) {\n      this.stepperService.complete.next(true);\n    }\n    this.stepperService.complete.next(false);\n  }\n}\nCreateBoardComponent.ɵfac = function CreateBoardComponent_Factory(t) {\n  return new (t || CreateBoardComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.StepperNextService), i0.ɵɵdirectiveInject(i3.BoardService), i0.ɵɵdirectiveInject(i4.ValidCounterService));\n};\nCreateBoardComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: CreateBoardComponent,\n  selectors: [[\"app-create-board\"]],\n  decls: 19,\n  vars: 3,\n  consts: [[1, \"flex\", \"step-form-field\", 3, \"formGroup\"], [1, \"margin-auto\"], [\"appearance\", \"fill\"], [\"matInput\", \"\", \"formControlName\", \"name\", \"placeholder\", \"\", \"required\", \"\"], [\"matInput\", \"\", \"formControlName\", \"description\", \"placeholder\", \"\", \"required\", \"\"], [\"formArrayName\", \"columns\", 1, \"step-form-field\", \"added\"], [4, \"ngFor\", \"ngForOf\"], [\"type\", \"button\", \"mat-button\", \"\", \"color\", \"primary\", 1, \"add\", 3, \"click\"], [\"mat-button\", \"\", \"matStepperPrevious\", \"\", 3, \"click\"], [\"mat-button\", \"\", \"matStepperNext\", \"\", \"appNextButton\", \"\", 3, \"disabled\", \"click\"], [3, \"formGroupName\"], [1, \"step-form-field\"], [\"matInput\", \"\", \"type\", \"text\", \"formControlName\", \"name\", \"placeholder\", \"Column name\"], [\"matInput\", \"\", 1, \"step-form-field\"], [\"matInput\", \"\", \"type\", \"text\", \"formControlName\", \"description\", \"placeholder\", \"Column description\"], [\"formControlName\", \"taskStatus\"], [\"value\", \"ToDo\"], [\"value\", \"InProgress\"], [\"value\", \"Done\"]],\n  template: function CreateBoardComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"form\", 0)(1, \"div\", 1)(2, \"mat-form-field\", 2)(3, \"mat-label\");\n      i0.ɵɵtext(4, \"Board Name\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(5, \"input\", 3);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(6, \"mat-form-field\", 2)(7, \"mat-label\");\n      i0.ɵɵtext(8, \"Board Description\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(9, \"input\", 4);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(10, \"div\", 5);\n      i0.ɵɵtemplate(11, CreateBoardComponent_div_11_Template, 16, 1, \"div\", 6);\n      i0.ɵɵelementStart(12, \"button\", 7);\n      i0.ɵɵlistener(\"click\", function CreateBoardComponent_Template_button_click_12_listener() {\n        return ctx.addCol();\n      });\n      i0.ɵɵtext(13, \" Add Column \");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(14, \"div\")(15, \"button\", 8);\n      i0.ɵɵlistener(\"click\", function CreateBoardComponent_Template_button_click_15_listener() {\n        return ctx.goBack();\n      });\n      i0.ɵɵtext(16, \"Back\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(17, \"button\", 9);\n      i0.ɵɵlistener(\"click\", function CreateBoardComponent_Template_button_click_17_listener() {\n        return ctx.onSubmit();\n      });\n      i0.ɵɵtext(18, \" Next \");\n      i0.ɵɵelementEnd()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"formGroup\", ctx.boardFormGroup);\n      i0.ɵɵadvance(11);\n      i0.ɵɵproperty(\"ngForOf\", ctx.colsArray.controls);\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"disabled\", !ctx.boardFormGroup.valid);\n    }\n  },\n  dependencies: [i5.NgForOf, i6.MatStepperNext, i6.MatStepperPrevious, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.RequiredValidator, i1.FormGroupDirective, i1.FormControlName, i1.FormGroupName, i1.FormArrayName, i7.MatButton, i8.MatFormField, i8.MatLabel, i9.MatInput, i10.MatSelect, i11.MatOption, i12.NextButtonDirective],\n  styles: [\"[_ngcontent-%COMP%]:root {\\n  min-width: 100% !important;\\n}\\n\\nform[_ngcontent-%COMP%] {\\n  min-width: 100% !important;\\n  overflow: auto;\\n  padding-bottom: 70px;\\n  max-height: 100%;\\n}\\n\\nform[_ngcontent-%COMP%]   .margin-auto[_ngcontent-%COMP%] {\\n  display: flex;\\n  justify-content: space-evenly;\\n  align-items: center;\\n  gap: 50px;\\n  padding: 10px;\\n  flex-direction: row;\\n  flex-wrap: wrap;\\n  min-width: 100%;\\n  max-height: 100%;\\n  overflow-y: auto !important;\\n}\\n\\nform[_ngcontent-%COMP%]   .margin-auto[_ngcontent-%COMP%]   mat-form-field[_ngcontent-%COMP%] {\\n  flex-basis: 40%;\\n  min-width: 250px;\\n}\\n\\nform[_ngcontent-%COMP%]   .margin-auto[_ngcontent-%COMP%]   .add[_ngcontent-%COMP%] {\\n  width: 150px;\\n  position: absolute;\\n  bottom: 20px;\\n  left: calc(50% - 75px);\\n  background: green;\\n  border: 1px solid white;\\n  border-radius: 5px;\\n  color: white;\\n}\\n\\nform[_ngcontent-%COMP%]   .margin-auto[_ngcontent-%COMP%]   .added[_ngcontent-%COMP%] {\\n  width: 100%;\\n}\\n\\nform[_ngcontent-%COMP%]   .margin-auto[_ngcontent-%COMP%]   .added[_ngcontent-%COMP%]   div[_ngcontent-%COMP%]   div[_ngcontent-%COMP%] {\\n  display: flex;\\n  justify-content: center;\\n  align-items: center;\\n  gap: 30px;\\n  flex-wrap: wrap;\\n}\\n\\nform[_ngcontent-%COMP%]   .margin-auto[_ngcontent-%COMP%]   .added[_ngcontent-%COMP%]   div[_ngcontent-%COMP%]   div[_ngcontent-%COMP%]   mat-form-field[_ngcontent-%COMP%] {\\n  flex-basis: 30%;\\n  min-width: 250px;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvcGFnZXMvc3RlcHBlci9jcmVhdGUtYm9hcmQvY3JlYXRlLWJvYXJkLmNvbXBvbmVudC5zY3NzIiwid2VicGFjazovLy4vc3JjL21peGlucy5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUVBO0VBQ0UsMEJBQUE7QUFERjs7QUFJQTtFQUNFLDBCQUFBO0VBQ0EsY0FBQTtFQUNBLG9CQUFBO0VBQ0EsZ0JBQUE7QUFERjs7QUFFRTtFQ1ZBLGFBQUE7RUFDQSw2QkRVZ0I7RUNUaEIsbUJEUzhCO0VBQzVCLFNBQUE7RUFDQSxhQUFBO0VBQ0EsbUJBQUE7RUFDQSxlQUFBO0VBQ0EsZUFBQTtFQUNBLGdCQUFBO0VBQ0EsMkJBQUE7QUFFSjs7QUFBSTtFQUNFLGVBQUE7RUFDQSxnQkFBQTtBQUVOOztBQUNJO0VBQ0UsWUFBQTtFQUNBLGtCQUFBO0VBQ0EsWUFBQTtFQUNBLHNCQUFBO0VBQ0EsaUJBQUE7RUFDQSx1QkFBQTtFQUNBLGtCQUFBO0VBQ0EsWUFBQTtBQUNOOztBQUVJO0VBQ0UsV0FBQTtBQUFOOztBQUdRO0VDeENOLGFBQUE7RUFDQSx1QkR3Q3VCO0VDdkN2QixtQkR1QytCO0VBQ3ZCLFNBQUE7RUFDQSxlQUFBO0FBQ1Y7O0FBQVU7RUFDRSxlQUFBO0VBQ0EsZ0JBQUE7QUFFWiIsInNvdXJjZXNDb250ZW50IjpbIkBpbXBvcnQgJy4uLy4uLy4uLy4uL21peGlucyc7XG5cbjpyb290IHtcbiAgbWluLXdpZHRoOiAxMDAlICFpbXBvcnRhbnQ7XG59XG5cbmZvcm0ge1xuICBtaW4td2lkdGg6IDEwMCUgIWltcG9ydGFudDtcbiAgb3ZlcmZsb3c6IGF1dG87XG4gIHBhZGRpbmctYm90dG9tOiA3MHB4O1xuICBtYXgtaGVpZ2h0OiAxMDAlO1xuICAubWFyZ2luLWF1dG8ge1xuICAgIEBpbmNsdWRlIGZsZXgoc3BhY2UtZXZlbmx5LCBjZW50ZXIpO1xuICAgIGdhcDogNTBweDtcbiAgICBwYWRkaW5nOiAxMHB4O1xuICAgIGZsZXgtZGlyZWN0aW9uOiByb3c7XG4gICAgZmxleC13cmFwOiB3cmFwO1xuICAgIG1pbi13aWR0aDogMTAwJTtcbiAgICBtYXgtaGVpZ2h0OiAxMDAlO1xuICAgIG92ZXJmbG93LXk6IGF1dG8gIWltcG9ydGFudDtcblxuICAgIG1hdC1mb3JtLWZpZWxkIHtcbiAgICAgIGZsZXgtYmFzaXM6IDQwJTtcbiAgICAgIG1pbi13aWR0aDogMjUwcHg7XG4gICAgfVxuXG4gICAgLmFkZCB7XG4gICAgICB3aWR0aDogMTUwcHg7XG4gICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICBib3R0b206IDIwcHg7XG4gICAgICBsZWZ0OiBjYWxjKDUwJSAtIDc1cHgpO1xuICAgICAgYmFja2dyb3VuZDogZ3JlZW47XG4gICAgICBib3JkZXI6IDFweCBzb2xpZCB3aGl0ZTtcbiAgICAgIGJvcmRlci1yYWRpdXM6IDVweDtcbiAgICAgIGNvbG9yOiB3aGl0ZTtcbiAgICB9XG5cbiAgICAuYWRkZWQge1xuICAgICAgd2lkdGg6IDEwMCU7XG5cbiAgICAgIGRpdiB7XG4gICAgICAgIGRpdiB7XG4gICAgICAgICAgQGluY2x1ZGUgIGZsZXgoY2VudGVyLCBjZW50ZXIpO1xuICAgICAgICAgIGdhcDogMzBweDtcbiAgICAgICAgICBmbGV4LXdyYXA6IHdyYXA7XG4gICAgICAgICAgbWF0LWZvcm0tZmllbGQge1xuICAgICAgICAgICAgZmxleC1iYXNpczogMzAlO1xuICAgICAgICAgICAgbWluLXdpZHRoOiAyNTBweDtcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG4gIH1cbn1cbiIsIkBtaXhpbiBmbGV4KCRqdXN0aWZ5LCAkYWxpZ24taXRlbXMpIHtcbiAgZGlzcGxheTogZmxleDtcbiAganVzdGlmeS1jb250ZW50OiAkanVzdGlmeTtcbiAgYWxpZ24taXRlbXM6ICRhbGlnbi1pdGVtcztcbn1cbiJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n});","map":{"version":3,"mappings":"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","names":["FormControl","FormGroup","Validators","i0","CreateBoardComponent","constructor","_formBuilder","stepperService","boardService","validCounter","group","name","required","minLength","description","position","columns","array","ngAfterViewInit","boardFormGroup","get","setValue","boardComponent","index","console","log","ngOnInit","project","JSON","parse","localStorage","getItem","patchValue","colsArray","addCol","push","length","taskStatus","onSubmit","changeFromLinear","openNextStep","setTimeout","changeToLinear","value","addBoard","subscribe","next","res","goBack","valid","complete","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["/Users/macbookpro/Desktop/GitHubRepo/Task-Manager-with-NgRx/src/app/pages/stepper/create-board/create-board.component.ts","/Users/macbookpro/Desktop/GitHubRepo/Task-Manager-with-NgRx/src/app/pages/stepper/create-board/create-board.component.html"],"sourcesContent":["import {AfterViewInit, Component, OnInit} from '@angular/core';\nimport {\n  FormArray,\n  FormBuilder,\n  FormControl,\n  FormGroup,\n  Validators,\n} from '@angular/forms';\nimport { BoardService } from 'src/app/core/services/board.service';\nimport { ControlProjectsService } from 'src/app/core/services/control-projects.service';\nimport { StepperNextService } from 'src/app/core/services/stepper.next.service';\nimport {ValidCounterService} from \"../../../core/services/valid-counter.service\";\nimport {IProject} from \"../../../core/interfaces/iproject\";\n\n@Component({\n  selector: 'app-create-board',\n  templateUrl: './create-board.component.html',\n  styleUrls: ['./create-board.component.scss'],\n})\nexport class CreateBoardComponent implements OnInit, AfterViewInit {\n  constructor(\n    private _formBuilder: FormBuilder,\n    private stepperService: StepperNextService,\n    private boardService: BoardService,\n    private validCounter: ValidCounterService\n  ) {}\n\n\n  ngAfterViewInit() {\n    this.boardFormGroup.get('name')?.setValue('ss');\n     this.boardComponent(1)\n    this.boardFormGroup.get('name')?.setValue('');\n  }\n\n  boardComponent(index: number) {\n    this.validCounter.validCounter(this.boardFormGroup, index);\n    console.log('board')\n  }\n  project: IProject = {} as IProject;\n\n  ngOnInit(): void {\n    this.project = JSON.parse(localStorage.getItem('board')!);\n    this.boardFormGroup.patchValue(this.project)\n  }\n\n  boardFormGroup = this._formBuilder.group({\n    name: ['', [Validators.required, Validators.minLength(4)]],\n    description: ['', [Validators.required, Validators.minLength(4)]],\n    position: 0,\n\n    columns: this._formBuilder.array([]),\n  });\n\n  get colsArray() {\n    return <FormArray>this.boardFormGroup.get('columns');\n  }\n\n  addCol() {\n    this.colsArray.push(\n      new FormGroup(\n        {\n          name: new FormControl('', [\n            Validators.required,\n            Validators.minLength(4),\n          ]),\n          description: new FormControl('', [\n            Validators.required,\n            Validators.minLength(4),\n          ]),\n          position: new FormControl(\n            this.colsArray.length + 1,\n            Validators.required\n          ),\n          taskStatus: new FormControl('', Validators.required),\n        },\n        Validators.required\n      )\n    );\n  }\n\n  onSubmit() {\n    // Next btn\n    this.stepperService.changeFromLinear();\n\n    this.stepperService.openNextStep(2);\n\n    setTimeout(() => {\n      this.stepperService.changeToLinear();\n    }, 1000);\n\n    //Creating Board\n\n    console.log(this.boardFormGroup.value);\n    this.boardService.addBoard(this.boardFormGroup.value).subscribe({\n      next: (res) => console.log(res),\n    });\n  }\n\n  // Prev Btn\n  goBack() {\n    this.stepperService.changeFromLinear();\n    this.stepperService.openNextStep(0);\n\n    setTimeout(() => {\n      this.stepperService.changeToLinear();\n    }, 500);\n    if (this.boardFormGroup.valid) {\n      this.stepperService.complete.next(true);\n    }\n    this.stepperService.complete.next(false);\n  }\n}\n","<form [formGroup]=\"boardFormGroup\" class=\"flex step-form-field\">\n  <div class=\"margin-auto\">\n    <mat-form-field appearance=\"fill\">\n      <mat-label>Board Name</mat-label>\n      <input matInput formControlName=\"name\" placeholder=\"\" required />\n    </mat-form-field>\n\n    <mat-form-field appearance=\"fill\">\n      <mat-label>Board Description</mat-label>\n      <input matInput formControlName=\"description\" placeholder=\"\" required />\n    </mat-form-field>\n\n    <!---->\n    <div formArrayName=\"columns\" class=\"step-form-field added\">\n      <div *ngFor=\"let column of colsArray.controls; let i = index\">\n        <div [formGroupName]=\"i\">\n          <mat-form-field class=\"step-form-field\">\n            <input\n              matInput\n              type=\"text\"\n              formControlName=\"name\"\n              placeholder=\"Column name\"\n            />\n          </mat-form-field>\n          <mat-form-field matInput class=\"step-form-field\">\n            <input\n              matInput\n              type=\"text\"\n              formControlName=\"description\"\n              placeholder=\"Column description\"\n            />\n          </mat-form-field>\n\n          <mat-form-field class=\"step-form-field\">\n            <mat-label>Task Status</mat-label>\n            <mat-select formControlName=\"taskStatus\">\n              <mat-option value=\"ToDo\">Todo</mat-option>\n              <mat-option value=\"InProgress\">In Progress</mat-option>\n              <mat-option value=\"Done\">Done</mat-option>\n            </mat-select>\n          </mat-form-field>\n        </div>\n      </div>\n      <button type=\"button\" mat-button color=\"primary\" (click)=\"addCol()\" class=\"add\">\n        Add Column\n      </button>\n    </div>\n\n    <div>\n      <button mat-button matStepperPrevious (click)=\"goBack()\">Back</button>\n      <button\n        [disabled]=\"!boardFormGroup.valid\"\n        mat-button\n        matStepperNext\n        (click)=\"onSubmit()\"\n        appNextButton\n      >\n        Next\n      </button>\n    </div>\n  </div>\n</form>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}