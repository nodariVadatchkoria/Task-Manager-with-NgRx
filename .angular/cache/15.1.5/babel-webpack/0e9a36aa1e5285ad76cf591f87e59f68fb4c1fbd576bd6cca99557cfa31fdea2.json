{"ast":null,"code":"import { FormControl, FormGroup, Validators } from \"@angular/forms\";\nimport { Subject, takeUntil } from \"rxjs\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"../../../../core/services/epic.service\";\nimport * as i3 from \"@angular/material/form-field\";\nimport * as i4 from \"@angular/material/button\";\nimport * as i5 from \"@angular/material/input\";\nimport * as i6 from \"@angular/forms\";\nexport class EpicAddEditComponent {\n  constructor(route, router, epicService) {\n    this.route = route;\n    this.router = router;\n    this.epicService = epicService;\n    this.form = new FormGroup({\n      id: new FormControl(null),\n      name: new FormControl(null, Validators.required),\n      description: new FormControl(null, Validators.required)\n    });\n    this.sub$ = new Subject();\n  }\n  getEpic(id) {\n    this.epicService.getEpic(id).pipe(takeUntil(this.sub$)).subscribe(res => {\n      this.form.patchValue(res);\n    });\n  }\n  ngOnInit() {\n    this.route.params.subscribe(params => {\n      if (params['id']) {\n        this.epicId = +params['id'];\n        this.getEpic(this.epicId);\n      }\n    });\n  }\n  save() {\n    this.form.markAllAsTouched();\n    if (this.form.invalid) {\n      return;\n    }\n    if (this.epicId) {\n      this.epicService.updateEpic(this.form.value).pipe(takeUntil(this.sub$)).subscribe(() => {\n        this.router.navigate(['/application/setting/epics']).then();\n      });\n    } else {\n      this.epicService.createEpic(this.form.value).pipe(takeUntil(this.sub$)).subscribe(() => {\n        this.router.navigate(['/application/setting/epics']).then();\n      });\n    }\n  }\n  ngOnDestroy() {\n    this.sub$.next(null);\n    this.sub$.complete();\n  }\n}\nEpicAddEditComponent.ɵfac = function EpicAddEditComponent_Factory(t) {\n  return new (t || EpicAddEditComponent)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i2.EpicService));\n};\nEpicAddEditComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: EpicAddEditComponent,\n  selectors: [[\"app-epic-add-edit\"]],\n  decls: 13,\n  vars: 1,\n  consts: [[3, \"formGroup\"], [1, \"form-container\"], [\"matInput\", \"\", \"placeholder\", \"Name\", \"formControlName\", \"name\"], [\"matInput\", \"\", \"placeholder\", \"Description\", \"formControlName\", \"description\"], [\"mat-raised-button\", \"\", \"color\", \"primary\", 3, \"click\"]],\n  template: function EpicAddEditComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\")(1, \"form\", 0)(2, \"div\", 1)(3, \"mat-form-field\")(4, \"mat-label\");\n      i0.ɵɵtext(5, \"Name\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(6, \"input\", 2);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(7, \"mat-form-field\")(8, \"mat-label\");\n      i0.ɵɵtext(9, \"Description\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(10, \"input\", 3);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(11, \"button\", 4);\n      i0.ɵɵlistener(\"click\", function EpicAddEditComponent_Template_button_click_11_listener() {\n        return ctx.save();\n      });\n      i0.ɵɵtext(12, \"Save\");\n      i0.ɵɵelementEnd()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"formGroup\", ctx.form);\n    }\n  },\n  dependencies: [i3.MatFormField, i3.MatLabel, i4.MatButton, i5.MatInput, i6.ɵNgNoValidate, i6.DefaultValueAccessor, i6.NgControlStatus, i6.NgControlStatusGroup, i6.FormGroupDirective, i6.FormControlName],\n  styles: [\".form-container[_ngcontent-%COMP%] {\\n  display: flex;\\n  flex-direction: row;\\n  gap: 1rem;\\n  margin: 20px;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvcGFnZXMvYXBwbGljYXRpb24vcHJvamVjdC1zZXR0aW5nL3Byb2plY3QtZXBpYy9lcGljLWFkZC1lZGl0LmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsYUFBQTtFQUNBLG1CQUFBO0VBQ0EsU0FBQTtFQUNBLFlBQUE7QUFDRiIsInNvdXJjZXNDb250ZW50IjpbIi5mb3JtLWNvbnRhaW5lcntcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC1kaXJlY3Rpb246IHJvdztcbiAgZ2FwOiAxcmVtO1xuICBtYXJnaW46IDIwcHg7XG59XG4iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n});","map":{"version":3,"mappings":"AACA,SAAQA,WAAW,EAAEC,SAAS,EAAEC,UAAU,QAAO,gBAAgB;AACjE,SAAQC,OAAO,EAAEC,SAAS,QAAO,MAAM;;;;;;;;AASvC,OAAM,MAAOC,oBAAoB;EAU/BC,YACUC,KAAqB,EACrBC,MAAc,EACdC,WAAwB;IAFxB,UAAK,GAALF,KAAK;IACL,WAAM,GAANC,MAAM;IACN,gBAAW,GAAXC,WAAW;IAZrB,SAAI,GAAc,IAAIR,SAAS,CAAC;MAC9BS,EAAE,EAAE,IAAIV,WAAW,CAAC,IAAI,CAAC;MACzBW,IAAI,EAAE,IAAIX,WAAW,CAAC,IAAI,EAAEE,UAAU,CAACU,QAAQ,CAAC;MAChDC,WAAW,EAAE,IAAIb,WAAW,CAAC,IAAI,EAAEE,UAAU,CAACU,QAAQ;KACvD,CAAC;IAEF,SAAI,GAAG,IAAIT,OAAO,EAAE;EAQpB;EAEQW,OAAO,CAACJ,EAAU;IACxB,IAAI,CAACD,WAAW,CAACK,OAAO,CAACJ,EAAE,CAAC,CACzBK,IAAI,CAACX,SAAS,CAAC,IAAI,CAACY,IAAI,CAAC,CAAC,CAC1BC,SAAS,CAACC,GAAG,IAAG;MACf,IAAI,CAACC,IAAI,CAACC,UAAU,CAACF,GAAG,CAAC;IAC3B,CAAC,CAAC;EACN;EAEAG,QAAQ;IACN,IAAI,CAACd,KAAK,CAACe,MAAM,CAACL,SAAS,CAACK,MAAM,IAAG;MACnC,IAAIA,MAAM,CAAC,IAAI,CAAC,EAAE;QAChB,IAAI,CAACC,MAAM,GAAG,CAACD,MAAM,CAAC,IAAI,CAAC;QAC3B,IAAI,CAACR,OAAO,CAAC,IAAI,CAACS,MAAM,CAAC;;IAE7B,CAAC,CAAC;EACJ;EACAC,IAAI;IACF,IAAI,CAACL,IAAI,CAACM,gBAAgB,EAAE;IAC5B,IAAI,IAAI,CAACN,IAAI,CAACO,OAAO,EAAE;MACrB;;IAGF,IAAI,IAAI,CAACH,MAAM,EAAE;MACf,IAAI,CAACd,WAAW,CAACkB,UAAU,CAAC,IAAI,CAACR,IAAI,CAACS,KAAK,CAAC,CACzCb,IAAI,CAACX,SAAS,CAAC,IAAI,CAACY,IAAI,CAAC,CAAC,CAC1BC,SAAS,CAAC,MAAK;QACd,IAAI,CAACT,MAAM,CAACqB,QAAQ,CAAC,CAAC,4BAA4B,CAAC,CAAC,CAACC,IAAI,EAAE;MAC7D,CAAC,CAAC;KACL,MAAM;MACL,IAAI,CAACrB,WAAW,CAACsB,UAAU,CAAC,IAAI,CAACZ,IAAI,CAACS,KAAK,CAAC,CACzCb,IAAI,CAACX,SAAS,CAAC,IAAI,CAACY,IAAI,CAAC,CAAC,CAC1BC,SAAS,CAAC,MAAK;QACd,IAAI,CAACT,MAAM,CAACqB,QAAQ,CAAC,CAAC,4BAA4B,CAAC,CAAC,CAACC,IAAI,EAAE;MAC7D,CAAC,CAAC;;EAER;EACAE,WAAW;IACT,IAAI,CAAChB,IAAI,CAACiB,IAAI,CAAC,IAAI,CAAC;IACpB,IAAI,CAACjB,IAAI,CAACkB,QAAQ,EAAE;EACtB;;AAxDW7B,oBAAoB;mBAApBA,oBAAoB;AAAA;AAApBA,oBAAoB;QAApBA,oBAAoB;EAAA8B;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCXjCC,2BAAK;MAIcA,oBAAI;MAAAA,iBAAY;MAC3BA,2BAA0D;MAC5DA,iBAAiB;MACjBA,sCAAgB;MACHA,2BAAW;MAAAA,iBAAY;MAClCA,4BAAwE;MAC1EA,iBAAiB;MAGjBA,kCAA2D;MAAjBA;QAAA,OAASC,UAAM;MAAA,EAAC;MAACD,qBAAI;MAAAA,iBAAS;;;MAZtEA,eAAkB;MAAlBA,oCAAkB","names":["FormControl","FormGroup","Validators","Subject","takeUntil","EpicAddEditComponent","constructor","route","router","epicService","id","name","required","description","getEpic","pipe","sub$","subscribe","res","form","patchValue","ngOnInit","params","epicId","save","markAllAsTouched","invalid","updateEpic","value","navigate","then","createEpic","ngOnDestroy","next","complete","selectors","decls","vars","consts","template","i0","ctx"],"sourceRoot":"","sources":["/Users/macbookpro/Desktop/GitHubRepo/Task-Manager-with-NgRx/src/app/pages/application/project-setting/project-epic/epic-add-edit.component.ts","/Users/macbookpro/Desktop/GitHubRepo/Task-Manager-with-NgRx/src/app/pages/application/project-setting/project-epic/epic-add-edit.component.html"],"sourcesContent":["import {Component, OnDestroy, OnInit} from '@angular/core';\nimport {FormControl, FormGroup, Validators} from \"@angular/forms\";\nimport {Subject, takeUntil} from \"rxjs\";\nimport {ActivatedRoute, Router} from \"@angular/router\";\nimport {EpicService} from \"../../../../core/services/epic.service\";\n\n@Component({\n  selector: 'app-epic-add-edit',\n  templateUrl: './epic-add-edit.component.html',\n  styleUrls: ['./epic-add-edit.component.scss']\n})\nexport class EpicAddEditComponent implements OnInit, OnDestroy{\n  form: FormGroup = new FormGroup({\n    id: new FormControl(null),\n    name: new FormControl(null, Validators.required),\n    description: new FormControl(null, Validators.required)\n  })\n\n  sub$ = new Subject();\n\n  epicId!: number;\n  constructor(\n    private route: ActivatedRoute,\n    private router: Router,\n    private epicService: EpicService,\n  ) {\n  }\n\n  private getEpic(id: number) {\n    this.epicService.getEpic(id)\n      .pipe(takeUntil(this.sub$))\n      .subscribe(res => {\n        this.form.patchValue(res)\n      })\n  }\n\n  ngOnInit(): void {\n    this.route.params.subscribe(params => {\n      if (params['id']) {\n        this.epicId = +params['id'];\n        this.getEpic(this.epicId)\n      }\n    })\n  }\n  save() {\n    this.form.markAllAsTouched()\n    if (this.form.invalid) {\n      return;\n    }\n\n    if (this.epicId) {\n      this.epicService.updateEpic(this.form.value)\n        .pipe(takeUntil(this.sub$))\n        .subscribe(() => {\n          this.router.navigate(['/application/setting/epics']).then()\n        })\n    } else {\n      this.epicService.createEpic(this.form.value)\n        .pipe(takeUntil(this.sub$))\n        .subscribe(() => {\n          this.router.navigate(['/application/setting/epics']).then()\n        })\n    }\n  }\n  ngOnDestroy(): void {\n    this.sub$.next(null)\n    this.sub$.complete()\n  }\n}\n","<div>\n  <form [formGroup]=\"form\">\n    <div class=\"form-container\">\n      <mat-form-field>\n        <mat-label>Name</mat-label>\n        <input matInput placeholder=\"Name\" formControlName=\"name\">\n      </mat-form-field>\n      <mat-form-field>\n        <mat-label>Description</mat-label>\n        <input matInput placeholder=\"Description\" formControlName=\"description\">\n      </mat-form-field>\n\n\n      <button mat-raised-button color=\"primary\" (click)=\"save()\">Save</button>\n    </div>\n\n  </form>\n</div>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}