{"ast":null,"code":"import { BaseService } from \"./base.service\";\nimport * as i0 from \"@angular/core\";\nexport class IssueTypesService extends BaseService {\n  // apiUrl = environment.apiUrl + 'issue-type';\n  // constructor(private http: HttpClient) {}\n  setIssueType(issueType) {\n    localStorage.setItem('issueType', JSON.stringify(issueType));\n    return this.http.post('issue-type', issueType);\n  }\n  getIssueType() {\n    return this.get('issue-type');\n  }\n  getIssueTypes() {\n    return this.get('issue-type');\n  }\n  getIssueTypeByID(id) {\n    return this.get(`issue-type/${id}`); //`${this.apiUrl}/${id}`\n  }\n\n  getIssueTypesByID(id) {\n    return this.get(`issue-type/${id}`); //`${this.apiUrl}/${id}`\n  }\n  // updateIssueType(id: number, issueType: IssueType): Observable<any> {\n  //   return this.http.put(`${this.apiUrl}/${id}`, issueType);\n  // }\n  updateIssueType(data) {\n    return this.put(`issue-type/${data.id}`, data);\n  }\n  deleteIssueType(id) {\n    return this.delete(`issue-type/${id}`);\n  }\n}\nIssueTypesService.ɵfac = /*@__PURE__*/function () {\n  let ɵIssueTypesService_BaseFactory;\n  return function IssueTypesService_Factory(t) {\n    return (ɵIssueTypesService_BaseFactory || (ɵIssueTypesService_BaseFactory = i0.ɵɵgetInheritedFactory(IssueTypesService)))(t || IssueTypesService);\n  };\n}();\nIssueTypesService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: IssueTypesService,\n  factory: IssueTypesService.ɵfac,\n  providedIn: 'root'\n});","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}