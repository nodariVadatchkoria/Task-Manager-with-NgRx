{"ast":null,"code":"import { createReducer } from \"@ngrx/store\";\nconst initialState = {\n  users: []\n};\nexport const userReducer = createReducer(initialState);","map":{"version":3,"mappings":"AAAA,SAAQA,aAAa,QAAW,aAAa;AAO7C,MAAMC,YAAY,GAAE;EAChBC,KAAK,EAAE;CACV;AAID,OAAO,MAAMC,WAAW,GAAGH,aAAa,CACpCC,YAAY,CAkBf","names":["createReducer","initialState","users","userReducer"],"sourceRoot":"","sources":["/Users/macbookpro/Desktop/GitHubRepo/Task-Manager-with-NgRx/src/app/pages/application/project-setting/project-users/user/store /user.reducer.ts"],"sourcesContent":["import {createReducer, on} from \"@ngrx/store\";\nimport {User} from \"../../../../../../core/interfaces\";\n\nexport interface UserStateModel {\n    users: User[];\n\n}\nconst initialState ={\n    users: [],\n}\n\n\n\nexport const userReducer = createReducer(\n    initialState,\n    // on(UserActions.loadUsers, state => state),\n    // on(UserActions.loadUsersSuccess, (state, action) => {\n    //     return userAdapter.setAll(action.users, state);\n    //\n    // }),\n    // on(UserActions.loadUsersFailure, (state, action) => state),\n    // on(UserActions.addUser, (state, action) => {\n    //     return userAdapter.addOne(action.user, state);\n    // }),\n    // on(UserActions.updateUser, (state, action) => {\n    //     return userAdapter.updateOne(action.user, state);\n    //\n    // }),\n    // on(UserActions.deleteUser, (state, action) => {\n    //     return userAdapter.removeOne(action.id, state);\n    //\n    // }),\n)"]},"metadata":{},"sourceType":"module","externalDependencies":[]}