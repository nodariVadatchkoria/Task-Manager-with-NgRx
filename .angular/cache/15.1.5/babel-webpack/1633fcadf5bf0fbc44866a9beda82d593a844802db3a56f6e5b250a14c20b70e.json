{"ast":null,"code":"import { createSelector } from \"@ngrx/store\";\nexport const currentProject = createSelector(state => state.app.project.currentProject, currentProject => currentProject);\nexport const getProject = createSelector(state => state.app.project.projects, (projects, props) => projects.find(project => project.id === +props.projectId));","map":{"version":3,"mappings":"AAAA,SAAQA,cAAc,QAAO,aAAa;AAG1C,OAAO,MAAMC,cAAc,GAAGD,cAAc,CACvCE,KAAU,IAAKA,KAAK,CAACC,GAAG,CAACC,OAAO,CAACH,cAAc,EAC/CA,cAAc,IAAKA,cAAc,CACrC;AACD,OAAO,MAAMI,UAAU,GAAGL,cAAc,CACnCE,KAAU,IAAKA,KAAK,CAACC,GAAG,CAACC,OAAO,CAACE,QAAQ,EAC1C,CAACA,QAAoB,EAAEC,KAA2B,KAAKD,QAAQ,CAACE,IAAI,CAAEJ,OAAO,IAAKA,OAAO,CAACK,EAAE,KAAK,CAACF,KAAK,CAACG,SAAS,CAAC,CACrH","names":["createSelector","currentProject","state","app","project","getProject","projects","props","find","id","projectId"],"sourceRoot":"","sources":["/Users/macbookpro/Desktop/GitHubRepo/Task-Manager-with-NgRx/src/app/store/rxProject/project.selectors.ts"],"sourcesContent":["import {createSelector} from \"@ngrx/store\";\nimport {IProject} from \"../../core/interfaces/iproject\";\n\nexport const currentProject = createSelector(\n    (state: any) => state.app.project.currentProject,\n    (currentProject) => currentProject\n)\nexport const getProject = createSelector(\n    (state: any) => state.app.project.projects,\n    (projects: IProject[], props: { projectId: number}) => projects.find((project) => project.id === +props.projectId)\n)\n\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}