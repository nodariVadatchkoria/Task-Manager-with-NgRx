{"ast":null,"code":"import { Subject, takeUntil } from \"rxjs\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../core/services/project.service\";\nimport * as i2 from \"../../facades/project-facade.service\";\nimport * as i3 from \"../../core/services/board.service\";\nimport * as i4 from \"@angular/router\";\nimport * as i5 from \"@angular/common\";\nimport * as i6 from \"../home/navigation/navigation.component\";\nimport * as i7 from \"@angular/forms\";\nconst _c0 = [\"project\"];\nfunction DashboardComponent_option_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 12);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const project_r4 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", project_r4.id);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", project_r4.name, \" \");\n  }\n}\nconst _c1 = function (a1) {\n  return [\"/dashboard\", a1];\n};\nfunction DashboardComponent_li_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\")(1, \"a\", 13);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const board_r5 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction1(2, _c1, board_r5.id));\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(board_r5.name);\n  }\n}\nfunction DashboardComponent_div_15_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"h2\");\n    i0.ɵɵtext(2, \"Dashboard\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"p\");\n    i0.ɵɵtext(4, \"Choose a board from the sidebar\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(5, \"router-outlet\");\n    i0.ɵɵelementEnd();\n  }\n}\nexport class DashboardComponent {\n  constructor(projectService, projectFacade, boardService, route) {\n    this.projectService = projectService;\n    this.projectFacade = projectFacade;\n    this.boardService = boardService;\n    this.route = route;\n    this.scrolledTop = false;\n    this.scrolled = true;\n    this.projects = [];\n    this.projects$ = this.projectService.getAllProjects();\n    this.currentProject = this.projectFacade.getProject();\n    this.sub$ = new Subject();\n    this.boards$ = this.boardService.getBoardss();\n    this.boardId = null;\n  }\n  ngOnInit() {\n    this.route.params.subscribe(params => {\n      if (params['id']) {\n        this.boardId = +params['id'];\n      } else {\n        this.boardId = null;\n      }\n    });\n    this.getMyProjects();\n  }\n  getMyProjects() {\n    this.projectFacade.getMyProjects$().pipe(takeUntil(this.sub$)).subscribe();\n  }\n  ngAfterViewInit() {\n    this.project.nativeElement.addEventListener('scroll', () => {\n      let firstElPos = this.project.nativeElement.firstChild.getBoundingClientRect().top;\n      firstElPos <= -10 ? this.scrolled = true : this.scrolled = false;\n      firstElPos <= -window.innerHeight ? this.scrolledTop = true : this.scrolledTop = false;\n    });\n  }\n  selectedProject(projectId) {\n    this.projectFacade.setProjectId(projectId);\n    setTimeout(() => {\n      location.reload();\n    }, 6000);\n  }\n}\nDashboardComponent.ɵfac = function DashboardComponent_Factory(t) {\n  return new (t || DashboardComponent)(i0.ɵɵdirectiveInject(i1.ProjectService), i0.ɵɵdirectiveInject(i2.ProjectFacade), i0.ɵɵdirectiveInject(i3.BoardService), i0.ɵɵdirectiveInject(i4.ActivatedRoute));\n};\nDashboardComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: DashboardComponent,\n  selectors: [[\"app-dashboard\"]],\n  viewQuery: function DashboardComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c0, 5);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.project = _t.first);\n    }\n  },\n  decls: 16,\n  vars: 9,\n  consts: [[1, \"navigation\"], [\"project\", \"\"], [3, \"scrolled\"], [1, \"projectList\"], [1, \"select\", 3, \"ngModel\", \"ngModelChange\"], [\"selected\", \"\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [1, \"container\"], [1, \"sidebar\"], [4, \"ngFor\", \"ngForOf\"], [1, \"content\"], [4, \"ngIf\"], [3, \"value\"], [3, \"routerLink\"]],\n  template: function DashboardComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0, 1);\n      i0.ɵɵelement(2, \"app-navigation\", 2);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"div\", 3);\n      i0.ɵɵtext(4, \" Select Project:\");\n      i0.ɵɵelementStart(5, \"select\", 4);\n      i0.ɵɵlistener(\"ngModelChange\", function DashboardComponent_Template_select_ngModelChange_5_listener($event) {\n        return ctx.selectedProject($event);\n      });\n      i0.ɵɵelement(6, \"option\", 5);\n      i0.ɵɵtemplate(7, DashboardComponent_option_7_Template, 2, 2, \"option\", 6);\n      i0.ɵɵpipe(8, \"async\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(9, \"div\", 7)(10, \"div\", 8)(11, \"ul\");\n      i0.ɵɵtemplate(12, DashboardComponent_li_12_Template, 3, 4, \"li\", 9);\n      i0.ɵɵpipe(13, \"async\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(14, \"div\", 10);\n      i0.ɵɵtemplate(15, DashboardComponent_div_15_Template, 6, 0, \"div\", 11);\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"scrolled\", ctx.scrolled);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngModel\", ctx.currentProject == null ? null : ctx.currentProject.id);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind1(8, 5, ctx.projects$));\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind1(13, 7, ctx.boards$));\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngIf\", !ctx.boardId);\n    }\n  },\n  dependencies: [i5.NgForOf, i5.NgIf, i4.RouterOutlet, i4.RouterLink, i6.NavigationComponent, i7.NgSelectOption, i7.ɵNgSelectMultipleOption, i7.SelectControlValueAccessor, i7.NgControlStatus, i7.NgModel, i5.AsyncPipe],\n  styles: [\".navigation[_ngcontent-%COMP%] {\\n  min-height: 13%;\\n  min-width: 100%;\\n  background-color: #7a1de0;\\n}\\n\\n.projectList[_ngcontent-%COMP%] {\\n  margin-top: 4%;\\n  text-align: center;\\n  font-size: 1.5em;\\n  border-bottom: 2px solid #7a1de0;\\n  padding-bottom: 1%;\\n}\\n\\n.select[_ngcontent-%COMP%] {\\n  width: 25%;\\n  height: 100%;\\n  border-radius: 5px;\\n  align-items: center;\\n  justify-content: center;\\n  margin: 0 auto;\\n  text-align: center;\\n  font-size: 20px;\\n}\\n\\n.select[_ngcontent-%COMP%]:hover {\\n  background-color: #efebeb;\\n}\\n\\n.container[_ngcontent-%COMP%] {\\n  display: flex;\\n  margin: 20px;\\n  gap: 20px;\\n}\\n\\n.content[_ngcontent-%COMP%] {\\n  flex: 1 1 auto;\\n  display: flex;\\n  text-align: center;\\n  font-size: 1.5em;\\n  padding-bottom: 1%;\\n  background-color: #efeeee;\\n  border-radius: 5px;\\n  box-shadow: 0 0 10px 0 rgba(0, 0, 0, 0.2);\\n}\\n\\n.sidebar[_ngcontent-%COMP%] {\\n  flex: 0 0 300px;\\n  display: flex;\\n  flex-direction: column;\\n  gap: 20px;\\n  border-radius: 5px;\\n  background-color: #efeeee;\\n  box-shadow: 0 0 10px 0 rgba(0, 0, 0, 0.2);\\n}\\n\\nli[_ngcontent-%COMP%], a[_ngcontent-%COMP%] {\\n  text-decoration: none;\\n  list-style: none;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvcGFnZXMvZGFzaGJvYXJkL2Rhc2hib2FyZC5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLGVBQUE7RUFDQSxlQUFBO0VBQ0EseUJBQUE7QUFDRjs7QUFHQTtFQUNFLGNBQUE7RUFDQSxrQkFBQTtFQUNBLGdCQUFBO0VBQ0EsZ0NBQUE7RUFDQSxrQkFBQTtBQUFGOztBQUVBO0VBQ0UsVUFBQTtFQUNBLFlBQUE7RUFDQSxrQkFBQTtFQUNBLG1CQUFBO0VBQ0EsdUJBQUE7RUFDQSxjQUFBO0VBQ0Esa0JBQUE7RUFDQSxlQUFBO0FBQ0Y7O0FBQUU7RUFDRSx5QkFBQTtBQUVKOztBQUNBO0VBQ0UsYUFBQTtFQUNBLFlBQUE7RUFDQSxTQUFBO0FBRUY7O0FBQUE7RUFDRSxjQUFBO0VBQ0EsYUFBQTtFQUNBLGtCQUFBO0VBQ0EsZ0JBQUE7RUFDQSxrQkFBQTtFQUdBLHlCQUFBO0VBQ0Esa0JBQUE7RUFDQSx5Q0FBQTtBQUNGOztBQUVBO0VBQ0UsZUFBQTtFQUNBLGFBQUE7RUFDQSxzQkFBQTtFQUNBLFNBQUE7RUFDQSxrQkFBQTtFQUNBLHlCQUFBO0VBQ0EseUNBQUE7QUFDRjs7QUFDQTtFQUNFLHFCQUFBO0VBQ0EsZ0JBQUE7QUFFRiIsInNvdXJjZXNDb250ZW50IjpbIi5uYXZpZ2F0aW9uIHtcbiAgbWluLWhlaWdodDogMTMlO1xuICBtaW4td2lkdGg6IDEwMCU7XG4gIGJhY2tncm91bmQtY29sb3I6ICM3YTFkZTA7XG5cbn1cblxuLnByb2plY3RMaXN0IHtcbiAgbWFyZ2luLXRvcDogNCU7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgZm9udC1zaXplOiAxLjVlbTtcbiAgYm9yZGVyLWJvdHRvbTogMnB4IHNvbGlkICM3YTFkZTA7XG4gIHBhZGRpbmctYm90dG9tOiAxJTtcbn1cbi5zZWxlY3Qge1xuICB3aWR0aDogMjUlO1xuICBoZWlnaHQ6IDEwMCU7XG4gIGJvcmRlci1yYWRpdXM6IDVweDtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gIG1hcmdpbjogMCBhdXRvO1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIGZvbnQtc2l6ZTogMjBweDtcbiAgJjpob3ZlciB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogI2VmZWJlYjtcbiAgfVxufVxuLmNvbnRhaW5lcntcbiAgZGlzcGxheTogZmxleDtcbiAgbWFyZ2luOiAyMHB4O1xuICBnYXA6IDIwcHg7XG59XG4uY29udGVudCB7XG4gIGZsZXg6IDEgMSBhdXRvO1xuICBkaXNwbGF5OiBmbGV4O1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIGZvbnQtc2l6ZTogMS41ZW07XG4gIHBhZGRpbmctYm90dG9tOiAxJTtcbiAgLy93aWR0aDogMTAwJTtcbiAgLy9oZWlnaHQ6IDMwMHB4O1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZWZlZWVlO1xuICBib3JkZXItcmFkaXVzOiA1cHg7XG4gIGJveC1zaGFkb3c6IDAgMCAxMHB4IDAgcmdiYSgwLCAwLCAwLCAwLjIpO1xuXG59XG4uc2lkZWJhcntcbiAgZmxleDogMCAwIDMwMHB4O1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICBnYXA6MjBweDtcbiAgYm9yZGVyLXJhZGl1czogNXB4O1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZWZlZWVlO1xuICBib3gtc2hhZG93OiAwIDAgMTBweCAwIHJnYmEoMCwgMCwgMCwgMC4yKTtcbn1cbmxpLCBhe1xuICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG4gIGxpc3Qtc3R5bGU6IG5vbmU7XG59XG4iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n});","map":{"version":3,"mappings":"AACA,SAAoBA,OAAO,EAAEC,SAAS,QAAO,MAAM;;;;;;;;;;;;ICO/CC,kCAEC;IACCA,YACF;IAAAA,iBAAS;;;;IAHDA,qCAAoB;IAE1BA,eACF;IADEA,gDACF;;;;;;;;IAOEA,0BAA0C;IACGA,YAAc;IAAAA,iBAAI;;;;IAA1DA,eAAuC;IAAvCA,oEAAuC;IAACA,eAAc;IAAdA,mCAAc;;;;;IAM7DA,2BAAsB;IAChBA,yBAAS;IAAAA,iBAAK;IAClBA,yBAAG;IAAAA,+CAA+B;IAAAA,iBAAI;IACtCA,gCAA+B;IACjCA,iBAAM;;;ADjBV,OAAM,MAAOC,kBAAkB;EAW7BC,YACUC,cAA8B,EAC9BC,aAA4B,EAC5BC,YAA0B,EAC1BC,KAAqB;IAHrB,mBAAc,GAAdH,cAAc;IACd,kBAAa,GAAbC,aAAa;IACb,iBAAY,GAAZC,YAAY;IACZ,UAAK,GAALC,KAAK;IAbf,gBAAW,GAAY,KAAK;IAC5B,aAAQ,GAAY,IAAI;IAExB,aAAQ,GAAQ,EAAE;IAClB,cAAS,GAA2B,IAAI,CAACH,cAAc,CAACI,cAAc,EAAE;IACxE,mBAAc,GAA0B,IAAI,CAACH,aAAa,CAACI,UAAU,EAAE;IACvE,SAAI,GAAG,IAAIV,OAAO,EAAE;IACpB,YAAO,GAAG,IAAI,CAACO,YAAY,CAACI,UAAU,EAAE;IACxC,YAAO,GAAgB,IAAI;EAO3B;EAGAC,QAAQ;IACN,IAAI,CAACJ,KAAK,CAACK,MAAM,CAACC,SAAS,CAACD,MAAM,IAAG;MACnC,IAAIA,MAAM,CAAC,IAAI,CAAC,EAAE;QAChB,IAAI,CAACE,OAAO,GAAG,CAACF,MAAM,CAAC,IAAI,CAAC;OAC7B,MAAM;QACL,IAAI,CAACE,OAAO,GAAG,IAAI;;IAEvB,CAAC,CAAC;IACF,IAAI,CAACC,aAAa,EAAE;EACtB;EACAA,aAAa;IACX,IAAI,CAACV,aAAa,CAACW,cAAc,EAAE,CAChCC,IAAI,CAACjB,SAAS,CAAC,IAAI,CAACkB,IAAI,CAAC,CAAC,CAC1BL,SAAS,EAAE;EAChB;EACAM,eAAe;IACb,IAAI,CAACC,OAAO,CAACC,aAAa,CAACC,gBAAgB,CAAC,QAAQ,EAAE,MAAK;MACzD,IAAIC,UAAU,GAAG,IAAI,CAACH,OAAO,CAACC,aAAa,CAACG,UAAU,CAACC,qBAAqB,EAAE,CAACC,GAAG;MAClFH,UAAU,IAAI,CAAC,EAAE,GAAG,IAAI,CAACI,QAAQ,GAAG,IAAI,GAAG,IAAI,CAACA,QAAQ,GAAG,KAAK;MAChEJ,UAAU,IAAI,CAACK,MAAM,CAACC,WAAW,GAAG,IAAI,CAACC,WAAW,GAAG,IAAI,GAAG,IAAI,CAACA,WAAW,GAAG,KAAK;IACxF,CAAC,CAAC;EACJ;EAEAC,eAAe,CAACC,SAAc;IAC5B,IAAI,CAAC3B,aAAa,CAAC4B,YAAY,CAACD,SAAS,CAAC;IAC1CE,UAAU,CAAC,MAAK;MACdC,QAAQ,CAACC,MAAM,EAAE;IACnB,CAAC,EAAE,IAAI,CAAC;EACV;;AAhDWlC,kBAAkB;mBAAlBA,kBAAkB;AAAA;AAAlBA,kBAAkB;QAAlBA,kBAAkB;EAAAmC;EAAAC;IAAA;;;;;;;;;;;;;MCb/BrC,iCAAiC;MAC/BA,oCAAuD;MACzDA,iBAAM;MAEJA,8BAAyB;MACvBA,gCAAe;MAAAA,iCACkE;MAAzDA;QAAA,OAAiBsC,2BAAuB;MAAA,EAAC;MACjEtC,4BAA0B;MAC1BA,yEAIS;;MAEXA,iBAAS;MAEXA,8BAAuB;MAGjBA,mEAEK;;MACPA,iBAAK;MAEPA,gCAAqB;MAEnBA,sEAIM;MACRA,iBAAM;;;MA9BUA,eAAqB;MAArBA,uCAAqB;MAIZA,eAA8B;MAA9BA,mFAA8B;MAGzBA,eAAoB;MAApBA,6DAAoB;MAWxBA,eAAkB;MAAlBA,4DAAkB;MAOpCA,eAAc;MAAdA,mCAAc","names":["Subject","takeUntil","i0","DashboardComponent","constructor","projectService","projectFacade","boardService","route","getAllProjects","getProject","getBoardss","ngOnInit","params","subscribe","boardId","getMyProjects","getMyProjects$","pipe","sub$","ngAfterViewInit","project","nativeElement","addEventListener","firstElPos","firstChild","getBoundingClientRect","top","scrolled","window","innerHeight","scrolledTop","selectedProject","projectId","setProjectId","setTimeout","location","reload","selectors","viewQuery","ctx"],"sourceRoot":"","sources":["/Users/macbookpro/Desktop/GitHubRepo/Task-Manager-with-NgRx/src/app/pages/dashboard/dashboard.component.ts","/Users/macbookpro/Desktop/GitHubRepo/Task-Manager-with-NgRx/src/app/pages/dashboard/dashboard.component.html"],"sourcesContent":["import {AfterViewInit, Component, ElementRef, OnInit, ViewChild} from '@angular/core';\nimport {Observable, Subject, takeUntil} from \"rxjs\";\nimport {IProject} from \"../../core/interfaces/iproject\";\nimport {ProjectService} from \"../../core/services/project.service\";\nimport {ProjectFacade} from \"../../facades/project-facade.service\";\nimport {BoardService} from \"../../core/services/board.service\";\nimport {ActivatedRoute} from \"@angular/router\";\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.scss']\n})\nexport class DashboardComponent implements AfterViewInit, OnInit {\n\n  scrolledTop: boolean = false;\n  scrolled: boolean = true;\n\n  projects: any = [];\n  projects$: Observable<IProject[]> = this.projectService.getAllProjects();\n  currentProject?: IProject | undefined = this.projectFacade.getProject()\n  sub$ = new Subject()\n  boards$ = this.boardService.getBoardss()\n  boardId:number| null = null;\n  constructor(\n    private projectService: ProjectService,\n    private projectFacade: ProjectFacade,\n    private boardService: BoardService,\n    private route: ActivatedRoute,\n  ) {\n  }\n\n  @ViewChild('project') project!: ElementRef;\n  ngOnInit(): void {\n    this.route.params.subscribe(params => {\n      if (params['id']) {\n        this.boardId = +params['id']\n      } else {\n        this.boardId = null\n      }\n    })\n    this.getMyProjects()\n  }\n  getMyProjects() {\n    this.projectFacade.getMyProjects$()\n      .pipe(takeUntil(this.sub$))\n      .subscribe()\n  }\n  ngAfterViewInit() {\n    this.project.nativeElement.addEventListener('scroll', () => {\n      let firstElPos = this.project.nativeElement.firstChild.getBoundingClientRect().top;\n      firstElPos <= -10 ? this.scrolled = true : this.scrolled = false;\n      firstElPos <= -window.innerHeight ? this.scrolledTop = true : this.scrolledTop = false;\n    })\n  }\n\n  selectedProject(projectId: any) {\n    this.projectFacade.setProjectId(projectId)\n    setTimeout(() => {\n      location.reload()\n    }, 6000)\n  }\n\n}\n","<div #project class=\"navigation\">\n  <app-navigation [scrolled]=\"scrolled\"></app-navigation>\n</div>\n\n  <div class=\"projectList\">\n    Select Project:<select [ngModel]=\"currentProject?.id\"\n                            (ngModelChange)=\"selectedProject($event)\" class=\"select\">\n    <option selected></option>\n    <option *ngFor=\"let project of projects$ | async\"\n            [value]=\"project.id\"\n    >\n      {{project.name}}\n    </option>\n\n  </select>\n  </div>\n<div class=\"container\">\n  <div class=\"sidebar\">\n    <ul>\n      <li *ngFor=\"let board of boards$ | async\">\n        <a [routerLink]=\"['/dashboard', board.id]\">{{board.name}}</a>\n      </li>\n    </ul>\n  </div>\n  <div class=\"content\">\n\n    <div *ngIf=\"!boardId\">\n      <h2>Dashboard</h2>\n      <p>Choose a board from the sidebar</p>\n      <router-outlet></router-outlet>\n    </div>\n  </div>\n\n</div>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}