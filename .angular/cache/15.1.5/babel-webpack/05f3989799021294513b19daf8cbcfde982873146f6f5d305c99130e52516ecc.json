{"ast":null,"code":"import { FormArray, FormControl, FormGroup, Validators } from \"@angular/forms\";\nimport { MAT_DIALOG_DATA } from \"@angular/material/dialog\";\nimport { shareReplay, Subject, takeUntil } from \"rxjs\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../core/services/task.service\";\nimport * as i2 from \"../../core/services\";\nimport * as i3 from \"../../core/services/epic.service\";\nimport * as i4 from \"../../core/services/project.service\";\nimport * as i5 from \"@angular/material/dialog\";\nfunction TaskAddEditComponent_mat_option_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\", 18);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const type_r6 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", type_r6.id);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", type_r6.name, \" \");\n  }\n}\nfunction TaskAddEditComponent_mat_option_17_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\", 18);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const epic_r7 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", epic_r7.id);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", epic_r7.name, \" \");\n  }\n}\nfunction TaskAddEditComponent_mat_option_21_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\", 18);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const priority_r8 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", priority_r8.id);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", priority_r8.name, \" \");\n  }\n}\nfunction TaskAddEditComponent_mat_option_24_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\", 18);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const user_r9 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", user_r9.id);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate2(\" \", user_r9.firstName, \" \", user_r9.lastName, \" \");\n  }\n}\nfunction TaskAddEditComponent_mat_option_28_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\", 18);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const user_r10 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", user_r10.id);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate2(\" \", user_r10.firstName, \" \", user_r10.lastName, \" \");\n  }\n}\nfunction TaskAddEditComponent_div_31_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 19)(1, \"mat-form-field\");\n    i0.ɵɵelement(2, \"input\", 20);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const property_r11 = ctx.$implicit;\n    const i_r12 = ctx.index;\n    const ctx_r5 = i0.ɵɵnextContext();\n    let tmp_1_0;\n    let tmp_2_0;\n    i0.ɵɵproperty(\"formGroupName\", i_r12);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"placeholder\", (tmp_1_0 = property_r11.get(\"name\")) == null ? null : tmp_1_0.value)(\"required\", (tmp_2_0 = ctx_r5.form.get(\"isRequired\")) == null ? null : tmp_2_0.value);\n  }\n}\nexport class TaskAddEditComponent {\n  constructor(taskService, issueTypeService, epicService, projectService, dialogRef, data) {\n    this.taskService = taskService;\n    this.issueTypeService = issueTypeService;\n    this.epicService = epicService;\n    this.projectService = projectService;\n    this.dialogRef = dialogRef;\n    this.data = data;\n    this.form = new FormGroup({\n      id: new FormControl(''),\n      name: new FormControl('', Validators.required),\n      description: new FormControl('', Validators.required),\n      issueTypeId: new FormControl('', Validators.required),\n      epicId: new FormControl(''),\n      boardId: new FormControl('', Validators.required),\n      boardColumnId: new FormControl(''),\n      isBacklog: new FormControl(false, Validators.required),\n      priority: new FormControl('', Validators.required),\n      taskStatus: new FormControl(this.data.column?.taskStatus || 'ToDo', Validators.required),\n      assigneeId: new FormControl(''),\n      reporterId: new FormControl('', Validators.required),\n      taskProperty: new FormArray([])\n    });\n    this.sub$ = new Subject();\n    this.types$ = this.issueTypeService.getIssueType();\n    this.epics$ = this.epicService.getEpics();\n    this.users$ = this.projectService.getProjectUsers().pipe(shareReplay(2));\n    this.priorities = [{\n      id: 'LOW',\n      name: 'Low'\n    }, {\n      id: 'MEDIUM',\n      name: 'Medium'\n    }, {\n      id: 'HIGH',\n      name: 'High'\n    }];\n  }\n  get taskProperty() {\n    return this.form.get('taskProperty');\n  }\n  ngOnInit() {\n    //this.getTask(this.data.taskId);\n    if (this.data.taskId) {\n      this.getTask(this.data.taskId);\n    } else {\n      this.form.get('issueTypeId')?.valueChanges.pipe(takeUntil(this.sub$)).subscribe(issueTypeId => {\n        this.getIssueTypeProperties(issueTypeId);\n      });\n    }\n    if (this.data.boardId) {\n      this.form.patchValue({\n        boardId: this.data.boardId\n      });\n    }\n    if (this.data.column) {\n      this.form.patchValue({\n        boardColumnId: this.data.column.id\n      });\n    }\n    console.log(this.types$);\n  }\n  getIssueTypeProperties(issueTypeId) {\n    this.issueTypeService.getIssueTypeByID(issueTypeId).pipe(takeUntil(this.sub$)).subscribe(res => {\n      this.taskProperty.clear();\n      res.issueTypeColumns.forEach(property => {\n        this.taskProperty.push(new FormGroup({\n          id: new FormControl(null),\n          name: new FormControl(property.name),\n          filedName: new FormControl(property.filedName),\n          value: new FormControl(null, property.isRequired ? Validators.required : null),\n          isRequired: new FormControl(property.isRequired)\n        }));\n      });\n    });\n  }\n  getTask(taskId) {\n    this.taskService.getTask(taskId).pipe(takeUntil(this.sub$)).subscribe(res => {\n      this.form.patchValue(res);\n      res.taskProperty.forEach(property => {\n        this.taskProperty.push(new FormGroup({\n          id: new FormControl(property.id),\n          name: new FormControl(property.name, Validators.required),\n          filedName: new FormControl(property.filedName, Validators.required),\n          value: new FormControl(property.value, Validators.required),\n          isRequired: new FormControl(property.isRequired, Validators.required)\n        }));\n      });\n    });\n  }\n  save() {\n    console.log(this.form);\n    this.form.markAllAsTouched();\n    if (this.form.invalid) return;\n    if (this.data.taskId) {\n      this.taskService.updateTask(this.data.taskId, this.form.value).pipe(takeUntil(this.sub$)).subscribe(res => {\n        this.dialogRef.close(res);\n      });\n    } else {\n      this.taskService.createTask(this.form.value).pipe(takeUntil(this.sub$)).subscribe(res => {\n        this.dialogRef.close(res);\n      });\n    }\n  }\n  ngOnDestroy() {\n    this.sub$.next(null);\n    this.sub$.complete();\n  }\n}\nTaskAddEditComponent.ɵfac = function TaskAddEditComponent_Factory(t) {\n  return new (t || TaskAddEditComponent)(i0.ɵɵdirectiveInject(i1.TaskService), i0.ɵɵdirectiveInject(i2.IssueTypesService), i0.ɵɵdirectiveInject(i3.EpicService), i0.ɵɵdirectiveInject(i4.ProjectService), i0.ɵɵdirectiveInject(i5.MatDialogRef), i0.ɵɵdirectiveInject(MAT_DIALOG_DATA));\n};\nTaskAddEditComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: TaskAddEditComponent,\n  selectors: [[\"app-task-add-edit\"]],\n  decls: 37,\n  vars: 16,\n  consts: [[1, \"container\"], [\"mat-dialog-title\", \"\"], [\"mat-dialog-content\", \"\", 3, \"formGroup\"], [1, \"content\"], [1, \"content-left\"], [\"matInput\", \"\", \"placeholder\", \"Task Name\", \"formControlName\", \"name\"], [\"matInput\", \"\", \"placeholder\", \"Description\", \"formControlName\", \"description\", 3, \"rows\"], [1, \"content-right\"], [\"placeholder\", \"Task Type\", \"formControlName\", \"issueTypeId\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"placeholder\", \"Epic\", \"formControlName\", \"epicId\"], [\"placeholder\", \"Task Priority\", \"formControlName\", \"priority\"], [\"placeholder\", \"Assign User\", \"formControlName\", \"assigneeId\"], [\"placeholder\", \"Reporter User\", \"formControlName\", \"reporterId\"], [\"formArrayName\", \"taskProperty\"], [3, \"formGroupName\", 4, \"ngFor\", \"ngForOf\"], [\"mat-dialog-actions\", \"\"], [\"mat-button\", \"\", 3, \"click\"], [3, \"value\"], [3, \"formGroupName\"], [\"matInput\", \"\", \"formControlName\", \"value\", 3, \"placeholder\", \"required\"]],\n  template: function TaskAddEditComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"h1\", 1);\n      i0.ɵɵtext(2, \"Create Task\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"div\", 2)(4, \"div\", 3)(5, \"div\", 4)(6, \"mat-form-field\");\n      i0.ɵɵelement(7, \"input\", 5);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(8, \"mat-form-field\");\n      i0.ɵɵelement(9, \"textarea\", 6);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(10, \"div\", 7)(11, \"mat-form-field\")(12, \"mat-select\", 8);\n      i0.ɵɵtemplate(13, TaskAddEditComponent_mat_option_13_Template, 2, 2, \"mat-option\", 9);\n      i0.ɵɵpipe(14, \"async\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(15, \"mat-form-field\")(16, \"mat-select\", 10);\n      i0.ɵɵtemplate(17, TaskAddEditComponent_mat_option_17_Template, 2, 2, \"mat-option\", 9);\n      i0.ɵɵpipe(18, \"async\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(19, \"mat-form-field\")(20, \"mat-select\", 11);\n      i0.ɵɵtemplate(21, TaskAddEditComponent_mat_option_21_Template, 2, 2, \"mat-option\", 9);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(22, \"mat-form-field\")(23, \"mat-select\", 12);\n      i0.ɵɵtemplate(24, TaskAddEditComponent_mat_option_24_Template, 2, 3, \"mat-option\", 9);\n      i0.ɵɵpipe(25, \"async\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(26, \"mat-form-field\")(27, \"mat-select\", 13);\n      i0.ɵɵtemplate(28, TaskAddEditComponent_mat_option_28_Template, 2, 3, \"mat-option\", 9);\n      i0.ɵɵpipe(29, \"async\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(30, \"div\", 14);\n      i0.ɵɵtemplate(31, TaskAddEditComponent_div_31_Template, 3, 3, \"div\", 15);\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(32, \"div\", 16)(33, \"button\", 17);\n      i0.ɵɵlistener(\"click\", function TaskAddEditComponent_Template_button_click_33_listener() {\n        return ctx.dialogRef.close();\n      });\n      i0.ɵɵtext(34, \"Cancel\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(35, \"button\", 17);\n      i0.ɵɵlistener(\"click\", function TaskAddEditComponent_Template_button_click_35_listener() {\n        return ctx.save();\n      });\n      i0.ɵɵtext(36, \"Create\");\n      i0.ɵɵelementEnd()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"formGroup\", ctx.form);\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"rows\", 11);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind1(14, 8, ctx.types$));\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind1(18, 10, ctx.epics$));\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngForOf\", ctx.priorities);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind1(25, 12, ctx.users$));\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind1(29, 14, ctx.users$));\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngForOf\", ctx.taskProperty.controls);\n    }\n  },\n  styles: [\".content[_ngcontent-%COMP%] {\\n  width: 100%;\\n  display: flex;\\n  gap: 50px;\\n  justify-content: space-between;\\n}\\n\\n.content-left[_ngcontent-%COMP%] {\\n  display: flex;\\n  flex-direction: column;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvc2hhcmVkL3Rhc2stYWRkLWVkaXQvdGFzay1hZGQtZWRpdC5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFJQTtFQUNFLFdBQUE7RUFDRixhQUFBO0VBQ0UsU0FBQTtFQUNBLDhCQUFBO0FBSEY7O0FBTUE7RUFDRSxhQUFBO0VBQ0Esc0JBQUE7QUFIRiIsInNvdXJjZXNDb250ZW50IjpbIi5jb250YWluZXIge1xuXG59XG5cbi5jb250ZW50IHtcbiAgd2lkdGg6IDEwMCU7XG5kaXNwbGF5OiBmbGV4O1xuICBnYXA6IDUwcHg7XG4gIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2Vlbjtcbn1cblxuLmNvbnRlbnQtbGVmdCB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG59XG5cbiJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n});","map":{"version":3,"mappings":"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","names":["FormArray","FormControl","FormGroup","Validators","MAT_DIALOG_DATA","shareReplay","Subject","takeUntil","i0","TaskAddEditComponent","constructor","taskService","issueTypeService","epicService","projectService","dialogRef","data","id","name","required","description","issueTypeId","epicId","boardId","boardColumnId","isBacklog","priority","taskStatus","column","assigneeId","reporterId","taskProperty","getIssueType","getEpics","getProjectUsers","pipe","form","get","ngOnInit","taskId","getTask","valueChanges","sub$","subscribe","getIssueTypeProperties","patchValue","console","log","types$","getIssueTypeByID","res","clear","issueTypeColumns","forEach","property","push","filedName","value","isRequired","save","markAllAsTouched","invalid","updateTask","close","createTask","ngOnDestroy","next","complete","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["/Users/macbookpro/Desktop/GitHubRepo/Task-Manager-with-NgRx/src/app/shared/task-add-edit/task-add-edit.component.ts","/Users/macbookpro/Desktop/GitHubRepo/Task-Manager-with-NgRx/src/app/shared/task-add-edit/task-add-edit.component.html"],"sourcesContent":["import {Component, Inject, OnDestroy, OnInit} from '@angular/core';\nimport {FormArray, FormControl, FormGroup, Validators} from \"@angular/forms\";\nimport {MAT_DIALOG_DATA, MatDialogRef} from \"@angular/material/dialog\";\nimport {IColumn} from \"../../core/interfaces\";\nimport {Observable, shareReplay, Subject, takeUntil} from \"rxjs\";\nimport {IssueTypesService} from \"../../core/services\";\nimport {EpicService} from \"../../core/services/epic.service\";\nimport {IEpic} from \"../../core/interfaces/epic\";\nimport {ProjectService} from \"../../core/services/project.service\";\nimport {TaskService} from \"../../core/services/task.service\";\n\n\n@Component({\n  selector: 'app-task-add-edit',\n  templateUrl: './task-add-edit.component.html',\n  styleUrls: ['./task-add-edit.component.scss']\n})\nexport class TaskAddEditComponent implements OnInit, OnDestroy{\n\n  form: FormGroup = new FormGroup({\n    id: new FormControl(''),\n    name: new FormControl('', Validators.required),\n    description: new FormControl('', Validators.required),\n    issueTypeId: new FormControl('', Validators.required),\n    epicId: new FormControl(''),\n    boardId: new FormControl('', Validators.required),\n    boardColumnId: new FormControl(''),\n    isBacklog: new FormControl(false, Validators.required),\n    priority: new FormControl('', Validators.required),\n    taskStatus: new FormControl(this.data.column?.taskStatus || 'ToDo', Validators.required),\n    assigneeId: new FormControl(''),\n    reporterId: new FormControl('', Validators.required),\n    taskProperty: new FormArray([]),\n  })\n\n  constructor(\n    private taskService: TaskService,\n    private issueTypeService: IssueTypesService,\n    private epicService: EpicService,\n    private projectService: ProjectService,\n    public dialogRef: MatDialogRef<TaskAddEditComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: {taskId: number, boardId: number, column: IColumn}\n  ) {\n  }\n\n  sub$ = new Subject();\n  types$: Observable<any> = this.issueTypeService.getIssueType();\n  epics$: Observable<IEpic[]> = this.epicService.getEpics();\n  users$: Observable<any> = this.projectService.getProjectUsers()\n    .pipe(shareReplay(2));\n  priorities: { id: 'LOW' | 'MEDIUM' | 'HIGH', name: string }[] = [\n    {id: 'LOW', name: 'Low'},\n    {id: 'MEDIUM', name: 'Medium'},\n    {id: 'HIGH', name: 'High'},\n  ]\n\n  get taskProperty() {\n    return this.form.get('taskProperty') as FormArray;\n  }\n\n\n\n  ngOnInit() {\n    //this.getTask(this.data.taskId);\n    if (this.data.taskId) {\n      this.getTask(this.data.taskId);\n    } else {\n      this.form.get('issueTypeId')?.valueChanges.pipe(takeUntil(this.sub$))\n        .subscribe((issueTypeId: number) => {\n          this.getIssueTypeProperties(issueTypeId)\n        })\n     }\n    if (this.data.boardId) {\n      this.form.patchValue({boardId: this.data.boardId})\n    }\n    if (this.data.column) {\n      this.form.patchValue({boardColumnId: this.data.column.id})\n    }\n    console.log(this.types$);\n  }\n\n  getIssueTypeProperties(issueTypeId: number) {\n    this.issueTypeService.getIssueTypeByID(issueTypeId)\n      .pipe(takeUntil(this.sub$))\n      .subscribe(res => {\n        this.taskProperty.clear();\n        res.issueTypeColumns.forEach((property: any) => {\n          this.taskProperty.push(new FormGroup({\n            id: new FormControl(null),\n            name: new FormControl(property.name),\n            filedName: new FormControl(property.filedName),\n            value: new FormControl(null, property.isRequired ? Validators.required : null),\n            isRequired: new FormControl(property.isRequired),\n          }))\n        })\n      })\n  }\n\n\n  private getTask(taskId: number) {\n    this.taskService.getTask(taskId)\n      .pipe(takeUntil(this.sub$))\n      .subscribe((res: any) => {\n        this.form.patchValue(res)\n        res.taskProperty.forEach((property: any) => {\n          this.taskProperty.push(new FormGroup({\n            id: new FormControl(property.id),\n            name: new FormControl(property.name, Validators.required),\n            filedName: new FormControl(property.filedName, Validators.required),\n            value: new FormControl(property.value, Validators.required),\n            isRequired: new FormControl(property.isRequired, Validators.required),\n          }))\n        })\n      })\n  }\n\n  save() {\n    console.log(this.form);\n    this.form.markAllAsTouched();\n    if (this.form.invalid) return;\n\n    if(this.data.taskId) {\n      this.taskService.updateTask(this.data.taskId, this.form.value)\n        .pipe(takeUntil(this.sub$))\n        .subscribe(res => {\n        this.dialogRef.close(res);\n      })\n    } else {\n      this.taskService.createTask(this.form.value)\n        .pipe(takeUntil(this.sub$))\n        .subscribe(res => {\n        this.dialogRef.close(res);\n      })\n    }\n  }\n\n  ngOnDestroy() {\n    this.sub$.next(null);\n    this.sub$.complete();\n  }\n}\n","<div class=\"container\">\n  <h1 mat-dialog-title>Create Task</h1>\n  <div mat-dialog-content [formGroup]=\"form\">\n    <div class=\"content\">\n      <div class=\"content-left\">\n        <mat-form-field>\n          <input matInput placeholder=\"Task Name\" formControlName=\"name\">\n        </mat-form-field>\n        <mat-form-field>\n          <textarea matInput placeholder=\"Description\" [rows]=\"11\" formControlName=\"description\"></textarea>\n        </mat-form-field>\n      </div>\n\n      <div class=\"content-right\">\n        <mat-form-field>\n          <mat-select placeholder=\"Task Type\" formControlName=\"issueTypeId\">\n            <mat-option *ngFor=\"let type of types$ | async\" [value]=\"type.id\">\n              {{type.name}}\n            </mat-option>\n          </mat-select>\n        </mat-form-field>\n        <mat-form-field>\n          <mat-select placeholder=\"Epic\" formControlName=\"epicId\">\n            <mat-option *ngFor=\"let epic of epics$ | async\" [value]=\"epic.id\">\n              {{epic.name}}\n            </mat-option>\n          </mat-select>\n        </mat-form-field>\n        <mat-form-field>\n        <mat-select placeholder=\"Task Priority\" formControlName=\"priority\">\n          <mat-option *ngFor=\"let priority of priorities\" [value]=\"priority.id\">\n            {{priority.name}}\n          </mat-option>\n        </mat-select>\n        </mat-form-field>\n        <mat-form-field>\n          <mat-select placeholder=\"Assign User\" formControlName=\"assigneeId\">\n            <mat-option *ngFor=\"let user of users$ |async\" [value]=\"user.id\">\n              {{user.firstName}} {{user.lastName}}\n            </mat-option>\n          </mat-select>\n        </mat-form-field>\n        <mat-form-field>\n          <mat-select placeholder=\"Reporter User\" formControlName=\"reporterId\">\n            <mat-option *ngFor=\"let user of users$ |async\" [value]=\"user.id\">\n              {{user.firstName}} {{user.lastName}}\n            </mat-option>\n          </mat-select>\n        </mat-form-field>\n\n\n\n        <div formArrayName=\"taskProperty\">\n          <div\n            *ngFor=\"let property of taskProperty.controls; let i = index\"\n            [formGroupName]=\"i\"\n          >\n            <mat-form-field>\n              <input\n                matInput\n                [placeholder]=\"property.get('name')?.value\"\n                formControlName=\"value\"\n                [required]=\"form.get('isRequired')?.value\"\n              />\n            </mat-form-field>\n          </div>\n        </div>\n\n    </div>\n  </div>\n\n  <div mat-dialog-actions>\n    <button mat-button (click)=\"dialogRef.close()\">Cancel</button>\n    <button mat-button (click)=\"save()\">Create</button>\n  </div>\n</div>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}