{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"../home/navigation/navigation.component\";\nimport * as i3 from \"./project/project.component\";\nconst _c0 = [\"project\"];\nexport class ApplicationComponent {\n  constructor() {\n    this.scrolledTop = false;\n    this.scrolled = true;\n  }\n  ngOnInit() {}\n  ngAfterViewInit() {\n    this.project.nativeElement.addEventListener('scroll', () => {\n      let firstElPos = this.project.nativeElement.firstChild.getBoundingClientRect().top;\n      firstElPos <= -10 ? this.scrolled = true : this.scrolled = false;\n      firstElPos <= -window.innerHeight ? this.scrolledTop = true : this.scrolledTop = false;\n    });\n  }\n}\nApplicationComponent.ɵfac = function ApplicationComponent_Factory(t) {\n  return new (t || ApplicationComponent)();\n};\nApplicationComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ApplicationComponent,\n  selectors: [[\"app-application\"]],\n  viewQuery: function ApplicationComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c0, 5);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.project = _t.first);\n    }\n  },\n  decls: 6,\n  vars: 1,\n  consts: [[1, \"container\"], [\"project\", \"\"], [3, \"scrolled\"], [1, \"content\"]],\n  template: function ApplicationComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0, 1);\n      i0.ɵɵelement(2, \"app-navigation\", 2);\n      i0.ɵɵelementStart(3, \"div\", 3);\n      i0.ɵɵelement(4, \"app-project\")(5, \"router-outlet\");\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"scrolled\", ctx.scrolled);\n    }\n  },\n  dependencies: [i1.RouterOutlet, i2.NavigationComponent, i3.ProjectComponent],\n  styles: [\".container[_ngcontent-%COMP%] {\\n  padding-top: 130px;\\n  height: 100vh;\\n  width: 100%;\\n  padding-left: 22%;\\n  overflow: scroll;\\n  background-color: rgba(122, 29, 224, 0.7);\\n  border: 1px solid #e0e0e0;\\n  border-radius: 5px;\\n  box-shadow: 0 0 10px 0 rgba(0, 0, 0, 0.1);\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvcGFnZXMvYXBwbGljYXRpb24vYXBwbGljYXRpb24uY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQ0E7RUFDRSxrQkFBQTtFQUNBLGFBQUE7RUFDQSxXQUFBO0VBQ0EsaUJBQUE7RUFDQSxnQkFBQTtFQUNBLHlDQUFBO0VBQ0EseUJBQUE7RUFDQSxrQkFBQTtFQUNBLHlDQUFBO0FBQUYiLCJzb3VyY2VzQ29udGVudCI6WyJAaW1wb3J0IFwic3JjL21peGlucy5zY3NzXCI7XG4uY29udGFpbmVyIHtcbiAgcGFkZGluZy10b3A6IDEzMHB4O1xuICBoZWlnaHQ6IDEwMHZoO1xuICB3aWR0aDogMTAwJTtcbiAgcGFkZGluZy1sZWZ0OiAyMiU7XG4gIG92ZXJmbG93OiBzY3JvbGw7XG4gIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMTIyLCAyOSwgMjI0LCAwLjcpO1xuICBib3JkZXI6IDFweCBzb2xpZCAjZTBlMGUwO1xuICBib3JkZXItcmFkaXVzOiA1cHg7XG4gIGJveC1zaGFkb3c6IDAgMCAxMHB4IDAgcmdiYSgwLCAwLCAwLCAwLjEpO1xuXG59XG5AbWVkaWEgb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDkwMHB4KSB7XG4gIC5jb250ZW50IHtcblxuICB9XG59XG4iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n});","map":{"version":3,"mappings":";;;;;AAQA,OAAM,MAAOA,oBAAoB;EAI/BC;IAHA,gBAAW,GAAY,KAAK;IAC5B,aAAQ,GAAW,IAAI;EAGvB;EAEAC,QAAQ,IAER;EAIAC,eAAe;IACb,IAAI,CAACC,OAAO,CAACC,aAAa,CAACC,gBAAgB,CAAC,QAAQ,EAAE,MAAK;MACzD,IAAIC,UAAU,GAAG,IAAI,CAACH,OAAO,CAACC,aAAa,CAACG,UAAU,CAACC,qBAAqB,EAAE,CAACC,GAAG;MAClFH,UAAU,IAAI,CAAC,EAAE,GAAG,IAAI,CAACI,QAAQ,GAAG,IAAI,GAAG,IAAI,CAACA,QAAQ,GAAG,KAAK;MAChEJ,UAAU,IAAI,CAACK,MAAM,CAACC,WAAW,GAAG,IAAI,CAACC,WAAW,GAAG,IAAI,GAAG,IAAI,CAACA,WAAW,GAAG,KAAK;IACxF,CAAC,CAAC;EACJ;;AAnBWd,oBAAoB;mBAApBA,oBAAoB;AAAA;AAApBA,oBAAoB;QAApBA,oBAAoB;EAAAe;EAAAC;IAAA;;;;;;;;;;;;;MCPjCC,iCAAiC;MAC/BA,oCAAuD;MACvDA,8BAAqB;MACnBA,8BAA2B;MAG7BA,iBAAM;;;MALUA,eAAqB;MAArBA,uCAAqB","names":["ApplicationComponent","constructor","ngOnInit","ngAfterViewInit","project","nativeElement","addEventListener","firstElPos","firstChild","getBoundingClientRect","top","scrolled","window","innerHeight","scrolledTop","selectors","viewQuery","i0"],"sourceRoot":"","sources":["/Users/macbookpro/Desktop/GitHubRepo/Task-Manager-with-NgRx/src/app/pages/application/application.component.ts","/Users/macbookpro/Desktop/GitHubRepo/Task-Manager-with-NgRx/src/app/pages/application/application.component.html"],"sourcesContent":["import {AfterViewInit, Component, ElementRef, OnInit, ViewChild} from '@angular/core';\n\n\n@Component({\n  selector: 'app-application',\n  templateUrl: './application.component.html',\n  styleUrls: ['./application.component.scss']\n})\nexport class ApplicationComponent implements OnInit, AfterViewInit {\n  scrolledTop: boolean = false;\n  scrolled: boolean= true;\n\n  constructor() {\n  }\n\n  ngOnInit(): void {\n\n  }\n\n  @ViewChild('project') project!: ElementRef;\n\n  ngAfterViewInit() {\n    this.project.nativeElement.addEventListener('scroll', () => {\n      let firstElPos = this.project.nativeElement.firstChild.getBoundingClientRect().top;\n      firstElPos <= -10 ? this.scrolled = true : this.scrolled = false;\n      firstElPos <= -window.innerHeight ? this.scrolledTop = true : this.scrolledTop = false;\n    })\n  }\n\n\n}\n","\n<div  class=\"container\" #project>\n  <app-navigation [scrolled]=\"scrolled\"></app-navigation>\n  <div class=\"content\">\n    <app-project></app-project>\n    <router-outlet></router-outlet>\n\n  </div>\n\n</div>\n  <!--taskManager@gmail.com-->\n<!--task-manager-project-->\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}