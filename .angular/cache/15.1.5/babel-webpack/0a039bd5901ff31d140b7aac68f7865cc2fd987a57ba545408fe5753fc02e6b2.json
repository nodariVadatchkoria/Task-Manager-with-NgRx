{"ast":null,"code":"import { BaseService } from \"./base.service\";\nimport * as i0 from \"@angular/core\";\nexport class IssueTypesService extends BaseService {\n  // apiUrl = environment.apiUrl + 'issue-type';\n  // constructor(private http: HttpClient) {}\n  setIssueType(issueType) {\n    localStorage.setItem('issueType', JSON.stringify(issueType));\n    return this.http.post('issue-type', issueType);\n  }\n  getIssueType() {\n    return this.get('issue-type');\n  }\n  getIssueTypes() {\n    return this.get('issue-type');\n  }\n  getIssueTypeByID(id) {\n    return this.get(`issue-type/${id}`); //`${this.apiUrl}/${id}`\n  }\n\n  getIssueTypesByID(id) {\n    return this.get(`issue-type/${id}`); //`${this.apiUrl}/${id}`\n  }\n  // updateIssueType(id: number, issueType: IssueType): Observable<any> {\n  //   return this.http.put(`${this.apiUrl}/${id}`, issueType);\n  // }\n  updateIssueType(data) {\n    return this.put(`issue-type/${data.id}`, data);\n  }\n  deleteIssueType(id) {\n    return this.delete(`issue-type/${id}`);\n  }\n}\nIssueTypesService.ɵfac = /*@__PURE__*/function () {\n  let ɵIssueTypesService_BaseFactory;\n  return function IssueTypesService_Factory(t) {\n    return (ɵIssueTypesService_BaseFactory || (ɵIssueTypesService_BaseFactory = i0.ɵɵgetInheritedFactory(IssueTypesService)))(t || IssueTypesService);\n  };\n}();\nIssueTypesService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: IssueTypesService,\n  factory: IssueTypesService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AAKA,SAAQA,WAAW,QAAO,gBAAgB;;AAK1C,OAAM,MAAOC,iBAAkB,SAAQD,WAAW;EAChD;EAEA;EAEAE,YAAY,CAACC,SAAc;IACzBC,YAAY,CAACC,OAAO,CAAC,WAAW,EAAEC,IAAI,CAACC,SAAS,CAACJ,SAAS,CAAC,CAAC;IAC5D,OAAO,IAAI,CAACK,IAAI,CAACC,IAAI,CAAY,YAAY,EAAEN,SAAS,CAAC;EAC3D;EAEAO,YAAY;IACV,OAAO,IAAI,CAACC,GAAG,CAAc,YAAY,CAAC;EAC5C;EACAC,aAAa;IACX,OAAO,IAAI,CAACD,GAAG,CAAc,YAAY,CAAC;EAC5C;EAEAE,gBAAgB,CAACC,EAAU;IACzB,OAAO,IAAI,CAACH,GAAG,CAAY,cAAcG,EAAE,EAAE,CAAC,CAAC,CAAC;EAClD;;EACAC,iBAAiB,CAACD,EAAU;IAC1B,OAAO,IAAI,CAACH,GAAG,CAAY,cAAcG,EAAE,EAAE,CAAC,CAAC,CAAC;EAClD;EACA;EACA;EACA;EAEAE,eAAe,CAACC,IAAS;IACvB,OAAO,IAAI,CAACC,GAAG,CAAY,cAAcD,IAAI,CAACH,EAAE,EAAE,EAAEG,IAAI,CAAC;EAC3D;EAEAE,eAAe,CAACL,EAAU;IACxB,OAAO,IAAI,CAACM,MAAM,CAAC,cAAcN,EAAE,EAAE,CAAC;EACxC;;AAjCWb,iBAAkB;;;yGAAlBA,iBAAiB,SAAjBA,iBAAiB;EAAA;AAAA;AAAjBA,iBAAkB;SAAlBA,iBAAiB;EAAAoB,SAAjBpB,iBAAiB;EAAAqB,YAFhB;AAAM","names":["BaseService","IssueTypesService","setIssueType","issueType","localStorage","setItem","JSON","stringify","http","post","getIssueType","get","getIssueTypes","getIssueTypeByID","id","getIssueTypesByID","updateIssueType","data","put","deleteIssueType","delete","factory","providedIn"],"sourceRoot":"","sources":["/Users/macbookpro/Desktop/GitHubRepo/Task-Manager-with-NgRx/src/app/core/services/issue-types.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { environment } from '../../../environments/environment';\nimport { HttpClient } from '@angular/common/http';\nimport { IssueType } from '../interfaces';\nimport { Observable } from 'rxjs';\nimport {BaseService} from \"./base.service\";\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class IssueTypesService extends BaseService {\n  // apiUrl = environment.apiUrl + 'issue-type';\n\n  // constructor(private http: HttpClient) {}\n\n  setIssueType(issueType: any): Observable<IssueType> {\n    localStorage.setItem('issueType', JSON.stringify(issueType));\n    return this.http.post<IssueType>('issue-type', issueType);\n  }\n\n  getIssueType(): Observable<IssueType[]> {\n    return this.get<IssueType[]>('issue-type');\n  }\n  getIssueTypes(): Observable<IssueType[]> {\n    return this.get<IssueType[]>('issue-type');\n  }\n\n  getIssueTypeByID(id: number): Observable<IssueType> {\n    return this.get<IssueType>(`issue-type/${id}`); //`${this.apiUrl}/${id}`\n  }\n  getIssueTypesByID(id: number): Observable<IssueType> {\n    return this.get<IssueType>(`issue-type/${id}`); //`${this.apiUrl}/${id}`\n  }\n  // updateIssueType(id: number, issueType: IssueType): Observable<any> {\n  //   return this.http.put(`${this.apiUrl}/${id}`, issueType);\n  // }\n\n  updateIssueType(data: any): Observable<IssueType> {\n    return this.put<IssueType>(`issue-type/${data.id}`, data);\n  }\n\n  deleteIssueType(id: number): Observable<any> {\n    return this.delete(`issue-type/${id}`);\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}