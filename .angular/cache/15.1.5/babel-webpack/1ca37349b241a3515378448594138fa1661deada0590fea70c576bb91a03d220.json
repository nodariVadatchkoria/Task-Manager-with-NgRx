{"ast":null,"code":"import { FormControl, FormGroup, Validators } from \"@angular/forms\";\nimport { Subject, takeUntil } from \"rxjs\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"../../../../../core/services/epic.service\";\nimport * as i3 from \"@angular/material/button\";\nimport * as i4 from \"@angular/forms\";\nimport * as i5 from \"@angular/material/form-field\";\nimport * as i6 from \"@angular/material/input\";\nexport class ProjectEpicAddEditComponent {\n  constructor(route, router, epicService) {\n    this.route = route;\n    this.router = router;\n    this.epicService = epicService;\n    this.sub$ = new Subject();\n    this.form = new FormGroup({\n      id: new FormControl(''),\n      name: new FormControl('', Validators.required),\n      description: new FormControl('', Validators.required)\n    });\n  }\n  ngOnInit() {\n    this.route.params.subscribe(params => {\n      if (params['id']) {\n        this.epicId = +params['id'];\n        this.getEpic(this.epicId);\n      }\n    });\n  }\n  save() {\n    this.form.markAllAsTouched();\n    if (this.form.invalid) {\n      return;\n    }\n    if (this.epicId) {\n      this.epicService.updateEpic(this.form.value).pipe(takeUntil(this.sub$)).subscribe(() => {\n        this.router.navigate(['/projects/setting/epics']).then();\n      });\n    } else {\n      this.epicService.createEpic(this.form.value).pipe(takeUntil(this.sub$)).subscribe(() => {\n        this.router.navigate(['/projects/setting/epics']).then();\n      });\n    }\n  }\n  getEpic(id) {\n    this.epicService.getEpic(id).pipe(takeUntil(this.sub$)).subscribe(res => {\n      this.form.patchValue(res);\n    });\n  }\n  ngOnDestroy() {\n    this.sub$.next(null);\n    this.sub$.complete();\n  }\n}\nProjectEpicAddEditComponent.ɵfac = function ProjectEpicAddEditComponent_Factory(t) {\n  return new (t || ProjectEpicAddEditComponent)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i2.EpicService));\n};\nProjectEpicAddEditComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ProjectEpicAddEditComponent,\n  selectors: [[\"app-project-epic-add-edit\"]],\n  decls: 13,\n  vars: 1,\n  consts: [[1, \"flex\"], [1, \"margin\", 3, \"formGroup\"], [1, \"form\"], [\"matInput\", \"\", \"placeholder\", \"Name\", \"formControlName\", \"name\"], [\"matInput\", \"\", \"placeholder\", \"Description\", \"formControlName\", \"description\"], [\"mat-raised-button\", \"\", \"color\", \"primary\", 3, \"click\"]],\n  template: function ProjectEpicAddEditComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"form\", 1)(2, \"div\", 2)(3, \"mat-form-field\")(4, \"mat-label\");\n      i0.ɵɵtext(5, \"Name\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(6, \"input\", 3);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(7, \"mat-form-field\")(8, \"mat-label\");\n      i0.ɵɵtext(9, \"Description\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(10, \"input\", 4);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(11, \"button\", 5);\n      i0.ɵɵlistener(\"click\", function ProjectEpicAddEditComponent_Template_button_click_11_listener() {\n        return ctx.save();\n      });\n      i0.ɵɵtext(12, \"Save\");\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"formGroup\", ctx.form);\n    }\n  },\n  dependencies: [i3.MatButton, i4.ɵNgNoValidate, i4.DefaultValueAccessor, i4.NgControlStatus, i4.NgControlStatusGroup, i4.FormGroupDirective, i4.FormControlName, i5.MatFormField, i5.MatLabel, i6.MatInput],\n  styles: [\".form[_ngcontent-%COMP%] {\\n  display: flex;\\n  flex-direction: column;\\n  width: 250px;\\n}\\n\\n.flex[_ngcontent-%COMP%] {\\n  margin-top: 150px;\\n  display: flex;\\n}\\n\\n.margin[_ngcontent-%COMP%] {\\n  margin-left: auto;\\n  margin-right: auto;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvcGFnZXMvcHJvamVjdC9wcm9qZWN0LXNldHRpbmcvY29udGFpbmVycy9wcm9qZWN0LWVwaWMtYWRkLWVkaXQvcHJvamVjdC1lcGljLWFkZC1lZGl0LmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsYUFBQTtFQUNBLHNCQUFBO0VBQ0EsWUFBQTtBQUNGOztBQUVBO0VBQ0UsaUJBQUE7RUFDQSxhQUFBO0FBQ0Y7O0FBRUE7RUFFRSxpQkFBQTtFQUNBLGtCQUFBO0FBQUYiLCJzb3VyY2VzQ29udGVudCI6WyIuZm9ybSB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gIHdpZHRoOiAyNTBweDtcbn1cblxuLmZsZXgge1xuICBtYXJnaW4tdG9wOiAxNTBweDtcbiAgZGlzcGxheTogZmxleDtcbn1cblxuLm1hcmdpbiB7XG5cbiAgbWFyZ2luLWxlZnQ6IGF1dG87XG4gIG1hcmdpbi1yaWdodDogYXV0bztcbn1cbiJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n});","map":{"version":3,"mappings":"AACA,SAAQA,WAAW,EAAEC,SAAS,EAAEC,UAAU,QAAO,gBAAgB;AAEjE,SAAQC,OAAO,EAAEC,SAAS,QAAO,MAAM;;;;;;;;AAQvC,OAAM,MAAOC,2BAA2B;EACtCC,YACUC,KAAqB,EACrBC,MAAc,EACdC,WAAwB;IAFxB,UAAK,GAALF,KAAK;IACL,WAAM,GAANC,MAAM;IACN,gBAAW,GAAXC,WAAW;IAIrB,SAAI,GAAG,IAAIN,OAAO,EAAE;IAapB,SAAI,GAAc,IAAIF,SAAS,CAAC;MAC9BS,EAAE,EAAE,IAAIV,WAAW,CAAC,EAAE,CAAC;MACvBW,IAAI,EAAE,IAAIX,WAAW,CAAC,EAAE,EAAEE,UAAU,CAACU,QAAQ,CAAC;MAC9CC,WAAW,EAAE,IAAIb,WAAW,CAAC,EAAE,EAAEE,UAAU,CAACU,QAAQ;KACrD,CAAC;EAnBF;EAMAE,QAAQ;IACN,IAAI,CAACP,KAAK,CAACQ,MAAM,CAACC,SAAS,CAACD,MAAM,IAAG;MACnC,IAAIA,MAAM,CAAC,IAAI,CAAC,EAAE;QAChB,IAAI,CAACE,MAAM,GAAG,CAACF,MAAM,CAAC,IAAI,CAAC;QAC3B,IAAI,CAACG,OAAO,CAAC,IAAI,CAACD,MAAM,CAAC;;IAE7B,CAAC,CAAC;EACJ;EAQAE,IAAI;IACF,IAAI,CAACC,IAAI,CAACC,gBAAgB,EAAE;IAC5B,IAAI,IAAI,CAACD,IAAI,CAACE,OAAO,EAAE;MACrB;;IAGF,IAAI,IAAI,CAACL,MAAM,EAAE;MACf,IAAI,CAACR,WAAW,CAACc,UAAU,CAAC,IAAI,CAACH,IAAI,CAACI,KAAK,CAAC,CACzCC,IAAI,CAACrB,SAAS,CAAC,IAAI,CAACsB,IAAI,CAAC,CAAC,CAC1BV,SAAS,CAAC,MAAK;QACd,IAAI,CAACR,MAAM,CAACmB,QAAQ,CAAC,CAAC,yBAAyB,CAAC,CAAC,CAACC,IAAI,EAAE;MAC1D,CAAC,CAAC;KACL,MAAM;MACL,IAAI,CAACnB,WAAW,CAACoB,UAAU,CAAC,IAAI,CAACT,IAAI,CAACI,KAAK,CAAC,CACzCC,IAAI,CAACrB,SAAS,CAAC,IAAI,CAACsB,IAAI,CAAC,CAAC,CAC1BV,SAAS,CAAC,MAAK;QACd,IAAI,CAACR,MAAM,CAACmB,QAAQ,CAAC,CAAC,yBAAyB,CAAC,CAAC,CAACC,IAAI,EAAE;MAC1D,CAAC,CAAC;;EAGR;EAEQV,OAAO,CAACR,EAAU;IACxB,IAAI,CAACD,WAAW,CAACS,OAAO,CAACR,EAAE,CAAC,CACzBe,IAAI,CAACrB,SAAS,CAAC,IAAI,CAACsB,IAAI,CAAC,CAAC,CAC1BV,SAAS,CAACc,GAAG,IAAG;MACf,IAAI,CAACV,IAAI,CAACW,UAAU,CAACD,GAAG,CAAC;IAC3B,CAAC,CAAC;EACN;EAEAE,WAAW;IACT,IAAI,CAACN,IAAI,CAACO,IAAI,CAAC,IAAI,CAAC;IACpB,IAAI,CAACP,IAAI,CAACQ,QAAQ,EAAE;EACtB;;AA5DW7B,2BAA2B;mBAA3BA,2BAA2B;AAAA;AAA3BA,2BAA2B;QAA3BA,2BAA2B;EAAA8B;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCXxCC,8BAAkB;MAKGA,oBAAI;MAAAA,iBAAY;MAC3BA,2BAA0D;MAC5DA,iBAAiB;MACjBA,sCAAgB;MACHA,2BAAW;MAAAA,iBAAY;MAClCA,4BAAwE;MAC1EA,iBAAiB;MAGnBA,kCAA2D;MAAjBA;QAAA,OAASC,UAAM;MAAA,EAAC;MAACD,qBAAI;MAAAA,iBAAS;;;MAbtEA,eAAkB;MAAlBA,oCAAkB","names":["FormControl","FormGroup","Validators","Subject","takeUntil","ProjectEpicAddEditComponent","constructor","route","router","epicService","id","name","required","description","ngOnInit","params","subscribe","epicId","getEpic","save","form","markAllAsTouched","invalid","updateEpic","value","pipe","sub$","navigate","then","createEpic","res","patchValue","ngOnDestroy","next","complete","selectors","decls","vars","consts","template","i0","ctx"],"sourceRoot":"","sources":["/Users/macbookpro/Desktop/GitHubRepo/Task-Manager-with-NgRx/src/app/pages/project/project-setting/containers/project-epic-add-edit/project-epic-add-edit.component.ts","/Users/macbookpro/Desktop/GitHubRepo/Task-Manager-with-NgRx/src/app/pages/project/project-setting/containers/project-epic-add-edit/project-epic-add-edit.component.html"],"sourcesContent":["import {Component, OnDestroy, OnInit} from '@angular/core';\nimport {FormControl, FormGroup, Validators} from \"@angular/forms\";\nimport {ActivatedRoute, Router} from \"@angular/router\";\nimport {Subject, takeUntil} from \"rxjs\";\nimport {EpicService} from \"../../../../../core/services/epic.service\";\n\n@Component({\n  selector: 'app-project-epic-add-edit',\n  templateUrl: './project-epic-add-edit.component.html',\n  styleUrls: ['./project-epic-add-edit.component.scss']\n})\nexport class ProjectEpicAddEditComponent implements OnInit, OnDestroy{\n  constructor(\n    private route: ActivatedRoute,\n    private router: Router,\n    private epicService: EpicService\n  ) {\n  }\n\n  sub$ = new Subject();\n\n  epicId!: number;\n\n  ngOnInit() {\n    this.route.params.subscribe(params => {\n      if (params['id']) {\n        this.epicId = +params['id'];\n        this.getEpic(this.epicId);\n      }\n    })\n  }\n\n  form: FormGroup = new FormGroup({\n    id: new FormControl(''),\n    name: new FormControl('', Validators.required),\n    description: new FormControl('', Validators.required)\n  })\n\n  save() {\n    this.form.markAllAsTouched();\n    if (this.form.invalid) {\n      return;\n    }\n\n    if (this.epicId) {\n      this.epicService.updateEpic(this.form.value)\n        .pipe(takeUntil(this.sub$))\n        .subscribe(() => {\n          this.router.navigate(['/projects/setting/epics']).then()\n        })\n    } else {\n      this.epicService.createEpic(this.form.value)\n        .pipe(takeUntil(this.sub$))\n        .subscribe(() => {\n          this.router.navigate(['/projects/setting/epics']).then()\n        })\n    }\n\n  }\n\n  private getEpic(id: number) {\n    this.epicService.getEpic(id)\n      .pipe(takeUntil(this.sub$))\n      .subscribe(res => {\n        this.form.patchValue(res)\n      })\n  }\n\n  ngOnDestroy(): void {\n    this.sub$.next(null)\n    this.sub$.complete()\n  }\n}\n","<div class=\"flex\">\n  <form [formGroup]=\"form\" class=\"margin\">\n\n      <div class=\"form\">\n        <mat-form-field>\n          <mat-label>Name</mat-label>\n          <input matInput placeholder=\"Name\" formControlName=\"name\">\n        </mat-form-field>\n        <mat-form-field>\n          <mat-label>Description</mat-label>\n          <input matInput placeholder=\"Description\" formControlName=\"description\">\n        </mat-form-field>\n      </div>\n\n      <button mat-raised-button color=\"primary\" (click)=\"save()\">Save</button>\n\n  </form>\n</div>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}