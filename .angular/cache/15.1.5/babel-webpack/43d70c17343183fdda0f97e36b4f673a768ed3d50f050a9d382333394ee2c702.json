{"ast":null,"code":"import { FormArray, FormControl, FormGroup, Validators } from \"@angular/forms\";\nimport { TaskStatusEnum } from \"../../../../../core/enums/task-status.enum\";\nimport { moveItemInArray } from \"@angular/cdk/drag-drop\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../../../../core/services/board.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/material/form-field\";\nimport * as i5 from \"@angular/material/select\";\nimport * as i6 from \"@angular/material/core\";\nimport * as i7 from \"@angular/material/button\";\nimport * as i8 from \"@angular/material/input\";\nimport * as i9 from \"@angular/forms\";\nimport * as i10 from \"@angular/cdk/drag-drop\";\nfunction BoardEditComponent_div_18_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"div\", 8);\n  }\n}\nfunction BoardEditComponent_div_19_mat_option_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\", 15);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const status_r6 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", status_r6);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\"\", status_r6, \" \");\n  }\n}\nfunction BoardEditComponent_div_19_div_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"div\", 16);\n  }\n}\nfunction BoardEditComponent_div_19_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 9)(1, \"mat-form-field\")(2, \"mat-label\");\n    i0.ɵɵtext(3, \"Column Name\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(4, \"input\", 10);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"mat-form-field\")(6, \"mat-label\");\n    i0.ɵɵtext(7, \"Column Description\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(8, \"input\", 11);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"mat-form-field\")(10, \"mat-label\");\n    i0.ɵɵtext(11, \"Status\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(12, \"mat-select\", 12);\n    i0.ɵɵtemplate(13, BoardEditComponent_div_19_mat_option_13_Template, 2, 2, \"mat-option\", 13);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵtemplate(14, BoardEditComponent_div_19_div_14_Template, 1, 0, \"div\", 14);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const i_r3 = ctx.index;\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"formGroupName\", i_r3);\n    i0.ɵɵadvance(13);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.taskStatuses);\n  }\n}\nexport class BoardEditComponent {\n  constructor(boardService, router, route) {\n    this.boardService = boardService;\n    this.router = router;\n    this.route = route;\n    this.taskStatuses = Object.values(TaskStatusEnum);\n    this.form = new FormGroup({\n      name: new FormControl(null, Validators.required),\n      position: new FormControl(1, Validators.required),\n      description: new FormControl(null, Validators.required),\n      columns: new FormArray([], Validators.required)\n    });\n  }\n  ngOnInit() {\n    this.route.params.subscribe(params => {\n      if (params['id']) {\n        this.boardId = +params['id'];\n        this.getBoard();\n      }\n    });\n  }\n  getBoard() {\n    this.boardService.getBoardId(this.boardId).subscribe(res => {\n      this.form.patchValue(res);\n      res.columns.forEach(column => {\n        this.columnsArray.push(new FormGroup({\n          id: new FormControl(column.id),\n          name: new FormControl(column.name, Validators.required),\n          description: new FormControl(column.description, Validators.required),\n          position: new FormControl(column.position, Validators.required),\n          taskStatus: new FormControl(column.taskStatus, Validators.required)\n        }, Validators.required));\n      });\n    });\n  }\n  get columnsArray() {\n    return this.form.get('columns');\n  }\n  addColumn() {\n    this.columnsArray.push(new FormGroup({\n      id: new FormControl(null),\n      name: new FormControl(null, Validators.required),\n      description: new FormControl(null, Validators.required),\n      position: new FormControl(this.columnsArray.length + 1, Validators.required),\n      taskStatus: new FormControl(TaskStatusEnum.ToDo, Validators.required)\n    }, Validators.required));\n  }\n  save() {\n    this.form.markAllAsTouched();\n    if (this.form.invalid) {\n      return;\n    }\n    this.boardService.addBoard(this.form.value).subscribe(res => {\n      this.router.navigate(['/application/setting/board']);\n    });\n  }\n  drop($event) {\n    moveItemInArray(this.columnsArray.controls, $event.previousIndex, $event.currentIndex);\n    console.log(this.columnsArray.controls);\n    this.columnsArray.controls.forEach((control, index) => {\n      control.get('position')?.setValue(index + 1);\n    });\n  }\n}\nBoardEditComponent.ɵfac = function BoardEditComponent_Factory(t) {\n  return new (t || BoardEditComponent)(i0.ɵɵdirectiveInject(i1.BoardService), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i2.ActivatedRoute));\n};\nBoardEditComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: BoardEditComponent,\n  selectors: [[\"app-board-edit\"]],\n  decls: 20,\n  vars: 2,\n  consts: [[3, \"formGroup\"], [1, \"inputForm\"], [\"matInput\", \"\", \"placeholder\", \"Name\", \"formControlName\", \"name\"], [\"matInput\", \"\", \"placeholder\", \"Description\", \"formControlName\", \"description\"], [\"mat-raised-button\", \"\", \"color\", \"primary\", 3, \"click\"], [\"formArrayName\", \"columns\", \"cdkDropList\", \"\", \"cdkDropListOrientation\", \"horizontal\", 1, \"columns\", 3, \"cdkDropListDropped\"], [\"class\", \"prev\", 4, \"cdkDragPreview\"], [\"class\", \"column\", \"cdkDrag\", \"\", 3, \"formGroupName\", 4, \"ngFor\", \"ngForOf\"], [1, \"prev\"], [\"cdkDrag\", \"\", 1, \"column\", 3, \"formGroupName\"], [\"matInput\", \"\", \"placeholder\", \"Column Name\", \"formControlName\", \"name\"], [\"matInput\", \"\", \"placeholder\", \"Column Description\", \"formControlName\", \"description\"], [\"placeholder\", \"Task Status\", \"formControlName\", \"taskStatus\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"class\", \"column-placeholder\", 4, \"cdkDragPlaceholder\"], [3, \"value\"], [1, \"column-placeholder\"]],\n  template: function BoardEditComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"h1\");\n      i0.ɵɵtext(1, \"Board edit\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"div\")(3, \"form\", 0)(4, \"div\", 1)(5, \"mat-form-field\")(6, \"mat-label\");\n      i0.ɵɵtext(7, \"Name\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(8, \"input\", 2);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(9, \"mat-form-field\")(10, \"mat-label\");\n      i0.ɵɵtext(11, \"Description\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(12, \"input\", 3);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(13, \"button\", 4);\n      i0.ɵɵlistener(\"click\", function BoardEditComponent_Template_button_click_13_listener() {\n        return ctx.addColumn();\n      });\n      i0.ɵɵtext(14, \"Add Column\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(15, \"button\", 4);\n      i0.ɵɵlistener(\"click\", function BoardEditComponent_Template_button_click_15_listener() {\n        return ctx.save();\n      });\n      i0.ɵɵtext(16, \"Save\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(17, \"div\", 5);\n      i0.ɵɵlistener(\"cdkDropListDropped\", function BoardEditComponent_Template_div_cdkDropListDropped_17_listener($event) {\n        return ctx.drop($event);\n      });\n      i0.ɵɵtemplate(18, BoardEditComponent_div_18_Template, 1, 0, \"div\", 6);\n      i0.ɵɵtemplate(19, BoardEditComponent_div_19_Template, 15, 2, \"div\", 7);\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"formGroup\", ctx.form);\n      i0.ɵɵadvance(16);\n      i0.ɵɵproperty(\"ngForOf\", ctx.columnsArray.controls);\n    }\n  },\n  dependencies: [i3.NgForOf, i4.MatFormField, i4.MatLabel, i5.MatSelect, i6.MatOption, i7.MatButton, i8.MatInput, i9.ɵNgNoValidate, i9.DefaultValueAccessor, i9.NgControlStatus, i9.NgControlStatusGroup, i9.FormGroupDirective, i9.FormControlName, i9.FormGroupName, i9.FormArrayName, i10.CdkDropList, i10.CdkDrag, i10.CdkDragPreview, i10.CdkDragPlaceholder],\n  styles: [\".columns[_ngcontent-%COMP%]{display:flex;flex-wrap:nowrap;gap:10px;height:100%;width:100%;overflow-x:auto;overflow-y:hidden;padding:10px}.inputForm[_ngcontent-%COMP%]{display:flex;gap:10px;padding:10px}.column[_ngcontent-%COMP%]{flex:initial;width:300px;height:100%;display:flex;flex-direction:column;justify-content:space-between;background-color:#fff;padding:10px;border-radius:5px;box-shadow:0 0 5px #0006}.column-placeholder[_ngcontent-%COMP%]{width:300px;min-height:100%;background-color:#faf9f8;border-radius:5px}\"]\n});","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}