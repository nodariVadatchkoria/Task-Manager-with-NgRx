{"ast":null,"code":"import { MatTableDataSource } from \"@angular/material/table\";\nimport { of, Subject, switchMap, takeUntil } from \"rxjs\";\nimport { ConfirmDeleteComponent } from \"../../../../shared/confirm-delete/confirm-delete.component\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@ngrx/store\";\nimport * as i2 from \"../../../../core/services\";\nimport * as i3 from \"@angular/material/dialog\";\nimport * as i4 from \"@angular/router\";\nimport * as i5 from \"@angular/material/button\";\nimport * as i6 from \"@angular/material/table\";\nfunction ProjectIssueTypesComponent_th_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"th\", 11);\n    i0.ɵɵtext(1, \" # \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ProjectIssueTypesComponent_td_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\", 12);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const element_r10 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", element_r10.id, \" \");\n  }\n}\nfunction ProjectIssueTypesComponent_th_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"th\", 11);\n    i0.ɵɵtext(1, \" Name \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ProjectIssueTypesComponent_td_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\", 12);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const element_r11 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", element_r11.name, \" \");\n  }\n}\nfunction ProjectIssueTypesComponent_th_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"th\", 11);\n    i0.ɵɵtext(1, \" Created At \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ProjectIssueTypesComponent_td_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\", 12);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const element_r12 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", element_r12.createdAt, \" \");\n  }\n}\nfunction ProjectIssueTypesComponent_th_15_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"th\", 11);\n  }\n}\nconst _c0 = function (a1) {\n  return [\"/application/setting/issue-types/edit\", a1];\n};\nfunction ProjectIssueTypesComponent_td_16_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r15 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"td\", 12)(1, \"button\", 0);\n    i0.ɵɵtext(2, \"Edit\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"button\", 13);\n    i0.ɵɵlistener(\"click\", function ProjectIssueTypesComponent_td_16_Template_button_click_3_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r15);\n      const element_r13 = restoredCtx.$implicit;\n      const ctx_r14 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r14.deleteIssueType(element_r13.id));\n    });\n    i0.ɵɵtext(4, \"Delete\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const element_r13 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction1(1, _c0, element_r13.id));\n  }\n}\nfunction ProjectIssueTypesComponent_tr_17_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"tr\", 14);\n  }\n}\nfunction ProjectIssueTypesComponent_tr_18_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"tr\", 15);\n  }\n}\nconst _c1 = function () {\n  return [\"/application/setting/issue-types/add\"];\n};\nexport class ProjectIssueTypesComponent {\n  constructor(store, issueTypesService, dialog, issueTypeService) {\n    this.store = store;\n    this.issueTypesService = issueTypesService;\n    this.dialog = dialog;\n    this.issueTypeService = issueTypeService;\n    this.displayedColumns = ['id', 'name', 'createdAt', 'actions'];\n    this.dataSource = new MatTableDataSource();\n    this.sub$ = new Subject();\n  }\n  ngOnInit() {\n    this.getIssueTypes();\n  }\n  getIssueTypes() {\n    this.issueTypesService.getIssueType().pipe(takeUntil(this.sub$)).subscribe(boards => {\n      console.log(boards);\n      this.dataSource.data = boards;\n    });\n  }\n  deleteIssueType(id) {\n    const dialogRef = this.dialog.open(ConfirmDeleteComponent);\n    dialogRef.afterClosed().pipe(takeUntil(this.sub$), switchMap(result => {\n      if (result) {\n        return this.issueTypeService.deleteIssueType(id);\n      }\n      return of(null);\n    })).subscribe(result => {\n      if (result) {\n        this.getIssueTypes();\n      }\n    });\n  }\n  ngOnDestroy() {\n    this.sub$.next(null);\n    this.sub$.complete();\n  }\n}\nProjectIssueTypesComponent.ɵfac = function ProjectIssueTypesComponent_Factory(t) {\n  return new (t || ProjectIssueTypesComponent)(i0.ɵɵdirectiveInject(i1.Store), i0.ɵɵdirectiveInject(i2.IssueTypesService), i0.ɵɵdirectiveInject(i3.MatDialog), i0.ɵɵdirectiveInject(i2.IssueTypesService));\n};\nProjectIssueTypesComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ProjectIssueTypesComponent,\n  selectors: [[\"app-project-issue-type\"]],\n  decls: 19,\n  vars: 5,\n  consts: [[\"mat-raised-button\", \"\", \"color\", \"primary\", 3, \"routerLink\"], [1, \"container\"], [\"mat-table\", \"\", 1, \"mat-elevation-z8\", 3, \"dataSource\"], [\"matColumnDef\", \"id\"], [\"mat-header-cell\", \"\", 4, \"matHeaderCellDef\"], [\"mat-cell\", \"\", 4, \"matCellDef\"], [\"matColumnDef\", \"name\"], [\"matColumnDef\", \"createdAt\"], [\"matColumnDef\", \"actions\"], [\"mat-header-row\", \"\", 4, \"matHeaderRowDef\"], [\"mat-row\", \"\", 4, \"matRowDef\", \"matRowDefColumns\"], [\"mat-header-cell\", \"\"], [\"mat-cell\", \"\"], [\"mat-raised-button\", \"\", \"color\", \"warn\", 3, \"click\"], [\"mat-header-row\", \"\"], [\"mat-row\", \"\"]],\n  template: function ProjectIssueTypesComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\")(1, \"button\", 0);\n      i0.ɵɵtext(2, \"Add Issue Type\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(3, \"div\", 1)(4, \"table\", 2);\n      i0.ɵɵelementContainerStart(5, 3);\n      i0.ɵɵtemplate(6, ProjectIssueTypesComponent_th_6_Template, 2, 0, \"th\", 4);\n      i0.ɵɵtemplate(7, ProjectIssueTypesComponent_td_7_Template, 2, 1, \"td\", 5);\n      i0.ɵɵelementContainerEnd();\n      i0.ɵɵelementContainerStart(8, 6);\n      i0.ɵɵtemplate(9, ProjectIssueTypesComponent_th_9_Template, 2, 0, \"th\", 4);\n      i0.ɵɵtemplate(10, ProjectIssueTypesComponent_td_10_Template, 2, 1, \"td\", 5);\n      i0.ɵɵelementContainerEnd();\n      i0.ɵɵelementContainerStart(11, 7);\n      i0.ɵɵtemplate(12, ProjectIssueTypesComponent_th_12_Template, 2, 0, \"th\", 4);\n      i0.ɵɵtemplate(13, ProjectIssueTypesComponent_td_13_Template, 2, 1, \"td\", 5);\n      i0.ɵɵelementContainerEnd();\n      i0.ɵɵelementContainerStart(14, 8);\n      i0.ɵɵtemplate(15, ProjectIssueTypesComponent_th_15_Template, 1, 0, \"th\", 4);\n      i0.ɵɵtemplate(16, ProjectIssueTypesComponent_td_16_Template, 5, 3, \"td\", 5);\n      i0.ɵɵelementContainerEnd();\n      i0.ɵɵtemplate(17, ProjectIssueTypesComponent_tr_17_Template, 1, 0, \"tr\", 9);\n      i0.ɵɵtemplate(18, ProjectIssueTypesComponent_tr_18_Template, 1, 0, \"tr\", 10);\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction0(4, _c1));\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"dataSource\", ctx.dataSource);\n      i0.ɵɵadvance(13);\n      i0.ɵɵproperty(\"matHeaderRowDef\", ctx.displayedColumns);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"matRowDefColumns\", ctx.displayedColumns);\n    }\n  },\n  dependencies: [i4.RouterLink, i5.MatButton, i6.MatTable, i6.MatHeaderCellDef, i6.MatHeaderRowDef, i6.MatColumnDef, i6.MatCellDef, i6.MatRowDef, i6.MatHeaderCell, i6.MatCell, i6.MatHeaderRow, i6.MatRow],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"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","names":["MatTableDataSource","of","Subject","switchMap","takeUntil","ConfirmDeleteComponent","i0","ProjectIssueTypesComponent","constructor","store","issueTypesService","dialog","issueTypeService","ngOnInit","getIssueTypes","getIssueType","pipe","sub$","subscribe","boards","console","log","dataSource","data","deleteIssueType","id","dialogRef","open","afterClosed","result","ngOnDestroy","next","complete","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["/Users/macbookpro/Desktop/GitHubRepo/Task-Manager-with-NgRx/src/app/pages/application/project-setting/project-issue-type/project-issue-types.component.ts","/Users/macbookpro/Desktop/GitHubRepo/Task-Manager-with-NgRx/src/app/pages/application/project-setting/project-issue-type/project-issue-types.component.html"],"sourcesContent":["import {Component, OnDestroy, OnInit} from '@angular/core';\nimport {MatTableDataSource} from \"@angular/material/table\";\nimport {of, Subject, switchMap, takeUntil} from \"rxjs\";\nimport {IssueTypesService} from \"../../../../core/services\";\nimport {MatDialog} from \"@angular/material/dialog\";\nimport {ConfirmDeleteComponent} from \"../../../../shared/confirm-delete/confirm-delete.component\";\nimport {IssueType} from \"../../../../core/interfaces\";\nimport {Store} from \"@ngrx/store\";\nimport {ProjectStateModule} from \"../../../../store\";\n\n@Component({\n    selector: 'app-project-issue-type',\n    templateUrl: './project-issue-types.component.html',\n    styleUrls: ['./project-issue-types.component.scss']\n})\nexport class ProjectIssueTypesComponent implements OnInit, OnDestroy {\n    displayedColumns = ['id', 'name', 'createdAt', 'actions'];\n\n    dataSource = new MatTableDataSource<IssueType>();\n\n    sub$ = new Subject();\n\n    constructor(\n        private readonly store: Store<{project: ProjectStateModule}>,\n        private issueTypesService: IssueTypesService,\n        public dialog: MatDialog,\n        private issueTypeService: IssueTypesService) {\n    }\n\n    ngOnInit() {\n        this.getIssueTypes();\n    }\n\n    getIssueTypes() {\n        this.issueTypesService.getIssueType()\n            .pipe(takeUntil(this.sub$))\n            .subscribe(boards => {\n                console.log(boards)\n                this.dataSource.data = boards;\n            });\n    }\n\n    deleteIssueType(id: number) {\n        const dialogRef = this.dialog.open(ConfirmDeleteComponent);\n\n        dialogRef.afterClosed()\n            .pipe(\n                takeUntil(this.sub$),\n                switchMap((result) => {\n                    if (result) {\n                        return this.issueTypeService.deleteIssueType(id);\n                    }\n                    return of(null);\n                })\n            )\n            .subscribe(result => {\n                if (result) {\n                    this.getIssueTypes();\n                }\n            });\n    }\n\n    ngOnDestroy(): void {\n        this.sub$.next(null);\n        this.sub$.complete();\n    }\n}\n","\n\n<div>\n  <button mat-raised-button color=\"primary\" [routerLink]=\"['/application/setting/issue-types/add']\">Add Issue Type</button>\n</div>\n\n\n<div class=\"container\">\n  <table mat-table [dataSource]=\"dataSource\" class=\"mat-elevation-z8\">\n\n    <!-- Name Column -->\n    <ng-container matColumnDef=\"id\">\n      <th mat-header-cell *matHeaderCellDef> # </th>\n      <td mat-cell *matCellDef=\"let element\"> {{element.id}} </td>\n    </ng-container>\n\n    <!-- Name Column -->\n    <ng-container matColumnDef=\"name\">\n      <th mat-header-cell *matHeaderCellDef> Name </th>\n      <td mat-cell *matCellDef=\"let element\"> {{element.name}} </td>\n    </ng-container>\n\n    <!-- Name Column -->\n    <ng-container matColumnDef=\"createdAt\">\n      <th mat-header-cell *matHeaderCellDef> Created At </th>\n      <td mat-cell *matCellDef=\"let element\"> {{element.createdAt}} </td>\n    </ng-container>\n\n    <!-- Name Column -->\n    <ng-container matColumnDef=\"actions\">\n      <th mat-header-cell *matHeaderCellDef>  </th>\n      <td mat-cell *matCellDef=\"let element\">\n        <button mat-raised-button color=\"primary\" [routerLink]=\"['/application/setting/issue-types/edit', element.id]\">Edit</button>\n        <button mat-raised-button color=\"warn\" (click)=\"deleteIssueType(element.id)\">Delete</button>\n      </td>\n    </ng-container>\n\n\n    <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n    <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n  </table>\n</div>\n\n\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}