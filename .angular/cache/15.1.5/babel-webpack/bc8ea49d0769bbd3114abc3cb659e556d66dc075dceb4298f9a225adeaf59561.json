{"ast":null,"code":"import { FormControl, FormGroup } from \"@angular/forms\";\nimport { of, Subject, switchMap, takeUntil, tap } from \"rxjs\";\nimport { createProject, loadProjects, updateProject } from \"../../../store\";\nimport { getProject } from \"../../../store/rxProject/project.selectors\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@ngrx/store\";\nimport * as i2 from \"../../../core/services/project.service\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/forms\";\nimport * as i5 from \"@angular/material/form-field\";\nimport * as i6 from \"@angular/material/input\";\nimport * as i7 from \"@angular/material/button\";\nexport class ProjectEditComponent {\n  constructor(store, projectService, router, route) {\n    this.store = store;\n    this.projectService = projectService;\n    this.router = router;\n    this.route = route;\n    this.sub$ = new Subject();\n    this.form = new FormGroup({\n      id: new FormControl('null'),\n      name: new FormControl('null'),\n      description: new FormControl('null'),\n      abbreviation: new FormControl('null'),\n      color: new FormControl('null')\n    });\n    this.project = {};\n    this.currentProjectId$ = tap(() => {\n      this.store.dispatch(loadProjects());\n    });\n  }\n  // currentProj = this.projectService.getProjectById(this.currentProjectId$)\n  //     .pipe(takeUntil(this.sub$))\n  //     .subscribe((res) => {\n  //         this.project = res;\n  //         this.form.patchValue(this.project)\n  //\n  //     })\n  get currentProject() {\n    return this.store.dispatch(loadProjects());\n  }\n  delete() {\n    this.projectService.deleteProject(this.currentProjectId$).pipe(takeUntil(this.sub$)).subscribe(res => {\n      localStorage.removeItem('project');\n    });\n    setTimeout(() => {\n      location.reload();\n    }, 2000);\n  }\n  ngOnInit() {\n    this.route.params.pipe(takeUntil(this.sub$), switchMap(params => {\n      if (params['id']) {\n        this.projectId = +params['id'];\n        return this.store.select(getProject, {\n          projectId: +params['id']\n        });\n      }\n      return of(null);\n    })).subscribe(params => {\n      if (params) {\n        this.form.patchValue(params);\n      }\n      return;\n    });\n  }\n  save() {\n    this.form.markAllAsTouched();\n    if (this.form.invalid) {\n      return;\n    }\n    if (this.projectId) {\n      this.store.dispatch(updateProject({\n        project: this.form.value\n      }));\n      this.router.navigate(['/application/setting/info']).then();\n      return;\n    } else {\n      this.store.dispatch(createProject({\n        project: this.form.value\n      }));\n    }\n  }\n  ngOnDestroy() {\n    this.sub$.next(null);\n    this.sub$.complete();\n  }\n}\nProjectEditComponent.ɵfac = function ProjectEditComponent_Factory(t) {\n  return new (t || ProjectEditComponent)(i0.ɵɵdirectiveInject(i1.Store), i0.ɵɵdirectiveInject(i2.ProjectService), i0.ɵɵdirectiveInject(i3.Router), i0.ɵɵdirectiveInject(i3.ActivatedRoute));\n};\nProjectEditComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ProjectEditComponent,\n  selectors: [[\"app-project-edit\"]],\n  decls: 24,\n  vars: 1,\n  consts: [[1, \"container\"], [3, \"formGroup\"], [\"matInput\", \"\", \"placeholder\", \"Name\", \"formControlName\", \"name\"], [\"matInput\", \"\", \"placeholder\", \"Abbreviation\", \"formControlName\", \"abbreviation\"], [\"matInput\", \"\", \"placeholder\", \"Description\", \"formControlName\", \"description\"], [\"matInput\", \"\", \"placeholder\", \"Color\", \"formControlName\", \"color\", \"type\", \"color\"], [\"mat-raised-button\", \"\", \"color\", \"primary\", 3, \"click\"]],\n  template: function ProjectEditComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"h1\");\n      i0.ɵɵtext(1, \"Edit Project\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"div\", 0)(3, \"form\", 1)(4, \"mat-form-field\")(5, \"mat-label\");\n      i0.ɵɵtext(6, \"Project Name\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(7, \"input\", 2);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(8, \"mat-form-field\")(9, \"mat-label\");\n      i0.ɵɵtext(10, \"Abbreviation\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(11, \"input\", 3);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(12, \"mat-form-field\")(13, \"mat-label\");\n      i0.ɵɵtext(14, \"Description\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(15, \"input\", 4);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(16, \"mat-form-field\")(17, \"mat-label\");\n      i0.ɵɵtext(18, \"Color\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(19, \"input\", 5);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(20, \"button\", 6);\n      i0.ɵɵlistener(\"click\", function ProjectEditComponent_Template_button_click_20_listener() {\n        return ctx.delete();\n      });\n      i0.ɵɵtext(21, \"delete\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(22, \"button\", 6);\n      i0.ɵɵlistener(\"click\", function ProjectEditComponent_Template_button_click_22_listener() {\n        return ctx.save();\n      });\n      i0.ɵɵtext(23, \"Save changes\");\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"formGroup\", ctx.form);\n    }\n  },\n  dependencies: [i4.ɵNgNoValidate, i4.DefaultValueAccessor, i4.NgControlStatus, i4.NgControlStatusGroup, i5.MatFormField, i5.MatLabel, i6.MatInput, i4.FormGroupDirective, i4.FormControlName, i7.MatButton],\n  styles: [\"h1[_ngcontent-%COMP%] {\\n  display: flex;\\n  flex-direction: row;\\n  align-items: flex-start;\\n  justify-content: center;\\n  width: 100%;\\n  height: 100%;\\n  text-align: center;\\n  margin-top: 20px;\\n  font-size: 30px;\\n  font-weight: 500;\\n}\\n\\n[_nghost-%COMP%] {\\n  display: flex;\\n  flex-direction: column;\\n  align-items: flex-start;\\n}\\n\\n[_nghost-%COMP%]   button[_ngcontent-%COMP%] {\\n  margin-left: 5px;\\n  flex-wrap: wrap;\\n  padding: 5px;\\n}\\n\\n.container[_ngcontent-%COMP%] {\\n  display: flex;\\n  flex-direction: row;\\n  align-items: flex-start;\\n  justify-content: center;\\n  width: 100%;\\n  height: 100%;\\n  margin: 10px;\\n}\\n\\n.container[_ngcontent-%COMP%]   form[_ngcontent-%COMP%] {\\n  display: flex;\\n  gap: 5px;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvcGFnZXMvYXBwbGljYXRpb24vcHJvamVjdC1lZGl0L3Byb2plY3QtZWRpdC5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLGFBQUE7RUFDQSxtQkFBQTtFQUNBLHVCQUFBO0VBQ0EsdUJBQUE7RUFDQSxXQUFBO0VBQ0EsWUFBQTtFQUNBLGtCQUFBO0VBQ0EsZ0JBQUE7RUFDQSxlQUFBO0VBQ0EsZ0JBQUE7QUFDRjs7QUFFQTtFQUNFLGFBQUE7RUFDQSxzQkFBQTtFQUNBLHVCQUFBO0FBQ0Y7O0FBQUU7RUFDRSxnQkFBQTtFQUNBLGVBQUE7RUFDQSxZQUFBO0FBRUo7O0FBQ0E7RUFDRSxhQUFBO0VBQ0EsbUJBQUE7RUFDQSx1QkFBQTtFQUNBLHVCQUFBO0VBQ0EsV0FBQTtFQUNBLFlBQUE7RUFDQSxZQUFBO0FBRUY7O0FBREE7RUFDRSxhQUFBO0VBQ0EsUUFBQTtBQUdGIiwic291cmNlc0NvbnRlbnQiOlsiaDF7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtZGlyZWN0aW9uOiByb3c7XG4gIGFsaWduLWl0ZW1zOiBmbGV4LXN0YXJ0O1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgd2lkdGg6IDEwMCU7XG4gIGhlaWdodDogMTAwJTtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xuICBtYXJnaW4tdG9wOiAyMHB4O1xuICBmb250LXNpemU6IDMwcHg7XG4gIGZvbnQtd2VpZ2h0OiA1MDA7XG59XG5cbjpob3N0IHtcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgYWxpZ24taXRlbXM6IGZsZXgtc3RhcnQ7XG4gIGJ1dHRvbntcbiAgICBtYXJnaW4tbGVmdDogNXB4O1xuICAgIGZsZXgtd3JhcDogd3JhcDtcbiAgICBwYWRkaW5nOiA1cHg7XG4gIH1cbn1cbi5jb250YWluZXJ7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtZGlyZWN0aW9uOnJvdztcbiAgYWxpZ24taXRlbXM6IGZsZXgtc3RhcnQ7XG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICB3aWR0aDogMTAwJTtcbiAgaGVpZ2h0OiAxMDAlO1xuICBtYXJnaW46IDEwcHg7XG5mb3Jte1xuICBkaXNwbGF5OiBmbGV4O1xuICBnYXA6NXB4O1xufVxufVxuIl0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"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","names":["FormControl","FormGroup","of","Subject","switchMap","takeUntil","tap","createProject","loadProjects","updateProject","getProject","ProjectEditComponent","constructor","store","projectService","router","route","id","name","description","abbreviation","color","dispatch","currentProject","delete","deleteProject","currentProjectId$","pipe","sub$","subscribe","res","localStorage","removeItem","setTimeout","location","reload","ngOnInit","params","projectId","select","form","patchValue","save","markAllAsTouched","invalid","project","value","navigate","then","ngOnDestroy","next","complete","selectors","decls","vars","consts","template","i0","ctx"],"sourceRoot":"","sources":["/Users/macbookpro/Desktop/GitHubRepo/Task-Manager-with-NgRx/src/app/pages/application/project-edit/project-edit.component.ts","/Users/macbookpro/Desktop/GitHubRepo/Task-Manager-with-NgRx/src/app/pages/application/project-edit/project-edit.component.html"],"sourcesContent":["import {Component, OnDestroy, OnInit} from '@angular/core';\nimport {FormControl, FormGroup, Validators} from \"@angular/forms\";\nimport {ProjectService} from \"../../../core/services/project.service\";\nimport {IProject} from \"../../../core/interfaces/iproject\";\nimport {ActivatedRoute, Router} from \"@angular/router\";\nimport {ControlProjectsService} from \"../../../core/services/control-projects.service\";\nimport {Observable, of, pipe, Subject, switchMap, takeUntil, tap} from \"rxjs\";\nimport {Store} from \"@ngrx/store\";\nimport {createProject, loadProjects, ProjectStateModule, setProject, updateProject} from \"../../../store\";\n\nimport {MatSnackBar} from \"@angular/material/snack-bar\";\n\nimport {getProject} from \"../../../store/rxProject/project.selectors\";\n\n@Component({\n    selector: 'app-project-edit',\n    templateUrl: './project-edit.component.html',\n    styleUrls: ['./project-edit.component.scss']\n})\nexport class ProjectEditComponent implements OnInit, OnDestroy {\n\n\n\n    sub$ = new Subject()\n    projectId!: number;\n\n    constructor(\n        private store: Store<{ project: ProjectStateModule }>,\n        private projectService: ProjectService,\n        private router: Router,\n        private route: ActivatedRoute,\n    ) {\n    }\n\n\n\n    form: FormGroup = new FormGroup({\n        id: new FormControl( 'null',),\n        name: new FormControl('null',),\n        description: new FormControl('null',),\n        abbreviation: new FormControl('null',),\n        color: new FormControl('null',),\n    });\n    color: any;\n    project: IProject = {} as IProject;\n\n    currentProjectId$: any = tap(() => {\n        this.store.dispatch(loadProjects())\n    })\n    // currentProj = this.projectService.getProjectById(this.currentProjectId$)\n    //     .pipe(takeUntil(this.sub$))\n    //     .subscribe((res) => {\n    //         this.project = res;\n    //         this.form.patchValue(this.project)\n    //\n    //     })\n\n    get currentProject(): any {\n        return this.store.dispatch(loadProjects())\n\n    }\n\n    delete() {\n        this.projectService.deleteProject(this.currentProjectId$)\n            .pipe(takeUntil(this.sub$))\n            .subscribe((res) => {\n                localStorage.removeItem('project');\n            });\n        setTimeout(() => {\n            location.reload()\n        }, 2000)\n    }\n\n    ngOnInit(): void {\n        this.route.params\n            .pipe(\n                takeUntil(this.sub$),\n        switchMap((params: any) => {\n                if (params['id']) {\n                    this.projectId = +params['id'];\n                    return this.store.select(getProject, {projectId: +params['id']})\n                }\n                return of(null);\n            }\n        )\n    ).subscribe(( params: any) => {\n            if (params) {\n                this.form.patchValue(params)\n\n\n            }\n            return;\n        })\n\n    }\n\n\n    save() {\n        this.form.markAllAsTouched();\n        if (this.form.invalid) {\n            return\n        }\n        if (this.projectId) {\n            this.store.dispatch(updateProject({project: this.form.value}))\n            this.router.navigate(['/application/setting/info']).then();\n            return\n        } else {\n            this.store.dispatch(createProject({project: this.form.value}))\n        }\n    }\n    ngOnDestroy(): void {\n        this.sub$.next(null);\n        this.sub$.complete();\n    }\n\n\n}\n\n","<h1>Edit Project</h1>\n<div class=\"container\">\n<form [formGroup]=\"form\" >\n  <mat-form-field>\n    <mat-label>Project Name</mat-label>\n    <input matInput placeholder=\"Name\" formControlName=\"name\" >\n  </mat-form-field>\n  <mat-form-field>\n    <mat-label>Abbreviation</mat-label>\n    <input matInput placeholder=\"Abbreviation\" formControlName=\"abbreviation\" >\n  </mat-form-field>\n  <mat-form-field>\n    <mat-label>Description</mat-label>\n    <input matInput placeholder=\"Description\" formControlName=\"description\" >\n\n  </mat-form-field>\n  <mat-form-field>\n    <mat-label>Color</mat-label>\n    <input matInput placeholder=\"Color\" formControlName=\"color\" type=\"color\">\n  </mat-form-field>\n<button mat-raised-button color=\"primary\" (click)=\"delete()\">delete</button>\n  <button mat-raised-button color=\"primary\" (click)=\"save()\">Save changes</button>\n</form>\n</div>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}