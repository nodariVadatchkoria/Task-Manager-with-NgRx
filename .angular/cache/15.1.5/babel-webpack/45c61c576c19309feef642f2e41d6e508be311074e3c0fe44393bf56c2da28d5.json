{"ast":null,"code":"import { BaseService } from './base.service';\nimport * as i0 from \"@angular/core\";\nexport class ControlProjectsService extends BaseService {\n  addProject(payload) {\n    localStorage.setItem('project', JSON.stringify(payload));\n    return this.post('project', payload);\n  }\n  getProjects(order, page, limit) {\n    return this.get(`project?order=${order}&page=${page}&limit=${limit}`);\n  }\n  getAllProjects() {\n    return this.get('project/all');\n  }\n  getById(id) {\n    return this.get('project/' + `${id}`);\n  }\n}\nControlProjectsService.ɵfac = /*@__PURE__*/function () {\n  let ɵControlProjectsService_BaseFactory;\n  return function ControlProjectsService_Factory(t) {\n    return (ɵControlProjectsService_BaseFactory || (ɵControlProjectsService_BaseFactory = i0.ɵɵgetInheritedFactory(ControlProjectsService)))(t || ControlProjectsService);\n  };\n}();\nControlProjectsService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: ControlProjectsService,\n  factory: ControlProjectsService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AACA,SAASA,WAAW,QAAQ,gBAAgB;;AAU5C,OAAM,MAAOC,sBAAuB,SAAQD,WAAW;EACrDE,UAAU,CAACC,OAAY;IAErBC,YAAY,CAACC,OAAO,CAAC,SAAS,EAAEC,IAAI,CAACC,SAAS,CAACJ,OAAO,CAAC,CAAC;IACxD,OAAO,IAAI,CAACK,IAAI,CAAM,SAAS,EAAEL,OAAO,CAAC;EAC3C;EAEAM,WAAW,CAACC,KAAa,EAAEC,IAAY,EAAEC,KAAa;IACpD,OAAO,IAAI,CAACC,GAAG,CAAM,iBAAiBH,KAAK,SAASC,IAAI,UAAUC,KAAK,EAAE,CAAC;EAC5E;EAEAE,cAAc;IACZ,OAAO,IAAI,CAACD,GAAG,CAAa,aAAa,CAAC;EAC5C;EACAE,OAAO,CAACC,EAAO;IACb,OAAO,IAAI,CAACH,GAAG,CAAM,UAAU,GAAC,GAAGG,EAAE,EAAE,CAAC;EAC1C;;AAhBWf,sBAAuB;;;mHAAvBA,sBAAsB,SAAtBA,sBAAsB;EAAA;AAAA;AAAtBA,sBAAuB;SAAvBA,sBAAsB;EAAAgB,SAAtBhB,sBAAsB;EAAAiB,YAFrB;AAAM","names":["BaseService","ControlProjectsService","addProject","payload","localStorage","setItem","JSON","stringify","post","getProjects","order","page","limit","get","getAllProjects","getById","id","factory","providedIn"],"sourceRoot":"","sources":["/Users/macbookpro/Desktop/GitHubRepo/Task-Manager-with-NgRx/src/app/core/services/control-projects.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { BaseService } from './base.service';\n\nimport { Observable, tap } from 'rxjs';\nimport { ProjectFacade } from 'src/app/facades/project-facade.service';\nimport { HttpHeaders } from '@angular/common/http';\nimport {IProject} from \"../interfaces/iproject\";\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ControlProjectsService extends BaseService {\n  addProject(payload: any): Observable<any> {\n\n    localStorage.setItem('project', JSON.stringify(payload));\n    return this.post<any>('project', payload);\n  }\n\n  getProjects(order: string, page: number, limit: number): Observable<any> {\n    return this.get<any>(`project?order=${order}&page=${page}&limit=${limit}`);\n  }\n\n  getAllProjects():Observable<IProject[]> {\n    return this.get<IProject[]>('project/all');\n  }\n  getById(id: any):Observable<any> {\n    return this.get<any>('project/'+`${id}`)\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}