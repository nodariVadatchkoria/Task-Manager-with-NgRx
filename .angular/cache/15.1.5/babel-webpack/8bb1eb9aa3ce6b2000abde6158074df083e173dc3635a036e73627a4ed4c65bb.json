{"ast":null,"code":"import { BaseService } from \"./base.service\";\nimport * as i0 from \"@angular/core\";\nexport class EpicService extends BaseService {\n  getEpics() {\n    return this.get('epics');\n  }\n  getEpic(id) {\n    return this.get(`epics/${id}`);\n  }\n  createEpic(epic) {\n    return this.post('epics', epic);\n  }\n  updateEpic(epic) {\n    return this.put(`epics/${epic.id}`, epic);\n  }\n  deleteEpic(id) {\n    return this.delete(`epics/${id}`);\n  }\n  getProjEpics() {\n    return this.get('epics');\n  }\n  getProjEpicById(id) {\n    return this.get(`epics/${id}`);\n  }\n  createProjEpic(epic) {\n    return this.post('epics', epic);\n  }\n  updateProjEpic(epic) {\n    return this.put(`epics/${epic.id}`, epic);\n  }\n  deleteProjEpic(id) {\n    return this.delete(`epics/${id}`);\n  }\n}\nEpicService.ɵfac = /*@__PURE__*/function () {\n  let ɵEpicService_BaseFactory;\n  return function EpicService_Factory(t) {\n    return (ɵEpicService_BaseFactory || (ɵEpicService_BaseFactory = i0.ɵɵgetInheritedFactory(EpicService)))(t || EpicService);\n  };\n}();\nEpicService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: EpicService,\n  factory: EpicService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AACA,SAAQA,WAAW,QAAO,gBAAgB;;AAQ1C,OAAM,MAAOC,WAAY,SAAQD,WAAW;EAE1CE,QAAQ;IACN,OAAO,IAAI,CAACC,GAAG,CAAM,OAAO,CAAC;EAC/B;EAEAC,OAAO,CAACC,EAAU;IAChB,OAAO,IAAI,CAACF,GAAG,CAAM,SAASE,EAAE,EAAE,CAAC;EACrC;EAEAC,UAAU,CAACC,IAAS;IAClB,OAAO,IAAI,CAACC,IAAI,CAAM,OAAO,EAAED,IAAI,CAAC;EACtC;EAEAE,UAAU,CAACF,IAAS;IAClB,OAAO,IAAI,CAACG,GAAG,CAAM,SAASH,IAAI,CAACF,EAAE,EAAE,EAAEE,IAAI,CAAC;EAChD;EAEAI,UAAU,CAACN,EAAU;IACnB,OAAO,IAAI,CAACO,MAAM,CAAC,SAASP,EAAE,EAAE,CAAC;EACnC;EAEAQ,YAAY;IACV,OAAO,IAAI,CAACV,GAAG,CAAU,OAAO,CAAC;EACnC;EACAW,eAAe,CAACT,EAAU;IACxB,OAAO,IAAI,CAACF,GAAG,CAAQ,SAASE,EAAE,EAAE,CAAC;EACvC;EACAU,cAAc,CAACR,IAAW;IACxB,OAAO,IAAI,CAACC,IAAI,CAAQ,OAAO,EAAED,IAAI,CAAC;EACxC;EACAS,cAAc,CAACT,IAAW;IACxB,OAAO,IAAI,CAACG,GAAG,CAAQ,SAASH,IAAI,CAACF,EAAE,EAAE,EAAEE,IAAI,CAAC;EAClD;EACAU,cAAc,CAACZ,EAAU;IACvB,OAAO,IAAI,CAACO,MAAM,CAAC,SAASP,EAAE,EAAE,CAAC;EACnC;;AApCWJ,WAAY;;;6FAAZA,WAAW,SAAXA,WAAW;EAAA;AAAA;AAAXA,WAAY;SAAZA,WAAW;EAAAiB,SAAXjB,WAAW;EAAAkB,YAFV;AAAM","names":["BaseService","EpicService","getEpics","get","getEpic","id","createEpic","epic","post","updateEpic","put","deleteEpic","delete","getProjEpics","getProjEpicById","createProjEpic","updateProjEpic","deleteProjEpic","factory","providedIn"],"sourceRoot":"","sources":["/Users/macbookpro/Desktop/GitHubRepo/Task-Manager-with-NgRx/src/app/core/services/epic.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport {BaseService} from \"./base.service\";\nimport {Observable} from \"rxjs\";\nimport {PaginationResponse} from \"../interfaces/pagination-response\";\nimport {IEpic} from \"../interfaces/epic\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class EpicService extends BaseService{\n\n  getEpics(): Observable<any> {\n    return this.get<any>('epics')\n  }\n\n  getEpic(id: number): Observable<any> {\n    return this.get<any>(`epics/${id}`);\n  }\n\n  createEpic(epic: any): Observable<any> {\n    return this.post<any>('epics', epic);\n  }\n\n  updateEpic(epic: any): Observable<any> {\n    return this.put<any>(`epics/${epic.id}`, epic)\n  }\n\n  deleteEpic(id: number): Observable<any> {\n    return this.delete(`epics/${id}`)\n  }\n\n  getProjEpics(): Observable<IEpic[]> {\n    return this.get<IEpic[]>('epics')\n  }\n  getProjEpicById(id: number): Observable<IEpic> {\n    return this.get<IEpic>(`epics/${id}`)\n  }\n  createProjEpic(epic: IEpic): Observable<IEpic> {\n    return this.post<IEpic>('epics', epic);\n  }\n  updateProjEpic(epic: IEpic): Observable<IEpic> {\n    return this.put<IEpic>(`epics/${epic.id}`, epic)\n  }\n  deleteProjEpic(id: number): Observable<any> {\n    return this.delete(`epics/${id}`)\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}