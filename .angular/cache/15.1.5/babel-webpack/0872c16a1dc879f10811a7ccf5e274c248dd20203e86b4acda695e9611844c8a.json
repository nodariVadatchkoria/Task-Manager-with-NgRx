{"ast":null,"code":"import { createEffect, ofType } from \"@ngrx/effects\";\nimport { loadUsers, loadUsersSuccess, loadUsersFailure } from \"./user.actions\";\nimport { catchError, map, of, switchMap } from \"rxjs\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@ngrx/effects\";\nimport * as i2 from \"../../../core/services/users.service\";\nexport class UserEffects {\n  constructor(actions$, usersService) {\n    this.actions$ = actions$;\n    this.usersService = usersService;\n    this.loadUsers$ = createEffect(() => this.actions$.pipe(ofType(loadUsers), switchMap(() => this.usersService.getUsers({\n      page: 1,\n      limit: 10\n    })), map(data => loadUsersSuccess({\n      data\n    })), catchError(err => of(loadUsersFailure({\n      error: err\n    })))));\n  }\n}\nUserEffects.ɵfac = function UserEffects_Factory(t) {\n  return new (t || UserEffects)(i0.ɵɵinject(i1.Actions), i0.ɵɵinject(i2.UsersService));\n};\nUserEffects.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: UserEffects,\n  factory: UserEffects.ɵfac\n});","map":{"version":3,"mappings":"AACA,SAAiBA,YAAY,EAAEC,MAAM,QAAO,eAAe;AAE3D,SAAQC,SAAS,EAAEC,gBAAgB,EAAEC,gBAAgB,QAAO,gBAAgB;AAC5E,SAAQC,UAAU,EAAEC,GAAG,EAAEC,EAAE,EAAEC,SAAS,QAAO,MAAM;;;;AAKnD,OAAM,MAAOC,WAAW;EACpBC,YACYC,QAAiB,EACjBC,YAA0B;IAD1B,aAAQ,GAARD,QAAQ;IACR,iBAAY,GAAZC,YAAY;IAGxB,eAAU,GAAGZ,YAAY,CAAC,MAAM,IAAI,CAACW,QAAQ,CAACE,IAAI,CAC9CZ,MAAM,CAACC,SAAS,CAAC,EACjBM,SAAS,CAAC,MAAM,IAAI,CAACI,YAAY,CAACE,QAAQ,CAAC;MACvCC,IAAI,EAAE,CAAC;MACPC,KAAK,EAAE;KAElB,CAAC,CAAC,EACKV,GAAG,CAAEW,IAAI,IAAKd,gBAAgB,CAAC;MAACc;IAAI,CAAC,CAAE,CAAC,EAExCZ,UAAU,CAAEa,GAAG,IAAKX,EAAE,CAACH,gBAAgB,CAAC;MAACe,KAAK,EAAED;IAAG,CAAC,CAAC,CAAC,CAAC,CAC1D,CAAC;EAZC;;AAJMT,WAAW;mBAAXA,WAAW;AAAA;AAAXA,WAAW;SAAXA,WAAW;EAAAW,SAAXX,WAAW;AAAA","names":["createEffect","ofType","loadUsers","loadUsersSuccess","loadUsersFailure","catchError","map","of","switchMap","UserEffects","constructor","actions$","usersService","pipe","getUsers","page","limit","data","err","error","factory"],"sourceRoot":"","sources":["/Users/macbookpro/Desktop/GitHubRepo/Task-Manager-with-NgRx/src/app/pages/user/store /user.effects.ts"],"sourcesContent":["import {Injectable} from \"@angular/core\";\nimport {Actions, createEffect, ofType} from \"@ngrx/effects\";\nimport {UsersService} from \"../../../core/services/users.service\";\nimport {loadUsers, loadUsersSuccess, loadUsersFailure} from \"./user.actions\";\nimport {catchError, map, of, switchMap} from \"rxjs\";\nimport {data} from \"autoprefixer\";\n\n@Injectable()\n\nexport class UserEffects {\n    constructor(\n        private actions$: Actions,\n        private usersService: UsersService,\n    ) {}\n\n    loadUsers$ = createEffect(() => this.actions$.pipe(\n        ofType(loadUsers),\n        switchMap(() => this.usersService.getUsers({\n            page: 1,\n            limit: 10,\n\n})),\n        map((data) => loadUsersSuccess({data} )),\n\n        catchError((err) => of(loadUsersFailure({error: err})))\n    ));\n\n}"]},"metadata":{},"sourceType":"module","externalDependencies":[]}