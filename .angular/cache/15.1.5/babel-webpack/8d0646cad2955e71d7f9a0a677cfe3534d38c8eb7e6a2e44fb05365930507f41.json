{"ast":null,"code":"import { FormControl, FormGroup, Validators } from \"@angular/forms\";\nimport { Subject, takeUntil } from \"rxjs\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"../../../../../core/services/epic.service\";\nimport * as i3 from \"@angular/material/button\";\nimport * as i4 from \"@angular/forms\";\nimport * as i5 from \"@angular/material/form-field\";\nimport * as i6 from \"@angular/material/input\";\nexport class ProjectEpicAddEditComponent {\n  constructor(route, router, epicService) {\n    this.route = route;\n    this.router = router;\n    this.epicService = epicService;\n    this.sub$ = new Subject();\n    this.form = new FormGroup({\n      id: new FormControl(''),\n      name: new FormControl('', Validators.required),\n      description: new FormControl('', Validators.required)\n    });\n  }\n  ngOnInit() {\n    this.route.params.subscribe(params => {\n      if (params['id']) {\n        this.epicId = +params['id'];\n        this.getEpic(this.epicId);\n      }\n    });\n  }\n  save() {\n    this.form.markAllAsTouched();\n    if (this.form.invalid) {\n      return;\n    }\n    if (this.epicId) {\n      this.epicService.updateEpic(this.form.value).pipe(takeUntil(this.sub$)).subscribe(() => {\n        this.router.navigate(['/projects/setting/epics']).then();\n      });\n    } else {\n      this.epicService.createEpic(this.form.value).pipe(takeUntil(this.sub$)).subscribe(() => {\n        this.router.navigate(['/projects/setting/epics']).then();\n      });\n    }\n  }\n  getEpic(id) {\n    this.epicService.getEpic(id).pipe(takeUntil(this.sub$)).subscribe(res => {\n      this.form.patchValue(res);\n    });\n  }\n  ngOnDestroy() {\n    this.sub$.next(null);\n    this.sub$.complete();\n  }\n}\nProjectEpicAddEditComponent.ɵfac = function ProjectEpicAddEditComponent_Factory(t) {\n  return new (t || ProjectEpicAddEditComponent)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i2.EpicService));\n};\nProjectEpicAddEditComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ProjectEpicAddEditComponent,\n  selectors: [[\"app-project-epic-add-edit\"]],\n  decls: 13,\n  vars: 1,\n  consts: [[1, \"flex\"], [1, \"margin\", 3, \"formGroup\"], [1, \"form\"], [\"matInput\", \"\", \"placeholder\", \"Name\", \"formControlName\", \"name\"], [\"matInput\", \"\", \"placeholder\", \"Description\", \"formControlName\", \"description\"], [\"mat-raised-button\", \"\", \"color\", \"primary\", 3, \"click\"]],\n  template: function ProjectEpicAddEditComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"form\", 1)(2, \"div\", 2)(3, \"mat-form-field\")(4, \"mat-label\");\n      i0.ɵɵtext(5, \"Name\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(6, \"input\", 3);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(7, \"mat-form-field\")(8, \"mat-label\");\n      i0.ɵɵtext(9, \"Description\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(10, \"input\", 4);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(11, \"button\", 5);\n      i0.ɵɵlistener(\"click\", function ProjectEpicAddEditComponent_Template_button_click_11_listener() {\n        return ctx.save();\n      });\n      i0.ɵɵtext(12, \"Save\");\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"formGroup\", ctx.form);\n    }\n  },\n  dependencies: [i3.MatButton, i4.ɵNgNoValidate, i4.DefaultValueAccessor, i4.NgControlStatus, i4.NgControlStatusGroup, i4.FormGroupDirective, i4.FormControlName, i5.MatFormField, i5.MatLabel, i6.MatInput],\n  styles: [\".form[_ngcontent-%COMP%]{display:flex;flex-direction:column;width:250px}.flex[_ngcontent-%COMP%]{margin-top:150px;display:flex}.margin[_ngcontent-%COMP%]{margin-left:auto;margin-right:auto}\"]\n});","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}