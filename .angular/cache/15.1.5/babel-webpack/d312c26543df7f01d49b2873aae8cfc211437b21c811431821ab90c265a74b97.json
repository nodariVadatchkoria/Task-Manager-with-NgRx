{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport class CookieService {\n  constructor() {}\n  setCookie(name, value, days) {\n    let expires = \"\";\n    if (days) {\n      let date = new Date();\n      date.setTime(date.getTime() + days * 24 * 60 * 60 * 1000);\n      expires = \"; expires=\" + date.toUTCString();\n    }\n    document.cookie = name + \"=\" + (value || \"\") + expires + \";\" + \" path=/\";\n  }\n  getCookie(name) {\n    let nameEQ = name + \"=\";\n    let ca = document.cookie.split(';');\n    for (let i = 0; i < ca.length; i++) {\n      let c = ca[i];\n      while (c.charAt(0) == ' ') c = c.substring(1, c.length);\n      if (c.indexOf(nameEQ) == 0) return c.substring(nameEQ.length, c.length);\n    }\n    return null;\n  }\n  eraseCookie(name) {\n    document.cookie = name + '=; Max-Age=-99999999;';\n  }\n}\nCookieService.ɵfac = function CookieService_Factory(t) {\n  return new (t || CookieService)();\n};\nCookieService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: CookieService,\n  factory: CookieService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";AAKA,OAAM,MAAOA,aAAa;EAExBC,eACA;EAEAC,SAAS,CAACC,IAAY,EAAEC,KAAa,EAAEC,IAAY;IACjD,IAAIC,OAAO,GAAG,EAAE;IAChB,IAAID,IAAI,EAAE;MACR,IAAIE,IAAI,GAAG,IAAIC,IAAI,EAAE;MACrBD,IAAI,CAACE,OAAO,CAACF,IAAI,CAACG,OAAO,EAAE,GAAIL,IAAI,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,IAAK,CAAC;MAC3DC,OAAO,GAAG,YAAY,GAAGC,IAAI,CAACI,WAAW,EAAE;;IAG7CC,QAAQ,CAACC,MAAM,GAAGV,IAAI,GAAG,GAAG,IAAIC,KAAK,IAAI,EAAE,CAAC,GAAGE,OAAO,GAAG,GAAG,GAAG,SAAS;EAC1E;EAEAQ,SAAS,CAACX,IAAY;IACpB,IAAIY,MAAM,GAAGZ,IAAI,GAAG,GAAG;IACvB,IAAIa,EAAE,GAAGJ,QAAQ,CAACC,MAAM,CAACI,KAAK,CAAC,GAAG,CAAC;IACnC,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGF,EAAE,CAACG,MAAM,EAAED,CAAC,EAAE,EAAE;MAClC,IAAIE,CAAC,GAAGJ,EAAE,CAACE,CAAC,CAAC;MACb,OAAOE,CAAC,CAACC,MAAM,CAAC,CAAC,CAAC,IAAI,GAAG,EAAED,CAAC,GAAGA,CAAC,CAACE,SAAS,CAAC,CAAC,EAAEF,CAAC,CAACD,MAAM,CAAC;MACvD,IAAIC,CAAC,CAACG,OAAO,CAACR,MAAM,CAAC,IAAI,CAAC,EAAE,OAAOK,CAAC,CAACE,SAAS,CAACP,MAAM,CAACI,MAAM,EAAEC,CAAC,CAACD,MAAM,CAAC;;IAEzE,OAAO,IAAI;EACb;EACAK,WAAW,CAACrB,IAAY;IACtBS,QAAQ,CAACC,MAAM,GAAGV,IAAI,GAAG,uBAAuB;EAClD;;AA5BWH,aAAa;mBAAbA,aAAa;AAAA;AAAbA,aAAa;SAAbA,aAAa;EAAAyB,SAAbzB,aAAa;EAAA0B,YAFZ;AAAM","names":["CookieService","constructor","setCookie","name","value","days","expires","date","Date","setTime","getTime","toUTCString","document","cookie","getCookie","nameEQ","ca","split","i","length","c","charAt","substring","indexOf","eraseCookie","factory","providedIn"],"sourceRoot":"","sources":["/Users/macbookpro/Desktop/GitHubRepo/Task-Manager-with-NgRx/src/app/core/services/cookie.service.ts"],"sourcesContent":["import {Injectable} from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CookieService {\n\n  constructor() {\n  }\n\n  setCookie(name: string, value: string, days: number) {\n    let expires = \"\";\n    if (days) {\n      let date = new Date();\n      date.setTime(date.getTime() + (days * 24 * 60 * 60 * 1000));\n      expires = \"; expires=\" + date.toUTCString();\n    }\n\n    document.cookie = name + \"=\" + (value || \"\") + expires + \";\" + \" path=/\";\n  }\n\n  getCookie(name: string) {\n    let nameEQ = name + \"=\";\n    let ca = document.cookie.split(';');\n    for (let i = 0; i < ca.length; i++) {\n      let c = ca[i];\n      while (c.charAt(0) == ' ') c = c.substring(1, c.length);\n      if (c.indexOf(nameEQ) == 0) return c.substring(nameEQ.length, c.length);\n    }\n    return null;\n  }\n  eraseCookie(name: string) {\n    document.cookie = name + '=; Max-Age=-99999999;';\n  }\n\n\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}