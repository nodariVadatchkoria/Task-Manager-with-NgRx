{"ast":null,"code":"import { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { COMMA, ENTER } from '@angular/cdk/keycodes';\nimport { map, startWith, of } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"src/app/core/services/stepper.next.service\";\nimport * as i3 from \"src/app/core/services\";\nimport * as i4 from \"../../../core/services/valid-counter.service\";\nimport * as i5 from \"@angular/common\";\nimport * as i6 from \"@angular/material/stepper\";\nimport * as i7 from \"@angular/material/button\";\nimport * as i8 from \"@angular/material/form-field\";\nimport * as i9 from \"@angular/material/input\";\nimport * as i10 from \"@angular/material/select\";\nimport * as i11 from \"@angular/material/core\";\nimport * as i12 from \"@angular/material/chips\";\nimport * as i13 from \"@angular/material/autocomplete\";\nimport * as i14 from \"@angular/material/icon\";\nimport * as i15 from \"../../../core/directives/next-button.directive\";\nconst _c0 = [\"taskInput\"];\nfunction CreateIssueTypesComponent_mat_chip_43_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r8 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"mat-chip\", 28);\n    i0.ɵɵlistener(\"removed\", function CreateIssueTypesComponent_mat_chip_43_Template_mat_chip_removed_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r8);\n      const task_r6 = restoredCtx.$implicit;\n      const ctx_r7 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r7.remove(task_r6));\n    });\n    i0.ɵɵtext(1);\n    i0.ɵɵelementStart(2, \"button\", 29);\n    i0.ɵɵlistener(\"click\", function CreateIssueTypesComponent_mat_chip_43_Template_button_click_2_listener() {\n      i0.ɵɵrestoreView(_r8);\n      const ctx_r9 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r9.filterOptions());\n    });\n    i0.ɵɵelementStart(3, \"mat-icon\");\n    i0.ɵɵtext(4, \"cancel\");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const task_r6 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", task_r6, \" \");\n  }\n}\nfunction CreateIssueTypesComponent_mat_option_48_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r12 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"mat-option\", 30);\n    i0.ɵɵlistener(\"click\", function CreateIssueTypesComponent_mat_option_48_Template_mat_option_click_0_listener() {\n      i0.ɵɵrestoreView(_r12);\n      const ctx_r11 = i0.ɵɵnextContext();\n      const _r2 = i0.ɵɵreference(45);\n      _r2.blur();\n      return i0.ɵɵresetView(ctx_r11.filterOptions());\n    });\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const task_r10 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", task_r10);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", task_r10, \" \");\n  }\n}\nfunction CreateIssueTypesComponent_div_51_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"div\", 31)(2, \"mat-form-field\", 2)(3, \"mat-label\");\n    i0.ɵɵtext(4, \"Column name\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(5, \"input\", 32);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"mat-form-field\", 2)(7, \"mat-label\");\n    i0.ɵɵtext(8, \"Filed name\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(9, \"input\", 33);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const i_r14 = ctx.index;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"formGroupName\", i_r14);\n  }\n}\nexport class CreateIssueTypesComponent {\n  constructor(_formBuilder, stepperService, issueTypesService, validCounter) {\n    this._formBuilder = _formBuilder;\n    this.stepperService = stepperService;\n    this.issueTypesService = issueTypesService;\n    this.validCounter = validCounter;\n    this.issueFormGroup = this._formBuilder.group({\n      name: ['', [Validators.required, Validators.minLength(2)]],\n      description: ['', [Validators.required, Validators.minLength(4)]],\n      icon: ['', Validators.required],\n      color: ['#910D9B', Validators.required],\n      status: ['', Validators.required],\n      tasks: [[], Validators.required],\n      columns: this._formBuilder.array([])\n    });\n    this.isEditable = true;\n    this.separatorKeysCodes = [ENTER, COMMA];\n    this.taskControl = new FormControl();\n    this.tasks = [];\n    this.allTasks = ['Task', 'Bug', 'Test', 'Spike'];\n  }\n  ngOnInit() {\n    this.filteredTasks = this.taskControl.valueChanges.pipe(startWith(null), map(task => task ? this.filter(task) : this.allTasks.slice()));\n  }\n  ngAfterViewInit() {\n    this.issueFormGroup.get('name')?.setValue('ss');\n    this.issueComponent(2);\n    this.issueFormGroup.get('name')?.setValue('');\n  }\n  issueComponent(index) {\n    this.validCounter.validCounter(this.issueFormGroup, index);\n  }\n  add(event) {\n    const value = (event.value || '').trim();\n    if (value) {\n      this.tasks.push(value);\n    }\n    event.chipInput.clear();\n    this.taskControl.setValue(null);\n  }\n  remove(role) {\n    const index = this.tasks.indexOf(role);\n    this.taskInput.nativeElement.select();\n    if (index >= 0) {\n      this.tasks.splice(index, 1);\n      this.issueFormGroup.get('tasks').setValue(this.tasks);\n    }\n  }\n  selected(event) {\n    this.tasks.push(event.option.viewValue);\n    this.taskInput.nativeElement.value = '';\n    this.taskControl.setValue(null);\n  }\n  filter(value) {\n    const filterValue = value.toLowerCase();\n    return this.allTasks.filter(task => task.toLowerCase().includes(filterValue));\n  }\n  // Adding Issue Type\n  get colsArray() {\n    return this.issueFormGroup.get('columns');\n  }\n  addCol() {\n    this.colsArray.push(new FormGroup({\n      name: new FormControl('', Validators.required),\n      filedName: new FormControl('', Validators.required),\n      isRequired: new FormControl('', Validators.required)\n    }, Validators.required));\n  }\n  onSubmit() {\n    this.stepperService.changeFromLinear();\n    this.stepperService.openNextStep(3);\n    setTimeout(() => {\n      this.stepperService.changeToLinear();\n    }, 1000);\n    this.issueTypesService.setIssueType(this.issueFormGroup.value).subscribe({\n      next: res => console.log(res)\n    });\n  }\n  goBack() {\n    this.stepperService.changeFromLinear();\n    this.stepperService.openNextStep(1);\n    setTimeout(() => {\n      this.stepperService.changeToLinear();\n    }, 500);\n    if (this.issueFormGroup.valid) {\n      this.stepperService.complete.next(true);\n    }\n    this.stepperService.complete.next(false);\n  }\n  filterOptions() {\n    setTimeout(() => {\n      const tasks = this.issueFormGroup.get('tasks').value;\n      const newFilteredTasks = this.allTasks.filter(task => {\n        return !tasks.includes(task);\n      });\n      this.filteredTasks = of(newFilteredTasks);\n    }, 200);\n  }\n}\nCreateIssueTypesComponent.ɵfac = function CreateIssueTypesComponent_Factory(t) {\n  return new (t || CreateIssueTypesComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.StepperNextService), i0.ɵɵdirectiveInject(i3.IssueTypesService), i0.ɵɵdirectiveInject(i4.ValidCounterService));\n};\nCreateIssueTypesComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: CreateIssueTypesComponent,\n  selectors: [[\"app-create-issue-types\"]],\n  viewQuery: function CreateIssueTypesComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c0, 5);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.taskInput = _t.first);\n    }\n  },\n  decls: 59,\n  vars: 11,\n  consts: [[1, \"flex\", 3, \"formGroup\"], [1, \"margin-auto\"], [\"appearance\", \"fill\", 1, \"step-form-field\"], [\"matInput\", \"\", \"formControlName\", \"name\", \"placeholder\", \"\"], [\"matInput\", \"\", \"formControlName\", \"description\", \"placeholder\", \"\", \"required\", \"\"], [\"formControlName\", \"icon\"], [\"value\", \"task_alt\"], [1, \"material-icons\"], [\"value\", \"change_history\"], [\"value\", \"timeline\"], [\"value\", \"rebase_edit\"], [\"matInput\", \"\", \"type\", \"color\", \"formControlName\", \"color\", \"value\", \"#910D9B\", \"required\", \"\"], [\"formControlName\", \"status\"], [\"value\", \"true\"], [\"value\", \"false\"], [\"aria-label\", \"Task Selection\", \"formControlName\", \"tasks\", \"required\", \"\"], [\"chipListBox\", \"\"], [3, \"removed\", 4, \"ngFor\", \"ngForOf\"], [\"placeholder\", \"New Task\", \"formControlName\", \"tasks\", 3, \"formControl\", \"matAutocomplete\", \"matChipInputFor\", \"matChipInputSeparatorKeyCodes\", \"matChipInputTokenEnd\"], [\"taskInput\", \"\"], [3, \"optionSelected\"], [\"auto\", \"matAutocomplete\"], [3, \"value\", \"click\", 4, \"ngFor\", \"ngForOf\"], [\"formArrayName\", \"columns\", 1, \"step-form-field\", \"added\"], [4, \"ngFor\", \"ngForOf\"], [\"type\", \"button\", \"mat-button\", \"\", \"color\", \"primary\", 1, \"add\", 3, \"click\"], [\"mat-button\", \"\", \"matStepperPrevious\", \"\", 3, \"click\"], [\"mat-button\", \"\", \"matStepperNext\", \"\", \"type\", \"button\", \"appNextButton\", \"\", 3, \"disabled\", \"click\"], [3, \"removed\"], [\"matChipRemove\", \"\", 3, \"click\"], [3, \"value\", \"click\"], [3, \"formGroupName\"], [\"matInput\", \"\", \"formControlName\", \"name\", \"placeholder\", \"\", \"required\", \"\"], [\"matInput\", \"\", \"formControlName\", \"filedName\", \"placeholder\", \"\", \"required\", \"\"]],\n  template: function CreateIssueTypesComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"form\", 0)(1, \"div\", 1)(2, \"mat-form-field\", 2)(3, \"mat-label\");\n      i0.ɵɵtext(4, \"Name\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(5, \"input\", 3);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(6, \"mat-form-field\", 2)(7, \"mat-label\");\n      i0.ɵɵtext(8, \"Description\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(9, \"input\", 4);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(10, \"mat-form-field\", 2)(11, \"mat-label\");\n      i0.ɵɵtext(12, \"Icon\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(13, \"mat-select\", 5)(14, \"mat-option\", 6)(15, \"span\", 7);\n      i0.ɵɵtext(16, \"task_alt\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(17, \"mat-option\", 8)(18, \"span\", 7);\n      i0.ɵɵtext(19, \"change_history\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(20, \"mat-option\", 9)(21, \"span\", 7);\n      i0.ɵɵtext(22, \"timeline\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(23, \"mat-option\", 10)(24, \"span\", 7);\n      i0.ɵɵtext(25, \"rebase_edit\");\n      i0.ɵɵelementEnd()()()();\n      i0.ɵɵelementStart(26, \"mat-form-field\", 2)(27, \"mat-label\");\n      i0.ɵɵtext(28, \"Color\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(29, \"input\", 11);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(30, \"mat-form-field\", 2)(31, \"mat-label\");\n      i0.ɵɵtext(32, \"Status\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(33, \"mat-select\", 12)(34, \"mat-option\", 13);\n      i0.ɵɵtext(35, \"Active\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(36, \"mat-option\", 14);\n      i0.ɵɵtext(37, \"Inactive\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(38, \"mat-form-field\", 2)(39, \"mat-label\");\n      i0.ɵɵtext(40, \"Tasks\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(41, \"mat-chip-grid\", 15, 16);\n      i0.ɵɵtemplate(43, CreateIssueTypesComponent_mat_chip_43_Template, 5, 1, \"mat-chip\", 17);\n      i0.ɵɵelementStart(44, \"input\", 18, 19);\n      i0.ɵɵlistener(\"matChipInputTokenEnd\", function CreateIssueTypesComponent_Template_input_matChipInputTokenEnd_44_listener($event) {\n        return ctx.add($event);\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(46, \"mat-autocomplete\", 20, 21);\n      i0.ɵɵlistener(\"optionSelected\", function CreateIssueTypesComponent_Template_mat_autocomplete_optionSelected_46_listener($event) {\n        return ctx.selected($event);\n      });\n      i0.ɵɵtemplate(48, CreateIssueTypesComponent_mat_option_48_Template, 2, 2, \"mat-option\", 22);\n      i0.ɵɵpipe(49, \"async\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(50, \"div\", 23);\n      i0.ɵɵtemplate(51, CreateIssueTypesComponent_div_51_Template, 10, 1, \"div\", 24);\n      i0.ɵɵelementStart(52, \"button\", 25);\n      i0.ɵɵlistener(\"click\", function CreateIssueTypesComponent_Template_button_click_52_listener() {\n        return ctx.addCol();\n      });\n      i0.ɵɵtext(53, \" Add Column \");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(54, \"div\")(55, \"button\", 26);\n      i0.ɵɵlistener(\"click\", function CreateIssueTypesComponent_Template_button_click_55_listener() {\n        return ctx.goBack();\n      });\n      i0.ɵɵtext(56, \"Back\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(57, \"button\", 27);\n      i0.ɵɵlistener(\"click\", function CreateIssueTypesComponent_Template_button_click_57_listener() {\n        return ctx.onSubmit();\n      });\n      i0.ɵɵtext(58, \" Next \");\n      i0.ɵɵelementEnd()()()();\n    }\n    if (rf & 2) {\n      const _r0 = i0.ɵɵreference(42);\n      const _r3 = i0.ɵɵreference(47);\n      i0.ɵɵproperty(\"formGroup\", ctx.issueFormGroup);\n      i0.ɵɵadvance(43);\n      i0.ɵɵproperty(\"ngForOf\", ctx.tasks);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"formControl\", ctx.taskControl)(\"matAutocomplete\", _r3)(\"matChipInputFor\", _r0)(\"matChipInputSeparatorKeyCodes\", ctx.separatorKeysCodes);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind1(49, 9, ctx.filteredTasks));\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngForOf\", ctx.colsArray.controls);\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"disabled\", !ctx.issueFormGroup.valid);\n    }\n  },\n  dependencies: [i5.NgForOf, i6.MatStepperNext, i6.MatStepperPrevious, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.RequiredValidator, i1.FormControlDirective, i1.FormGroupDirective, i1.FormControlName, i1.FormGroupName, i1.FormArrayName, i7.MatButton, i8.MatFormField, i8.MatLabel, i9.MatInput, i10.MatSelect, i11.MatOption, i12.MatChip, i12.MatChipGrid, i12.MatChipInput, i12.MatChipRemove, i13.MatAutocomplete, i13.MatAutocompleteTrigger, i14.MatIcon, i15.NextButtonDirective, i5.AsyncPipe],\n  styles: [\"form[_ngcontent-%COMP%]{min-width:100%!important;overflow:auto;padding-bottom:70px;max-height:100%}form[_ngcontent-%COMP%]   .margin-auto[_ngcontent-%COMP%]{display:flex;justify-content:space-evenly;align-items:center;flex-wrap:wrap;flex-direction:row;overflow-y:auto!important;max-height:100%}form[_ngcontent-%COMP%]   .margin-auto[_ngcontent-%COMP%]   mat-form-field[_ngcontent-%COMP%]{flex-basis:40%;min-width:250px;background:none}form[_ngcontent-%COMP%]   .margin-auto[_ngcontent-%COMP%]   mat-form-field[_ngcontent-%COMP%]   input[_ngcontent-%COMP%]{width:100%;margin:0}form[_ngcontent-%COMP%]   .margin-auto[_ngcontent-%COMP%]   .add[_ngcontent-%COMP%]{width:150px;position:absolute;bottom:20px;left:calc(50% - 75px);background:green;border:1px solid white;border-radius:5px;color:#fff}form[_ngcontent-%COMP%]   .margin-auto[_ngcontent-%COMP%]   .added[_ngcontent-%COMP%]{width:100%}form[_ngcontent-%COMP%]   .margin-auto[_ngcontent-%COMP%]   .added[_ngcontent-%COMP%]   div[_ngcontent-%COMP%]   div[_ngcontent-%COMP%]{display:flex;justify-content:center;align-items:center;gap:30px;flex-wrap:wrap}form[_ngcontent-%COMP%]   .margin-auto[_ngcontent-%COMP%]   .added[_ngcontent-%COMP%]   div[_ngcontent-%COMP%]   div[_ngcontent-%COMP%]   mat-form-field[_ngcontent-%COMP%]{flex-basis:40%;min-width:250px}\"]\n});","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}