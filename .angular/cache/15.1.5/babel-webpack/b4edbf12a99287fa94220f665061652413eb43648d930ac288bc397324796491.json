{"ast":null,"code":"import { FormArray, FormControl, FormGroup, Validators } from \"@angular/forms\";\nimport { TaskStatusEnum } from \"../../../../../core/enums/task-status.enum\";\nimport { moveItemInArray } from \"@angular/cdk/drag-drop\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../../../../core/services/board.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/material/form-field\";\nimport * as i5 from \"@angular/material/select\";\nimport * as i6 from \"@angular/material/core\";\nimport * as i7 from \"@angular/material/button\";\nimport * as i8 from \"@angular/material/input\";\nimport * as i9 from \"@angular/forms\";\nimport * as i10 from \"@angular/cdk/drag-drop\";\nfunction BoardEditComponent_div_18_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"div\", 8);\n  }\n}\nfunction BoardEditComponent_div_19_mat_option_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\", 15);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const status_r6 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", status_r6);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\"\", status_r6, \" \");\n  }\n}\nfunction BoardEditComponent_div_19_div_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"div\", 16);\n  }\n}\nfunction BoardEditComponent_div_19_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 9)(1, \"mat-form-field\")(2, \"mat-label\");\n    i0.ɵɵtext(3, \"Column Name\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(4, \"input\", 10);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"mat-form-field\")(6, \"mat-label\");\n    i0.ɵɵtext(7, \"Column Description\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(8, \"input\", 11);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"mat-form-field\")(10, \"mat-label\");\n    i0.ɵɵtext(11, \"Status\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(12, \"mat-select\", 12);\n    i0.ɵɵtemplate(13, BoardEditComponent_div_19_mat_option_13_Template, 2, 2, \"mat-option\", 13);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵtemplate(14, BoardEditComponent_div_19_div_14_Template, 1, 0, \"div\", 14);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const i_r3 = ctx.index;\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"formGroupName\", i_r3);\n    i0.ɵɵadvance(13);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.taskStatuses);\n  }\n}\nexport class BoardEditComponent {\n  constructor(boardService, router, route) {\n    this.boardService = boardService;\n    this.router = router;\n    this.route = route;\n    this.taskStatuses = Object.values(TaskStatusEnum);\n    this.form = new FormGroup({\n      name: new FormControl(null, Validators.required),\n      position: new FormControl(1, Validators.required),\n      description: new FormControl(null, Validators.required),\n      columns: new FormArray([], Validators.required)\n    });\n  }\n  ngOnInit() {\n    this.route.params.subscribe(params => {\n      if (params['id']) {\n        this.boardId = +params['id'];\n        this.getBoard();\n      }\n    });\n  }\n  getBoard() {\n    this.boardService.getBoardId(this.boardId).subscribe(res => {\n      this.form.patchValue(res);\n      res.columns.forEach(column => {\n        this.columnsArray.push(new FormGroup({\n          id: new FormControl(column.id),\n          name: new FormControl(column.name, Validators.required),\n          description: new FormControl(column.description, Validators.required),\n          position: new FormControl(column.position, Validators.required),\n          taskStatus: new FormControl(column.taskStatus, Validators.required)\n        }, Validators.required));\n      });\n    });\n  }\n  get columnsArray() {\n    return this.form.get('columns');\n  }\n  addColumn() {\n    this.columnsArray.push(new FormGroup({\n      id: new FormControl(null),\n      name: new FormControl(null, Validators.required),\n      description: new FormControl(null, Validators.required),\n      position: new FormControl(this.columnsArray.length + 1, Validators.required),\n      taskStatus: new FormControl(TaskStatusEnum.ToDo, Validators.required)\n    }, Validators.required));\n  }\n  save() {\n    this.form.markAllAsTouched();\n    if (this.form.invalid) {\n      return;\n    }\n    this.boardService.addBoard(this.form.value).subscribe(res => {\n      this.router.navigate(['/application/setting/board']);\n    });\n  }\n  drop($event) {\n    moveItemInArray(this.columnsArray.controls, $event.previousIndex, $event.currentIndex);\n    console.log(this.columnsArray.controls);\n    this.columnsArray.controls.forEach((control, index) => {\n      control.get('position')?.setValue(index + 1);\n    });\n  }\n}\nBoardEditComponent.ɵfac = function BoardEditComponent_Factory(t) {\n  return new (t || BoardEditComponent)(i0.ɵɵdirectiveInject(i1.BoardService), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i2.ActivatedRoute));\n};\nBoardEditComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: BoardEditComponent,\n  selectors: [[\"app-board-edit\"]],\n  decls: 20,\n  vars: 2,\n  consts: [[3, \"formGroup\"], [1, \"inputForm\"], [\"matInput\", \"\", \"placeholder\", \"Name\", \"formControlName\", \"name\"], [\"matInput\", \"\", \"placeholder\", \"Description\", \"formControlName\", \"description\"], [\"mat-raised-button\", \"\", \"color\", \"primary\", 3, \"click\"], [\"formArrayName\", \"columns\", \"cdkDropList\", \"\", \"cdkDropListOrientation\", \"horizontal\", 1, \"columns\", 3, \"cdkDropListDropped\"], [\"class\", \"prev\", 4, \"cdkDragPreview\"], [\"class\", \"column\", \"cdkDrag\", \"\", 3, \"formGroupName\", 4, \"ngFor\", \"ngForOf\"], [1, \"prev\"], [\"cdkDrag\", \"\", 1, \"column\", 3, \"formGroupName\"], [\"matInput\", \"\", \"placeholder\", \"Column Name\", \"formControlName\", \"name\"], [\"matInput\", \"\", \"placeholder\", \"Column Description\", \"formControlName\", \"description\"], [\"placeholder\", \"Task Status\", \"formControlName\", \"taskStatus\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"class\", \"column-placeholder\", 4, \"cdkDragPlaceholder\"], [3, \"value\"], [1, \"column-placeholder\"]],\n  template: function BoardEditComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"h1\");\n      i0.ɵɵtext(1, \"Board edit\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"div\")(3, \"form\", 0)(4, \"div\", 1)(5, \"mat-form-field\")(6, \"mat-label\");\n      i0.ɵɵtext(7, \"Name\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(8, \"input\", 2);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(9, \"mat-form-field\")(10, \"mat-label\");\n      i0.ɵɵtext(11, \"Description\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(12, \"input\", 3);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(13, \"button\", 4);\n      i0.ɵɵlistener(\"click\", function BoardEditComponent_Template_button_click_13_listener() {\n        return ctx.addColumn();\n      });\n      i0.ɵɵtext(14, \"Add Column\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(15, \"button\", 4);\n      i0.ɵɵlistener(\"click\", function BoardEditComponent_Template_button_click_15_listener() {\n        return ctx.save();\n      });\n      i0.ɵɵtext(16, \"Save\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(17, \"div\", 5);\n      i0.ɵɵlistener(\"cdkDropListDropped\", function BoardEditComponent_Template_div_cdkDropListDropped_17_listener($event) {\n        return ctx.drop($event);\n      });\n      i0.ɵɵtemplate(18, BoardEditComponent_div_18_Template, 1, 0, \"div\", 6);\n      i0.ɵɵtemplate(19, BoardEditComponent_div_19_Template, 15, 2, \"div\", 7);\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"formGroup\", ctx.form);\n      i0.ɵɵadvance(16);\n      i0.ɵɵproperty(\"ngForOf\", ctx.columnsArray.controls);\n    }\n  },\n  dependencies: [i3.NgForOf, i4.MatFormField, i4.MatLabel, i5.MatSelect, i6.MatOption, i7.MatButton, i8.MatInput, i9.ɵNgNoValidate, i9.DefaultValueAccessor, i9.NgControlStatus, i9.NgControlStatusGroup, i9.FormGroupDirective, i9.FormControlName, i9.FormGroupName, i9.FormArrayName, i10.CdkDropList, i10.CdkDrag, i10.CdkDragPreview, i10.CdkDragPlaceholder],\n  styles: [\".columns[_ngcontent-%COMP%] {\\n  display: flex;\\n  flex-wrap: nowrap;\\n  gap: 10px;\\n  height: 100%;\\n  width: 100%;\\n  overflow-x: auto;\\n  overflow-y: hidden;\\n  padding: 10px;\\n}\\n\\n.inputForm[_ngcontent-%COMP%] {\\n  display: flex;\\n  gap: 10px;\\n  padding: 10px;\\n}\\n\\n.column[_ngcontent-%COMP%] {\\n  flex: initial;\\n  width: 300px;\\n  height: 100%;\\n  display: flex;\\n  flex-direction: column;\\n  justify-content: space-between;\\n  background-color: #fff;\\n  padding: 10px;\\n  border-radius: 5px;\\n  box-shadow: 0 0 5px 0 rgba(0, 0, 0, 0.4);\\n}\\n\\n.column-placeholder[_ngcontent-%COMP%] {\\n  width: 300px;\\n  min-height: 100%;\\n  background-color: #faf9f8;\\n  border-radius: 5px;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvcGFnZXMvYXBwbGljYXRpb24vcHJvamVjdC1zZXR0aW5nL3Byb2plY3QtYm9hcmQvYm9hcmQtZWRpdC9ib2FyZC1lZGl0LmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsYUFBQTtFQUNBLGlCQUFBO0VBQ0EsU0FBQTtFQUNBLFlBQUE7RUFDQSxXQUFBO0VBQ0EsZ0JBQUE7RUFDQSxrQkFBQTtFQUNBLGFBQUE7QUFDRjs7QUFFQTtFQUNFLGFBQUE7RUFDQSxTQUFBO0VBQ0EsYUFBQTtBQUNGOztBQUVBO0VBQ0UsYUFBQTtFQUNBLFlBQUE7RUFDQSxZQUFBO0VBQ0EsYUFBQTtFQUNBLHNCQUFBO0VBQ0EsOEJBQUE7RUFDQSxzQkFBQTtFQUNBLGFBQUE7RUFDQSxrQkFBQTtFQUNBLHdDQUFBO0FBQ0Y7O0FBQ0E7RUFDRSxZQUFBO0VBQ0EsZ0JBQUE7RUFDQSx5QkFBQTtFQUNBLGtCQUFBO0FBRUYiLCJzb3VyY2VzQ29udGVudCI6WyIuY29sdW1ucyB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtd3JhcDogbm93cmFwO1xuICBnYXA6IDEwcHg7XG4gIGhlaWdodDogMTAwJTtcbiAgd2lkdGg6IDEwMCU7XG4gIG92ZXJmbG93LXg6IGF1dG87XG4gIG92ZXJmbG93LXk6IGhpZGRlbjtcbiAgcGFkZGluZzogMTBweDtcbn1cblxuLmlucHV0Rm9ybSB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGdhcDogMTBweDtcbiAgcGFkZGluZzogMTBweDtcbn1cblxuLmNvbHVtbiB7XG4gIGZsZXg6IGluaXRpYWw7XG4gIHdpZHRoOiAzMDBweDtcbiAgaGVpZ2h0OiAxMDAlO1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XG4gIGJhY2tncm91bmQtY29sb3I6ICNmZmY7XG4gIHBhZGRpbmc6IDEwcHg7XG4gIGJvcmRlci1yYWRpdXM6IDVweDtcbiAgYm94LXNoYWRvdzogMCAwIDVweCAwIHJnYmEoMCwgMCwgMCwgMC40KTtcbn1cbi5jb2x1bW4tcGxhY2Vob2xkZXIge1xuICB3aWR0aDogMzAwcHg7XG4gIG1pbi1oZWlnaHQ6IDEwMCU7XG4gIGJhY2tncm91bmQtY29sb3I6ICNmYWY5Zjg7XG4gIGJvcmRlci1yYWRpdXM6IDVweDtcblxufVxuXG4iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n});","map":{"version":3,"mappings":"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","names":["FormArray","FormControl","FormGroup","Validators","TaskStatusEnum","moveItemInArray","i0","BoardEditComponent","constructor","boardService","router","route","Object","values","name","required","position","description","columns","ngOnInit","params","subscribe","boardId","getBoard","getBoardId","res","form","patchValue","forEach","column","columnsArray","push","id","taskStatus","get","addColumn","length","ToDo","save","markAllAsTouched","invalid","addBoard","value","navigate","drop","$event","controls","previousIndex","currentIndex","console","log","control","index","setValue","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["/Users/macbookpro/Desktop/GitHubRepo/Task-Manager-with-NgRx/src/app/pages/application/project-setting/project-board/board-edit/board-edit.component.ts","/Users/macbookpro/Desktop/GitHubRepo/Task-Manager-with-NgRx/src/app/pages/application/project-setting/project-board/board-edit/board-edit.component.html"],"sourcesContent":["import {Component, OnInit} from '@angular/core';\nimport {FormArray, FormControl, FormGroup, Validators} from \"@angular/forms\";\nimport {TaskStatusEnum} from \"../../../../../core/enums/task-status.enum\";\nimport {BoardService} from \"../../../../../core/services/board.service\";\nimport {ActivatedRoute, Router} from \"@angular/router\";\nimport {CdkDragDrop, moveItemInArray} from \"@angular/cdk/drag-drop\";\n\n@Component({\n  selector: 'app-board-edit',\n  templateUrl: './board-edit.component.html',\n  styleUrls: ['./board-edit.component.scss']\n})\nexport class BoardEditComponent implements OnInit {\n  boardId!: number;\n  taskStatuses = Object.values(TaskStatusEnum);\n constructor(\n   private boardService: BoardService,\n   private router: Router,\n   private route: ActivatedRoute,\n\n ) { }\n\nngOnInit(): void {\n  this.route.params.subscribe(params => {\n    if (params['id']) {\n      this.boardId = +params['id'];\n      this.getBoard()\n    }\n  })\n}\ngetBoard() {\n  this.boardService.getBoardId(this.boardId).subscribe(res => {\n    this.form.patchValue(res)\n    res.columns.forEach(column => {\n      this.columnsArray.push(new FormGroup({\n        id: new FormControl(column.id),\n        name: new FormControl(column.name, Validators.required),\n        description: new FormControl(column.description, Validators.required),\n        position: new FormControl(column.position, Validators.required),\n        taskStatus: new FormControl(column.taskStatus, Validators.required)\n      }, Validators.required));\n    })\n  })\n}\n\n\n  form: FormGroup = new FormGroup({\n    name: new FormControl(null, Validators.required),\n    position: new FormControl(1, Validators.required),\n    description: new FormControl(null, Validators.required),\n    columns: new FormArray([], Validators.required),\n  });\n\n\n\n  get columnsArray(): FormArray {\n    return this.form.get('columns') as FormArray;\n  }\n  addColumn() {\n    this.columnsArray.push(new FormGroup({\n      id: new FormControl(null),\n      name: new FormControl(null, Validators.required),\n      description: new FormControl(null, Validators.required),\n      position: new FormControl(this.columnsArray.length + 1, Validators.required),\n      taskStatus: new FormControl(TaskStatusEnum.ToDo, Validators.required),\n    },Validators.required));\n\n  }\n\n\n  save() {\nthis.form.markAllAsTouched();\nif (this.form.invalid) {\n  return;\n}\nthis.boardService.addBoard(this.form.value).subscribe(\n  res =>{\n    this.router.navigate(['/application/setting/board']);\n  }\n);\n  }\n\n  drop($event: CdkDragDrop<any, any>) {\n    moveItemInArray(this.columnsArray.controls, $event.previousIndex, $event.currentIndex);\n    console.log(this.columnsArray.controls);\n    this.columnsArray.controls.forEach((control, index) => {\n      control.get('position')?.setValue(index + 1);\n    })\n\n  }\n}\n","<h1>Board edit</h1>\n<div>\n  <form [formGroup]=\"form\">\n    <div class=\"inputForm\">\n      <mat-form-field>\n        <mat-label>Name</mat-label>\n        <input matInput placeholder=\"Name\" formControlName=\"name\">\n      </mat-form-field>\n      <mat-form-field>\n        <mat-label>Description</mat-label>\n        <input matInput placeholder=\"Description\" formControlName=\"description\">\n      </mat-form-field>\n      <button mat-raised-button color=\"primary\" (click)=\"addColumn()\">Add Column</button>\n      <button mat-raised-button color=\"primary\" (click)=\"save()\">Save</button>\n    </div>\n\n    <div class=\"columns\" formArrayName=\"columns\" cdkDropList cdkDropListOrientation=\"horizontal\"(cdkDropListDropped)=\"drop($event)\">\n      <div *cdkDragPreview class=\"prev\"></div>\n\n      <div *ngFor=\"let column of columnsArray.controls; let i= index\" [formGroupName]=\"i\"  class=\"column\"  cdkDrag>\n\n\n        <mat-form-field>\n          <mat-label>Column Name</mat-label>\n          <input matInput placeholder=\"Column Name\" formControlName=\"name\">\n        </mat-form-field>\n        <mat-form-field>\n          <mat-label>Column Description</mat-label>\n          <input matInput placeholder=\"Column Description\" formControlName=\"description\">\n        </mat-form-field>\n        <mat-form-field>\n          <mat-label>Status</mat-label>\n          <mat-select placeholder=\"Task Status\" formControlName=\"taskStatus\">\n            <mat-option *ngFor=\"let status of taskStatuses\" [value]=\"status\">{{status}} </mat-option>\n          </mat-select>\n        </mat-form-field>\n        <div class=\"column-placeholder\" *cdkDragPlaceholder></div>\n\n\n\n      </div>\n\n    </div>\n\n  </form>\n</div>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}