{"ast":null,"code":"import { map } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../../core/services/project.service\";\nimport * as i2 from \"../../../facades/project-facade.service\";\nexport class BoardResolver {\n  constructor(projectService, projectFacade) {\n    this.projectService = projectService;\n    this.projectFacade = projectFacade;\n  }\n  resolve(route, state) {\n    console.log(route);\n    const projectId = route.params['id'];\n    return this.projectService.getById(projectId).pipe(map(res => {\n      this.projectService.projectName = res.name;\n      this.projectFacade.setProject(res);\n      return res;\n    }));\n  }\n}\nBoardResolver.ɵfac = function BoardResolver_Factory(t) {\n  return new (t || BoardResolver)(i0.ɵɵinject(i1.ProjectService), i0.ɵɵinject(i2.ProjectFacade));\n};\nBoardResolver.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: BoardResolver,\n  factory: BoardResolver.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AAMA,SAAQA,GAAG,QAAuB,MAAM;;;;AAOxC,OAAM,MAAOC,aAAa;EAExBC,YACUC,cAA8B,EAC9BC,aAA4B;IAD5B,mBAAc,GAAdD,cAAc;IACd,kBAAa,GAAbC,aAAa;EAEvB;EAEAC,OAAO,CAACC,KAA6B,EAAEC,KAA0B;IAC/DC,OAAO,CAACC,GAAG,CAACH,KAAK,CAAC;IAElB,MAAMI,SAAS,GAAWJ,KAAK,CAACK,MAAM,CAAC,IAAI,CAAC;IAE5C,OAAO,IAAI,CAACR,cAAc,CAACS,OAAO,CAACF,SAAS,CAAC,CAC1CG,IAAI,CACHb,GAAG,CAACc,GAAG,IAAG;MACN,IAAI,CAACX,cAAc,CAACY,WAAW,GAAGD,GAAG,CAACE,IAAI;MAC1C,IAAI,CAACZ,aAAa,CAACa,UAAU,CAACH,GAAG,CAAC;MAClC,OAAOA,GAAG;IACZ,CAAC,CACF,CACF;EACL;;AAtBWb,aAAa;mBAAbA,aAAa;AAAA;AAAbA,aAAa;SAAbA,aAAa;EAAAiB,SAAbjB,aAAa;EAAAkB,YAFZ;AAAM","names":["map","BoardResolver","constructor","projectService","projectFacade","resolve","route","state","console","log","projectId","params","getById","pipe","res","projectName","name","setProject","factory","providedIn"],"sourceRoot":"","sources":["/Users/macbookpro/Desktop/GitHubRepo/Task-Manager-with-NgRx/src/app/pages/main-layout/resolvers/board.resolver.ts"],"sourcesContent":["import {Injectable} from '@angular/core';\nimport {\n  Router, Resolve,\n  RouterStateSnapshot,\n  ActivatedRouteSnapshot\n} from '@angular/router';\nimport {map, Observable, of} from 'rxjs';\nimport {ProjectFacade} from \"../../../facades/project-facade.service\";\nimport {ProjectService} from \"../../../core/services/project.service\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class BoardResolver implements Resolve<boolean> {\n\n  constructor(\n    private projectService: ProjectService,\n    private projectFacade: ProjectFacade,\n  ) {\n  }\n\n  resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<boolean> {\n    console.log(route)\n\n    const projectId: string = route.params['id'];\n\n    return this.projectService.getById(projectId)\n      .pipe(\n        map(res => {\n            this.projectService.projectName = res.name;\n            this.projectFacade.setProject(res)\n            return res;\n          }\n        )\n      );\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}