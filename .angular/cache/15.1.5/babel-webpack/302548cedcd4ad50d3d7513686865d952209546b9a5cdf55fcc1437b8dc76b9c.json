{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { Subject, takeUntil, tap } from \"rxjs\";\nimport { FormControl, FormGroup } from \"@angular/forms\";\nimport { faAlignCenter, faAlignLeft, faAlignRight, faBold, faItalic, faTextSlash, faUnderline } from '@fortawesome/free-solid-svg-icons';\nimport { loadProjects, setProject } from \"../../../../store\";\nlet DescriptionComponent = class DescriptionComponent {\n  constructor(store, projectFacade, projectService, route, r) {\n    this.store = store;\n    this.projectFacade = projectFacade;\n    this.projectService = projectService;\n    this.route = route;\n    this.r = r;\n    this.faAlignLeft = faAlignLeft;\n    this.faAlignCenter = faAlignCenter;\n    this.faAlignRight = faAlignRight;\n    this.faTextSlash = faTextSlash;\n    this.faUnderline = faUnderline;\n    this.faItalic = faItalic;\n    this.faBold = faBold;\n    this.sub$ = new Subject();\n    this.form = new FormGroup({\n      description: new FormControl(this.project?.description)\n    });\n    this.bold = false;\n    this.italic = false;\n    this.underline = false;\n    this.alignleft = false;\n    this.aligncenter = false;\n    this.alignright = false;\n    this.fontsize11 = 16;\n  }\n  get project() {\n    // return this.projectFacade.getProject();\n    return this.store.dispatch(loadProjects());\n  }\n  ngOnInit() {\n    this.route.params.subscribe(params => {\n      if (params['id']) {\n        this.projectService.getProjectById(+params['id']).pipe(takeUntil(this.sub$)).subscribe(res => {\n          this.form.patchValue(res);\n          console.log(res);\n        });\n      }\n    });\n  }\n  save() {\n    this.projectService.updateProject(this.form.value).subscribe(res => {\n      this.projectService.getProjectById(this.project.id).subscribe(res => {\n        // this.projectFacade.setProject(res);\n        tap(res => {\n          this.store.dispatch(setProject({\n            projectId: res.id\n          }));\n        });\n        this.router.navigate(['/application/project-setting/project-info']);\n      });\n    });\n  }\n  changeFontWeight() {\n    this.bold = !this.bold;\n  }\n  changeFontWeight2() {\n    this.italic = !this.italic;\n  }\n  changeFontWeight3() {\n    this.underline = !this.underline;\n  }\n  fontSizeChange() {\n    let fontSize = document.getElementById(\"fontSize\");\n    let fontSizeValue = fontSize.value;\n    this.fontsize11 = fontSizeValue + \"px\";\n    localStorage.setItem(\"fontsize\", this.fontsize11);\n  }\n  alignLeft() {\n    this.alignleft = !this.alignleft;\n  }\n  alignCenter() {\n    this.aligncenter = !this.aligncenter;\n  }\n  alignRight() {\n    this.alignright = !this.alignright;\n  }\n  aA() {\n    let textarea = document.getElementById(\"description\");\n    if (textarea.style.textTransform == \"uppercase\") {\n      textarea.style.textTransform = \"none\";\n    } else {\n      textarea.style.textTransform = \"uppercase\";\n    }\n  }\n  capitalize() {\n    let textarea = document.getElementById(\"description\");\n    textarea.style.fontWeight = \"normal\";\n    textarea.style.textAlign = \"left\";\n    textarea.style.fontStyle = \"normal\";\n    textarea.style.textTransform = \"capitalize\";\n  }\n  color() {\n    let textarea = document.getElementById(\"description\");\n    let value1 = document.getElementById(\"fontColor\");\n    textarea.style.color = value1.value;\n  }\n};\nDescriptionComponent = __decorate([Component({\n  selector: 'app-description',\n  templateUrl: './description.component.html',\n  styleUrls: ['./description.component.scss']\n})], DescriptionComponent);\nexport { DescriptionComponent };","map":{"version":3,"mappings":"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","names":["Component","Subject","takeUntil","tap","FormControl","FormGroup","faAlignCenter","faAlignLeft","faAlignRight","faBold","faItalic","faTextSlash","faUnderline","loadProjects","setProject","DescriptionComponent","constructor","store","projectFacade","projectService","route","r","description","project","dispatch","ngOnInit","params","subscribe","getProjectById","pipe","sub$","res","form","patchValue","console","log","save","updateProject","value","id","projectId","router","navigate","changeFontWeight","bold","changeFontWeight2","italic","changeFontWeight3","underline","fontSizeChange","fontSize","document","getElementById","fontSizeValue","fontsize11","localStorage","setItem","alignLeft","alignleft","alignCenter","aligncenter","alignRight","alignright","aA","textarea","style","textTransform","capitalize","fontWeight","textAlign","fontStyle","color","value1","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["/Users/macbookpro/Desktop/GitHubRepo/Task-Manager-with-NgRx/src/app/pages/application/project-setting/project-info/description.component.ts"],"sourcesContent":["import {Component, OnInit} from '@angular/core';\nimport {IProject} from \"../../../../core/interfaces/iproject\";\nimport {ProjectFacade} from \"../../../../facades/project-facade.service\";\nimport {Subject, takeUntil, tap} from \"rxjs\";\nimport {ProjectService} from \"../../../../core/services/project.service\";\nimport {ActivatedRoute} from \"@angular/router\";\nimport {FormControl, FormGroup} from \"@angular/forms\";\nimport {\n  faAlignCenter,\n  faAlignLeft,\n  faAlignRight,\n  faBold,\n  faItalic,\n  faTextSlash,\n  faUnderline,\n} from '@fortawesome/free-solid-svg-icons';\nimport {Store} from \"@ngrx/store\";\nimport {loadProjects, ProjectStateModule, setProject} from \"../../../../store\";\n\n@Component({\n  selector: 'app-description',\n  templateUrl: './description.component.html',\n  styleUrls: ['./description.component.scss']\n})\nexport class DescriptionComponent implements OnInit {\n  faAlignLeft = faAlignLeft;\n  faAlignCenter = faAlignCenter;\n  faAlignRight = faAlignRight;\n  faTextSlash = faTextSlash;\n  faUnderline = faUnderline;\n  faItalic = faItalic;\n  faBold = faBold;\n  sub$ = new Subject()\nconstructor(\n    private store: Store<{ project: ProjectStateModule }>,\n  private projectFacade: ProjectFacade,\n  private projectService: ProjectService,\n  private route: ActivatedRoute,\n    private r\n) { }\n  form: FormGroup = new FormGroup({\n    description: new FormControl(this.project?.description, ),\n  });\n  get project(): any{\n    // return this.projectFacade.getProject();\n    return this.store.dispatch(loadProjects())\n  }\n  ngOnInit(): void {\n    this.route.params.subscribe(\n      params =>{\n        if (params['id']){\n          this.projectService.getProjectById(+params['id'])\n            .pipe(takeUntil(this.sub$))\n            .subscribe(\n              res =>{\n                this.form.patchValue(res)\n                console.log(res)\n\n              }\n            )\n        }\n      }\n    )\n  }\n\n\n  save() {\n    this.projectService.updateProject( this.form.value).subscribe(\n      res => {\n        this.projectService.getProjectById(this.project.id).subscribe(\n          res => {\n            // this.projectFacade.setProject(res);\n            tap((res:IProject) => {\n              this.store.dispatch(setProject({projectId: res.id}))\n            })\n            this.router.navigate(['/application/project-setting/project-info'])\n          }\n        )\n      }\n    )\n\n  }\n  bold: boolean = false;\n  italic: boolean = false;\n  underline: boolean = false;\n  alignleft: boolean = false;\n  aligncenter: boolean = false;\n  alignright: boolean = false;\n\n  fontsize11 :any = 16;\n\n\n  changeFontWeight() {\n    this.bold = !this.bold;\n  }\n\n  changeFontWeight2() {\n    this.italic = !this.italic;\n\n  }\n\n  changeFontWeight3() {\n    this.underline = !this.underline;\n\n  }\n\n  fontSizeChange() {\n    let fontSize = document.getElementById(\"fontSize\") as HTMLInputElement;\n    let fontSizeValue = fontSize.value;\n    this.fontsize11 = fontSizeValue + \"px\";\n    localStorage.setItem(\"fontsize\", this.fontsize11);\n\n  }\n\n\n  alignLeft() {\n\n    this.alignleft = !this.alignleft;\n  }\n\n  alignCenter() {\n    this.aligncenter = !this.aligncenter;\n  }\n\n  alignRight() {\n    this.alignright = !this.alignright;\n  }\n\n  aA() {\n    let textarea = document.getElementById(\"description\") as HTMLInputElement;\n    if (textarea.style.textTransform == \"uppercase\") {\n      textarea.style.textTransform = \"none\";\n\n    } else {\n      textarea.style.textTransform = \"uppercase\";\n    }\n  }\n\n  capitalize() {\n    let textarea = document.getElementById(\"description\") as HTMLInputElement;\n    textarea.style.fontWeight = \"normal\";\n    textarea.style.textAlign = \"left\";\n    textarea.style.fontStyle = \"normal\";\n    textarea.style.textTransform = \"capitalize\";\n\n\n  }\n\n  color() {\n    let textarea = document.getElementById(\"description\") as HTMLInputElement;\n    let value1 = document.getElementById(\"fontColor\") as HTMLInputElement;\n    textarea.style.color = value1.value;\n\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}