{"ast":null,"code":"import { createReducer, on } from \"@ngrx/store\";\nimport { initCurrentProject, loadProjects, loadProjectsFailure, loadProjectsSuccess, setProjectFailure, setProjectSuccess } from \"./project.actions\";\nconst initialState = {\n  projects: [],\n  projectUsers: [],\n  currentProject: null\n};\nexport const projectReducer = createReducer(initialState, on(loadProjects, state => state), on(loadProjectsSuccess, (state, action) => {\n  return {\n    ...state,\n    projects: action.projects\n  };\n}), on(loadProjectsFailure, (state, action) => state),\n// on(setProject, (state, action) => {\n//     const project = state.projects.find((project) => project.id === +action.projectId);\n//     project && localStorage.setItem('project', JSON.stringify(project));\n//     return {\n//         ...state,\n//         currentProject: project || null\n//     };\n// }),\non(setProjectSuccess, (state, action) => {\n  return {\n    ...state,\n    currentProject: action.project\n  };\n}), on(initCurrentProject, state => {\n  const project = localStorage.getItem('project');\n  return {\n    ...state,\n    currentProject: project ? JSON.parse(project) : null\n  };\n}), on(setProjectFailure, (state, action) => state), on(initCurrentProject, state => {\n  const project = localStorage.getItem('project');\n  return {\n    ...state,\n    currentProject: project ? JSON.parse(project) : null\n  };\n}));","map":{"version":3,"mappings":"AAAA,SAAQA,aAAa,EAAEC,EAAE,QAAO,aAAa;AAC7C,SACIC,kBAAkB,EAClBC,YAAY,EACZC,mBAAmB,EACnBC,mBAAmB,EAEnBC,iBAAiB,EACjBC,iBAAiB,QACd,mBAAmB;AAU1B,MAAMC,YAAY,GAAwB;EACtCC,QAAQ,EAAE,EAAE;EACZC,YAAY,EAAE,EAAE;EAChBC,cAAc,EAAE;CACnB;AACD,OAAO,MAAMC,cAAc,GAAGZ,aAAa,CACvCQ,YAAY,EACZP,EAAE,CAACE,YAAY,EAAEU,KAAK,IAAIA,KAAK,CAAC,EAChCZ,EAAE,CAACI,mBAAmB,EAAE,CAACQ,KAAK,EAAEC,MAAM,KAAI;EACtC,OAAO;IACH,GAAGD,KAAK;IACRJ,QAAQ,EAAEK,MAAM,CAACL;GACpB;AACL,CAAC,CACA,EACDR,EAAE,CAACG,mBAAmB,EAAE,CAACS,KAAK,EAAEC,MAAM,KAAKD,KAAK,CAAC;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAZ,EAAE,CAACM,iBAAiB,EAAE,CAACM,KAAK,EAAEC,MAAM,KAAI;EAEpC,OAAO;IACH,GAAGD,KAAK;IACRF,cAAc,EAAEG,MAAM,CAACC;GAC1B;AACD,CAAC,CACJ,EACDd,EAAE,CAACC,kBAAkB,EAAGW,KAAK,IAAI;EAC7B,MAAME,OAAO,GAAGC,YAAY,CAACC,OAAO,CAAC,SAAS,CAAC;EAC/C,OAAO;IACH,GAAGJ,KAAK;IACRF,cAAc,EAAEI,OAAO,GAAGG,IAAI,CAACC,KAAK,CAACJ,OAAO,CAAC,GAAG;GACnD;AACL,CAAC,CAAC,EACFd,EAAE,CAACK,iBAAiB,EAAE,CAACO,KAAK,EAAEC,MAAM,KAAKD,KAAK,CAAC,EAC/CZ,EAAE,CAAEC,kBAAkB,EAAGW,KAAK,IAAI;EAC9B,MAAME,OAAO,GAAGC,YAAY,CAACC,OAAO,CAAC,SAAS,CAAC;EAC/C,OAAO;IACH,GAAGJ,KAAK;IACRF,cAAc,EAAEI,OAAO,GAAGG,IAAI,CAACC,KAAK,CAACJ,OAAO,CAAC,GAAG;GACnD;AACL,CAAC,CAAC,CACL","names":["createReducer","on","initCurrentProject","loadProjects","loadProjectsFailure","loadProjectsSuccess","setProjectFailure","setProjectSuccess","initialState","projects","projectUsers","currentProject","projectReducer","state","action","project","localStorage","getItem","JSON","parse"],"sourceRoot":"","sources":["/Users/macbookpro/Desktop/GitHubRepo/Task-Manager-with-NgRx/src/app/store/rxProject/project.reducer.ts"],"sourcesContent":["import {createReducer, on} from \"@ngrx/store\";\nimport {\n    initCurrentProject,\n    loadProjects,\n    loadProjectsFailure,\n    loadProjectsSuccess,\n    setProject,\n    setProjectFailure,\n    setProjectSuccess\n} from \"./project.actions\";\nimport {IProject} from \"../../core/interfaces/iproject\";\nimport {User} from \"../../core/interfaces\";\n\nexport interface ProjectStateModule {\n    projects: IProject[];\n    projectUsers: User[];\n    currentProject: IProject | null;\n\n}\nconst initialState : ProjectStateModule = {\n    projects: [],\n    projectUsers: [],\n    currentProject: null\n};\nexport const projectReducer = createReducer(\n    initialState,\n    on(loadProjects, state => state),\n    on(loadProjectsSuccess, (state, action) => {\n        return {\n            ...state,\n            projects: action.projects\n        };\n    }\n    ),\n    on(loadProjectsFailure, (state, action) => state),\n    // on(setProject, (state, action) => {\n    //     const project = state.projects.find((project) => project.id === +action.projectId);\n    //     project && localStorage.setItem('project', JSON.stringify(project));\n    //     return {\n    //         ...state,\n    //         currentProject: project || null\n    //     };\n    // }),\n    on(setProjectSuccess, (state, action) => {\n\n        return {\n            ...state,\n            currentProject: action.project\n        };\n        }\n    ),\n    on(initCurrentProject, (state) => {\n        const project = localStorage.getItem('project');\n        return {\n            ...state,\n            currentProject: project ? JSON.parse(project) : null\n        }\n    }),\n    on(setProjectFailure, (state, action) => state),\n    on (initCurrentProject, (state) => {\n        const project = localStorage.getItem('project');\n        return {\n            ...state,\n            currentProject: project ? JSON.parse(project) : null\n        };\n    })\n);"]},"metadata":{},"sourceType":"module","externalDependencies":[]}