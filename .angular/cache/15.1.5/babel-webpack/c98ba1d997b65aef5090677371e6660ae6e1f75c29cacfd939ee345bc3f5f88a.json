{"ast":null,"code":"import { FormControl, FormGroup, Validators } from \"@angular/forms\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/material/dialog\";\nimport * as i2 from \"../../../../../../core/services/users.service\";\nimport * as i3 from \"@angular/material/form-field\";\nimport * as i4 from \"@angular/forms\";\nimport * as i5 from \"@angular/material/input\";\nimport * as i6 from \"@angular/material/button\";\nexport class UserEditComponent {\n  constructor(dialogRef, usersService) {\n    this.dialogRef = dialogRef;\n    this.usersService = usersService;\n    this.form = new FormGroup({\n      id: new FormControl(null),\n      firstName: new FormControl(null, [Validators.required]),\n      lastName: new FormControl(null, [Validators.required]),\n      email: new FormControl(null, [Validators.required, Validators.email]),\n      identityNumber: new FormControl(null, [Validators.required]),\n      mobileNumber: new FormControl(null, [Validators.required]),\n      isActive: new FormControl(true)\n    });\n  }\n  save() {\n    x;\n    this.form.markAllAsTouched();\n    if (this.form.invalid) {\n      return;\n    }\n    this.usersService.createUser(this.form.value).subscribe(res => {\n      this.dialogRef.close(res);\n    });\n  }\n}\nUserEditComponent.ɵfac = function UserEditComponent_Factory(t) {\n  return new (t || UserEditComponent)(i0.ɵɵdirectiveInject(i1.MatDialogRef), i0.ɵɵdirectiveInject(i2.UsersService));\n};\nUserEditComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: UserEditComponent,\n  selectors: [[\"app-user-edit\"]],\n  decls: 30,\n  vars: 1,\n  consts: [[1, \"container\"], [1, \"flex\"], [3, \"formGroup\"], [\"matInput\", \"\", \"placeholder\", \"First name\", \"formControlName\", \"firstName\"], [\"matInput\", \"\", \"placeholder\", \"Last name\", \"formControlName\", \"lastName\"], [\"matInput\", \"\", \"placeholder\", \"Identity Number\", \"formControlName\", \"identityNumber\"], [\"matInput\", \"\", \"placeholder\", \"Email\", \"formControlName\", \"email\"], [\"matInput\", \"\", \"placeholder\", \"Mobile Number\", \"formControlName\", \"mobileNumber\"], [\"mat-dialog-actions\", \"\"], [\"mat-button\", \"\", 3, \"click\"]],\n  template: function UserEditComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"h1\");\n      i0.ɵɵtext(2, \"New User\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"div\", 1)(4, \"form\", 2)(5, \"mat-form-field\")(6, \"mat-label\");\n      i0.ɵɵtext(7, \"First Name\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(8, \"input\", 3);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(9, \"mat-form-field\")(10, \"mat-label\");\n      i0.ɵɵtext(11, \"Last Name\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(12, \"input\", 4);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(13, \"mat-form-field\")(14, \"mat-label\");\n      i0.ɵɵtext(15, \"Identity Number\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(16, \"input\", 5);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(17, \"mat-form-field\")(18, \"mat-label\");\n      i0.ɵɵtext(19, \"Email\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(20, \"input\", 6);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(21, \"mat-form-field\")(22, \"mat-label\");\n      i0.ɵɵtext(23, \"Mobile Number\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(24, \"input\", 7);\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(25, \"div\", 8)(26, \"button\", 9);\n      i0.ɵɵlistener(\"click\", function UserEditComponent_Template_button_click_26_listener() {\n        return ctx.dialogRef.close(false);\n      });\n      i0.ɵɵtext(27, \"Cancel\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(28, \"button\", 9);\n      i0.ɵɵlistener(\"click\", function UserEditComponent_Template_button_click_28_listener() {\n        return ctx.save();\n      });\n      i0.ɵɵtext(29, \"Save\");\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"formGroup\", ctx.form);\n    }\n  },\n  dependencies: [i3.MatFormField, i3.MatLabel, i4.ɵNgNoValidate, i4.DefaultValueAccessor, i4.NgControlStatus, i4.NgControlStatusGroup, i5.MatInput, i4.FormGroupDirective, i4.FormControlName, i6.MatButton, i1.MatDialogActions],\n  styles: [\"h1[_ngcontent-%COMP%] {\\n  text-align: center;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvcGFnZXMvYXBwbGljYXRpb24vcHJvamVjdC1zZXR0aW5nL3Byb2plY3QtdXNlcnMvdXNlci91c2VyLWFkZC1lZGl0L3VzZXItZWRpdC5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLGtCQUFBO0FBQ0YiLCJzb3VyY2VzQ29udGVudCI6WyJoMXtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xufVxuIl0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"AAEA,SAAQA,WAAW,EAAEC,SAAS,EAAEC,UAAU,QAAO,gBAAgB;;;;;;;;AASjE,OAAM,MAAOC,iBAAiB;EAE5BC,YACSC,SAA0C,EAC1CC,YAA0B;IAD1B,cAAS,GAATD,SAAS;IACT,iBAAY,GAAZC,YAAY;IAGrB,SAAI,GAAc,IAAIL,SAAS,CAAC;MAC9BM,EAAE,EAAE,IAAIP,WAAW,CAAC,IAAI,CAAE;MAC1BQ,SAAS,EAAE,IAAIR,WAAW,CAAC,IAAI,EAAE,CAACE,UAAU,CAACO,QAAQ,CAAC,CAAC;MACvDC,QAAQ,EAAE,IAAIV,WAAW,CAAC,IAAI,EAAE,CAACE,UAAU,CAACO,QAAQ,CAAC,CAAC;MACtDE,KAAK,EAAE,IAAIX,WAAW,CAAC,IAAI,EAAE,CAACE,UAAU,CAACO,QAAQ,EAAEP,UAAU,CAACS,KAAK,CAAC,CAAC;MACrEC,cAAc,EAAE,IAAIZ,WAAW,CAAC,IAAI,EAAE,CAACE,UAAU,CAACO,QAAQ,CAAC,CAAC;MAC5DI,YAAY,EAAE,IAAIb,WAAW,CAAC,IAAI,EAAE,CAACE,UAAU,CAACO,QAAQ,CAAC,CAAC;MAC1DK,QAAQ,EAAE,IAAId,WAAW,CAAC,IAAI;KAC/B,CAAC;EAVE;EAYJe,IAAI;IAAIC,CAAC;IACP,IAAI,CAACC,IAAI,CAACC,gBAAgB,EAAE;IAC5B,IAAI,IAAI,CAACD,IAAI,CAACE,OAAO,EAAE;MACrB;;IAEF,IAAI,CAACb,YAAY,CAACc,UAAU,CAAC,IAAI,CAACH,IAAI,CAACI,KAAK,CAAC,CAC1CC,SAAS,CAAEC,GAAG,IAAI;MACjB,IAAI,CAAClB,SAAS,CAACmB,KAAK,CAACD,GAAG,CAAC;IAC3B,CAAC,CAAC;EACN;;AA1BWpB,iBAAiB;mBAAjBA,iBAAiB;AAAA;AAAjBA,iBAAiB;QAAjBA,iBAAiB;EAAAsB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCX9BC,8BAAuB;MACjBA,wBAAQ;MAAAA,iBAAK;MACjBA,8BAAkB;MAGDA,0BAAU;MAAAA,iBAAY;MACjCA,2BAAqE;MACvEA,iBAAiB;MACjBA,sCAAgB;MACHA,0BAAS;MAAAA,iBAAY;MAChCA,4BAAmE;MACrEA,iBAAiB;MACjBA,uCAAgB;MACHA,gCAAe;MAAAA,iBAAY;MACtCA,4BAA+E;MACjFA,iBAAiB;MACjBA,uCAAgB;MACHA,sBAAK;MAAAA,iBAAY;MAC5BA,4BAA4D;MAC9DA,iBAAiB;MACjBA,uCAAgB;MACHA,8BAAa;MAAAA,iBAAY;MACpCA,4BAA2E;MAC7EA,iBAAiB;MAGrBA,+BAAwB;MACHA;QAAA,OAASC,oBAAgB,KAAK,CAAC;MAAA,EAAC;MAACD,uBAAM;MAAAA,iBAAS;MACnEA,kCAAoC;MAAjBA;QAAA,OAASC,UAAM;MAAA,EAAC;MAACD,qBAAI;MAAAA,iBAAS;;;MAzB3CA,eAAkB;MAAlBA,oCAAkB","names":["FormControl","FormGroup","Validators","UserEditComponent","constructor","dialogRef","usersService","id","firstName","required","lastName","email","identityNumber","mobileNumber","isActive","save","x","form","markAllAsTouched","invalid","createUser","value","subscribe","res","close","selectors","decls","vars","consts","template","i0","ctx"],"sourceRoot":"","sources":["/Users/macbookpro/Desktop/GitHubRepo/Task-Manager-with-NgRx/src/app/pages/application/project-setting/project-users/user/user-add-edit/user-edit.component.ts","/Users/macbookpro/Desktop/GitHubRepo/Task-Manager-with-NgRx/src/app/pages/application/project-setting/project-users/user/user-add-edit/user-edit.component.html"],"sourcesContent":["import {Component, Injectable} from '@angular/core';\nimport {MatDialogRef} from \"@angular/material/dialog\";\nimport {FormControl, FormGroup, Validators} from \"@angular/forms\";\nimport {UsersService} from \"../../../../../../core/services/users.service\";\n\n@Component({\n  selector: 'app-user-edit',\n  templateUrl: './user-edit.component.html',\n  styleUrls: ['./user-edit.component.scss']\n})\n\nexport class UserEditComponent {\n\n  constructor(\n    public dialogRef: MatDialogRef<UserEditComponent>,\n   private usersService: UsersService,\n  ) { }\n\n  form: FormGroup = new FormGroup({\n    id: new FormControl(null,),\n    firstName: new FormControl(null, [Validators.required]),\n    lastName: new FormControl(null, [Validators.required]),\n    email: new FormControl(null, [Validators.required, Validators.email]),\n    identityNumber: new FormControl(null, [Validators.required]),\n    mobileNumber: new FormControl(null, [Validators.required]),\n    isActive: new FormControl(true, ),\n  });\n\n  save() {x\n    this.form.markAllAsTouched()\n    if (this.form.invalid) {\n      return\n    }\n    this.usersService.createUser(this.form.value)\n      .subscribe((res) => {\n        this.dialogRef.close(res)\n      })\n  }\n\n\n}\n","<div class=\"container\">\n  <h1>New User</h1>\n  <div class=\"flex\">\n    <form [formGroup]=\"form\">\n      <mat-form-field>\n        <mat-label>First Name</mat-label>\n        <input matInput placeholder=\"First name\" formControlName=\"firstName\">\n      </mat-form-field>\n      <mat-form-field>\n        <mat-label>Last Name</mat-label>\n        <input matInput placeholder=\"Last name\" formControlName=\"lastName\">\n      </mat-form-field>\n      <mat-form-field>\n        <mat-label>Identity Number</mat-label>\n        <input matInput placeholder=\"Identity Number\" formControlName=\"identityNumber\">\n      </mat-form-field>\n      <mat-form-field>\n        <mat-label>Email</mat-label>\n        <input matInput placeholder=\"Email\" formControlName=\"email\">\n      </mat-form-field>\n      <mat-form-field>\n        <mat-label>Mobile Number</mat-label>\n        <input matInput placeholder=\"Mobile Number\" formControlName=\"mobileNumber\">\n      </mat-form-field>\n    </form>\n  </div>\n  <div mat-dialog-actions>\n    <button mat-button (click)=\"dialogRef.close(false)\">Cancel</button>\n    <button mat-button (click)=\"save()\">Save</button>\n  </div>\n\n</div>\n\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}