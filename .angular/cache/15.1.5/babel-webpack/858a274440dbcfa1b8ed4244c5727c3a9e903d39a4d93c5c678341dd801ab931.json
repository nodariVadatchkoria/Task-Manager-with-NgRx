{"ast":null,"code":"import { createReducer, on } from \"@ngrx/store\";\nimport { loadUsersFailure, loadUsersSuccess } from \"./user.actions\";\nconst initialState = {\n  users: [],\n  page: 1,\n  limit: 10,\n  totalCount: 0\n};\nexport const userReducer = createReducer(initialState, on(loadUsersSuccess, (state, {\n  data\n}) => {\n  return {\n    ...state,\n    users: data.data,\n    limit: data.limit,\n    page: data.page\n  };\n}), on(loadUsersFailure, (state, {\n  error\n}) => {\n  return {\n    ...state,\n    error: error\n  };\n}));","map":{"version":3,"mappings":"AAAA,SAAQA,aAAa,EAAEC,EAAE,QAAO,aAAa;AAE7C,SAAQC,gBAAgB,EAAEC,gBAAgB,QAAO,gBAAgB;AASjE,MAAMC,YAAY,GAAG;EACjBC,KAAK,EAAE,EAAE;EACTC,IAAI,EAAE,CAAC;EACPC,KAAK,EAAE,EAAE;EACTC,UAAU,EAAE;CACf;AAGD,OAAO,MAAMC,WAAW,GAAGT,aAAa,CACpCI,YAAY,EAEZH,EAAE,CAACE,gBAAgB,EAAE,CAACO,KAAK,EAAE;EAACC;AAAI,CAAC,KAAI;EACnC,OAAO;IACH,GAAGD,KAAK;IACRL,KAAK,EAAEM,IAAI,CAACA,IAAI;IAChBJ,KAAK,EAAEI,IAAI,CAACJ,KAAK;IACjBD,IAAI,EAAEK,IAAI,CAACL;GACd;AACL,CAAC,CAAC,EACFL,EAAE,CAACC,gBAAgB,EAAE,CAACQ,KAAK,EAAE;EAACE;AAAK,CAAC,KAAI;EACpC,OAAO;IACH,GAAGF,KAAK;IACRE,KAAK,EAAEA;GACV;AACL,CAAC,CAAC,CAEL","names":["createReducer","on","loadUsersFailure","loadUsersSuccess","initialState","users","page","limit","totalCount","userReducer","state","data","error"],"sourceRoot":"","sources":["/Users/macbookpro/Desktop/GitHubRepo/Task-Manager-with-NgRx/src/app/pages/user/store /user.reducer.ts"],"sourcesContent":["import {createReducer, on} from \"@ngrx/store\";\nimport {User} from \"../../../core/interfaces\";\nimport {loadUsersFailure, loadUsersSuccess} from \"./user.actions\";\n\nexport interface UserStateModel {\n    users: User[];\n    page: number;\n    limit: number;\n    totalCount: number;\n}\n\nconst initialState = {\n    users: [],\n    page: 1,\n    limit: 10,\n    totalCount: 0,\n}\n\n\nexport const userReducer = createReducer(\n    initialState,\n\n    on(loadUsersSuccess, (state, {data}) => {\n        return {\n            ...state,\n            users: data.data,\n            limit: data.limit,\n            page: data.page,\n        }\n    }),\n    on(loadUsersFailure, (state, {error}) => {\n        return {\n            ...state,\n            error: error\n        }\n    })\n\n);"]},"metadata":{},"sourceType":"module","externalDependencies":[]}