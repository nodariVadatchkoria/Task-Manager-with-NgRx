{"ast":null,"code":"import { moveItemInArray, transferArrayItem } from \"@angular/cdk/drag-drop\";\nimport * as _ from 'lodash';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../../core/services/board.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"../../../core/services/task.service\";\nimport * as i4 from \"@angular/material/dialog\";\nimport * as i5 from \"@angular/common\";\nimport * as i6 from \"@angular/cdk/drag-drop\";\nimport * as i7 from \"@angular/material/button\";\nfunction BoardComponent_div_2_div_7_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"div\", 9);\n  }\n}\nfunction BoardComponent_div_2_div_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 7);\n    i0.ɵɵtemplate(1, BoardComponent_div_2_div_7_div_1_Template, 1, 0, \"div\", 8);\n    i0.ɵɵelementStart(2, \"h3\");\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"h4\");\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const card_r3 = ctx.$implicit;\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\"ID:\", card_r3.id, \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"Title:\", card_r3.title, \"\");\n  }\n}\nconst _c0 = function () {\n  return [];\n};\nfunction BoardComponent_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r6 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 3);\n    i0.ɵɵlistener(\"cdkDropListDropped\", function BoardComponent_div_2_Template_div_cdkDropListDropped_0_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r6);\n      const column_r1 = restoredCtx.$implicit;\n      const ctx_r5 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r5.drop($event, column_r1));\n    });\n    i0.ɵɵelementStart(1, \"div\", 4)(2, \"h3\");\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"button\", 5);\n    i0.ɵɵlistener(\"click\", function BoardComponent_div_2_Template_button_click_4_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r6);\n      const column_r1 = restoredCtx.$implicit;\n      const ctx_r7 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r7.addTask(column_r1.id));\n    });\n    i0.ɵɵtext(5, \"Add Task\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(6, \"div\");\n    i0.ɵɵtemplate(7, BoardComponent_div_2_div_7_Template, 6, 2, \"div\", 6);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const column_r1 = ctx.$implicit;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"cdkDropListData\", ctx_r0.tasks[column_r1.id] || i0.ɵɵpureFunction0(3, _c0));\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\"Status: \", column_r1.taskStatus, \"\");\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r0.tasks[column_r1.id] || i0.ɵɵpureFunction0(4, _c0));\n  }\n}\nexport class BoardComponent {\n  constructor(boardService, router, taskService, dialog) {\n    this.boardService = boardService;\n    this.router = router;\n    this.taskService = taskService;\n    this.dialog = dialog;\n    this.tasks = {\n      // 25: [\n      //    {\n      //      id: 1,\n      //      title: 'Task 1',\n      //    },\n      //    {\n      //      id: 2,\n      //      title: 'Task 2',\n      //    }\n      //  ],\n      //  26: [],\n      //  27: []\n    };\n  }\n  ngOnInit() {\n    this.router.params.subscribe(params => {\n      if (params['id']) {\n        this.boardId = +params['id'];\n        this.getBoard();\n      }\n    });\n  }\n  getBoard() {\n    this.boardService.getBoardId(this.boardId).subscribe(board => {\n      console.log(board);\n      this.board = board;\n      this.getTasks();\n    });\n  }\n  getTasks() {\n    this.taskService.getTasks({\n      boardId: this.boardId\n    }).subscribe(tasks => {\n      this.tasks = _.groupBy(tasks, 'boardColumnId');\n    });\n  }\n  drop(event, column) {\n    console.log(event);\n    if (event.previousContainer === event.container) {\n      moveItemInArray(event.container.data, event.previousIndex, event.currentIndex);\n    } else {\n      transferArrayItem(event.previousContainer.data, event.container.data, event.previousIndex, event.currentIndex);\n      const tasks = event.container.data.map((task, index) => {\n        return {\n          ...task,\n          taskStatus: column.taskStatus,\n          boardColumnId: column.id\n        };\n      });\n      this.tasks[column.id] = tasks;\n      const currentTask = tasks[event.currentIndex];\n      console.log(currentTask);\n      this.taskService.updateTask(currentTask.id, currentTask).subscribe(task => {\n        console.log(task);\n        this.getTasks();\n      });\n    }\n  }\n  addTask(id) {}\n}\nBoardComponent.ɵfac = function BoardComponent_Factory(t) {\n  return new (t || BoardComponent)(i0.ɵɵdirectiveInject(i1.BoardService), i0.ɵɵdirectiveInject(i2.ActivatedRoute), i0.ɵɵdirectiveInject(i3.TaskService), i0.ɵɵdirectiveInject(i4.MatDialog));\n};\nBoardComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: BoardComponent,\n  selectors: [[\"app-board\"]],\n  decls: 3,\n  vars: 1,\n  consts: [[1, \"container\"], [\"cdkDropListGroup\", \"\", 1, \"board-columns\"], [\"class\", \"column\", \"cdkDropList\", \"\", 3, \"cdkDropListData\", \"cdkDropListDropped\", 4, \"ngFor\", \"ngForOf\"], [\"cdkDropList\", \"\", 1, \"column\", 3, \"cdkDropListData\", \"cdkDropListDropped\"], [1, \"head\"], [\"mat-raised-button\", \"\", 3, \"click\"], [\"class\", \"card\", \"cdkDrag\", \"\", 4, \"ngFor\", \"ngForOf\"], [\"cdkDrag\", \"\", 1, \"card\"], [\"class\", \"example-custom-placeholder\", 4, \"cdkDragPlaceholder\"], [1, \"example-custom-placeholder\"]],\n  template: function BoardComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1);\n      i0.ɵɵtemplate(2, BoardComponent_div_2_Template, 8, 5, \"div\", 2);\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngForOf\", ctx.board == null ? null : ctx.board.columns);\n    }\n  },\n  dependencies: [i5.NgForOf, i6.CdkDropList, i6.CdkDropListGroup, i6.CdkDrag, i6.CdkDragPlaceholder, i7.MatButton],\n  styles: [\".container[_ngcontent-%COMP%] {\\n  justify-content: center;\\n  height: 400px;\\n  width: 100%;\\n  overflow-x: scroll;\\n  overflow-y: scroll;\\n}\\n\\n.board-columns[_ngcontent-%COMP%] {\\n  display: flex;\\n  gap: 10px;\\n  flex: 1 1 400px;\\n  flex-direction: row;\\n  padding: 10px;\\n  margin: 10px;\\n  height: 100%;\\n  max-width: 1042px;\\n}\\n\\n.board-columns[_ngcontent-%COMP%]   .column[_ngcontent-%COMP%] {\\n  display: flex;\\n  flex-direction: column;\\n  flex: 1 1 400px;\\n  padding: 5px;\\n  height: 100%;\\n  min-width: 300px;\\n  background-color: #faf8f8;\\n  border-radius: 5px;\\n  box-shadow: 0 0 10px 0 rgba(0, 0, 0, 0.2);\\n}\\n\\n.board-columns[_ngcontent-%COMP%]   .column[_ngcontent-%COMP%]   .head[_ngcontent-%COMP%] {\\n  display: flex;\\n  flex-direction: row;\\n  justify-content: space-between;\\n}\\n\\n.card[_ngcontent-%COMP%] {\\n  padding: 20px 10px;\\n  border-bottom: solid 1px #ccc;\\n  color: rgba(0, 0, 0, 0.87);\\n  display: flex;\\n  flex-direction: row;\\n  align-items: center;\\n  justify-content: space-between;\\n  box-sizing: border-box;\\n  cursor: move;\\n  background: white;\\n  font-size: 14px;\\n}\\n\\n.example-custom-placeholder[_ngcontent-%COMP%] {\\n  background: #ccc;\\n  border: dotted 3px #999;\\n  min-height: 60px;\\n  transition: transform 250ms cubic-bezier(0, 0, 0.2, 1);\\n}\\n\\n.cdk-drag-preview[_ngcontent-%COMP%] {\\n  box-sizing: border-box;\\n  border-radius: 4px;\\n  box-shadow: 0 5px 5px -3px rgba(0, 0, 0, 0.2), 0 8px 10px 1px rgba(0, 0, 0, 0.14), 0 3px 14px 2px rgba(0, 0, 0, 0.12);\\n}\\n\\n.cdk-drag-animating[_ngcontent-%COMP%] {\\n  transition: transform 250ms cubic-bezier(0, 0, 0.2, 1);\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvcGFnZXMvZGFzaGJvYXJkL2JvYXJkL2JvYXJkLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsdUJBQUE7RUFDQSxhQUFBO0VBQ0EsV0FBQTtFQUNBLGtCQUFBO0VBQ0Esa0JBQUE7QUFDRjs7QUFDQTtFQUNFLGFBQUE7RUFDQSxTQUFBO0VBQ0EsZUFBQTtFQUNBLG1CQUFBO0VBQ0EsYUFBQTtFQUNBLFlBQUE7RUFDQSxZQUFBO0VBQ0EsaUJBQUE7QUFFRjs7QUFHRTtFQUNFLGFBQUE7RUFDQSxzQkFBQTtFQUNBLGVBQUE7RUFDQSxZQUFBO0VBQ0EsWUFBQTtFQUNBLGdCQUFBO0VBQ0EseUJBQUE7RUFDQSxrQkFBQTtFQUNBLHlDQUFBO0FBREo7O0FBRUk7RUFDRSxhQUFBO0VBQ0EsbUJBQUE7RUFDQSw4QkFBQTtBQUFOOztBQUlBO0VBQ0Usa0JBQUE7RUFDQSw2QkFBQTtFQUNBLDBCQUFBO0VBQ0EsYUFBQTtFQUNBLG1CQUFBO0VBQ0EsbUJBQUE7RUFDQSw4QkFBQTtFQUNBLHNCQUFBO0VBQ0EsWUFBQTtFQUNBLGlCQUFBO0VBQ0EsZUFBQTtBQURGOztBQUdBO0VBQ0UsZ0JBQUE7RUFDQSx1QkFBQTtFQUNBLGdCQUFBO0VBQ0Esc0RBQUE7QUFBRjs7QUFFQTtFQUNFLHNCQUFBO0VBQ0Esa0JBQUE7RUFDQSxxSEFBQTtBQUNGOztBQUlBO0VBQ0Usc0RBQUE7QUFERiIsInNvdXJjZXNDb250ZW50IjpbIi5jb250YWluZXJ7XG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICBoZWlnaHQ6IDQwMHB4O1xuICB3aWR0aDogMTAwJTtcbiAgb3ZlcmZsb3cteDogc2Nyb2xsO1xuICBvdmVyZmxvdy15OiBzY3JvbGw7XG59XG4uYm9hcmQtY29sdW1uc3tcbiAgZGlzcGxheTogZmxleDtcbiAgZ2FwOiAxMHB4O1xuICBmbGV4OiAxIDEgNDAwcHg7XG4gIGZsZXgtZGlyZWN0aW9uOiByb3c7XG4gIHBhZGRpbmc6IDEwcHg7XG4gIG1hcmdpbjogMTBweDtcbiAgaGVpZ2h0OiAxMDAlO1xuICBtYXgtd2lkdGg6IDEwNDJweDtcbiAgLy9iYWNrZ3JvdW5kLWNvbG9yOiAjZjMwMjAyO1xuICAvL2JvcmRlci1yYWRpdXM6IDVweDtcbiAgLy9ib3gtc2hhZG93OiAwIDAgMTBweCAwIHJnYmEoMCwgMCwgMCwgMC4yKTtcblxuICAuY29sdW1ue1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgICBmbGV4OiAxIDEgNDAwcHg7XG4gICAgcGFkZGluZzogNXB4O1xuICAgIGhlaWdodDogMTAwJTtcbiAgICBtaW4td2lkdGg6IDMwMHB4O1xuICAgIGJhY2tncm91bmQtY29sb3I6ICNmYWY4Zjg7XG4gICAgYm9yZGVyLXJhZGl1czogNXB4O1xuICAgIGJveC1zaGFkb3c6IDAgMCAxMHB4IDAgcmdiYSgwLCAwLCAwLCAwLjIpO1xuICAgIC5oZWFke1xuICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgIGZsZXgtZGlyZWN0aW9uOiByb3c7XG4gICAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XG4gICAgfVxuICB9XG59XG4uY2FyZHtcbiAgcGFkZGluZzogMjBweCAxMHB4O1xuICBib3JkZXItYm90dG9tOiBzb2xpZCAxcHggI2NjYztcbiAgY29sb3I6IHJnYmEoMCwgMCwgMCwgMC44Nyk7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtZGlyZWN0aW9uOiByb3c7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcbiAgYm94LXNpemluZzogYm9yZGVyLWJveDtcbiAgY3Vyc29yOiBtb3ZlO1xuICBiYWNrZ3JvdW5kOiB3aGl0ZTtcbiAgZm9udC1zaXplOiAxNHB4O1xufVxuLmV4YW1wbGUtY3VzdG9tLXBsYWNlaG9sZGVyIHtcbiAgYmFja2dyb3VuZDogI2NjYztcbiAgYm9yZGVyOiBkb3R0ZWQgM3B4ICM5OTk7XG4gIG1pbi1oZWlnaHQ6IDYwcHg7XG4gIHRyYW5zaXRpb246IHRyYW5zZm9ybSAyNTBtcyBjdWJpYy1iZXppZXIoMCwgMCwgMC4yLCAxKTtcbn1cbi5jZGstZHJhZy1wcmV2aWV3IHtcbiAgYm94LXNpemluZzogYm9yZGVyLWJveDtcbiAgYm9yZGVyLXJhZGl1czogNHB4O1xuICBib3gtc2hhZG93OiAwIDVweCA1cHggLTNweCByZ2JhKDAsIDAsIDAsIDAuMiksXG4gIDAgOHB4IDEwcHggMXB4IHJnYmEoMCwgMCwgMCwgMC4xNCksXG4gIDAgM3B4IDE0cHggMnB4IHJnYmEoMCwgMCwgMCwgMC4xMik7XG59XG5cbi5jZGstZHJhZy1hbmltYXRpbmcge1xuICB0cmFuc2l0aW9uOiB0cmFuc2Zvcm0gMjUwbXMgY3ViaWMtYmV6aWVyKDAsIDAsIDAuMiwgMSk7XG59XG5cbiJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n});","map":{"version":3,"mappings":"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","names":["moveItemInArray","transferArrayItem","_","i0","BoardComponent","constructor","boardService","router","taskService","dialog","ngOnInit","params","subscribe","boardId","getBoard","getBoardId","board","console","log","getTasks","tasks","groupBy","drop","event","column","previousContainer","container","data","previousIndex","currentIndex","map","task","index","taskStatus","boardColumnId","id","currentTask","updateTask","addTask","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["/Users/macbookpro/Desktop/GitHubRepo/Task-Manager-with-NgRx/src/app/pages/dashboard/board/board.component.ts","/Users/macbookpro/Desktop/GitHubRepo/Task-Manager-with-NgRx/src/app/pages/dashboard/board/board.component.html"],"sourcesContent":["import {Component, OnInit} from '@angular/core';\nimport {BoardService} from \"../../../core/services/board.service\";\nimport {ActivatedRoute} from \"@angular/router\";\nimport {IColumn, IBoard} from \"../../../core/interfaces\";\nimport {ITask} from \"../../../core/interfaces/task\";\nimport {CdkDragDrop, moveItemInArray, transferArrayItem} from \"@angular/cdk/drag-drop\";\nimport {TaskService} from \"../../../core/services/task.service\";\nimport {MatDialog} from \"@angular/material/dialog\";\nimport * as _ from 'lodash';\n\n@Component({\n  selector: 'app-board',\n  templateUrl: './board.component.html',\n  styleUrls: ['./board.component.scss']\n})\nexport class BoardComponent implements OnInit {\nboardId!: number;\nboard!: IBoard;\n  tasks: any = {\n   // 25: [\n   //    {\n   //      id: 1,\n   //      title: 'Task 1',\n   //    },\n   //    {\n   //      id: 2,\n   //      title: 'Task 2',\n   //    }\n   //  ],\n   //  26: [],\n   //  27: []\n  };\n  constructor(\n    private boardService: BoardService,\n    private router: ActivatedRoute,\n    private taskService: TaskService,\n    public dialog: MatDialog\n  ) { }\n\n  ngOnInit(): void {\n    this.router.params.subscribe(params => {\n      if(params['id']) {\n        this.boardId = +params['id']\n        this.getBoard()\n\n      }\n    })\n  }\n\n  getBoard() {\n    this.boardService.getBoardId(this.boardId).subscribe(board =>{\n     console.log(board);\n      this.board = board;\n      this.getTasks()\n    })\n  }\n  private getTasks() {\n    this.taskService.getTasks({boardId: this.boardId}).subscribe(tasks => {\n      this.tasks = _.groupBy(tasks, 'boardColumnId')\n    })\n  }\n\n  drop(event: CdkDragDrop<any>, column: IColumn) {\n    console.log(event);\n    if (event.previousContainer === event.container) {\n      moveItemInArray(event.container.data, event.previousIndex, event.currentIndex);\n    }else {\n      transferArrayItem(event.previousContainer.data,\n        event.container.data,\n        event.previousIndex,\n        event.currentIndex);\n      const tasks: ITask[] = event.container.data.map((task: ITask, index: number) => {\n        return {\n          ...task,\n          taskStatus: column.taskStatus,\n          boardColumnId: column.id,\n        }\n      })\n\n      this.tasks[column.id] = tasks\n      const currentTask = tasks[event.currentIndex]\n      console.log(currentTask)\n      this.taskService.updateTask(currentTask.id, currentTask).subscribe(task => {\n\n        console.log(task)\n        this.getTasks()\n      })\n    }\n\n  }\n\n  addTask(id: number) {\n\n\n  }\n}\n","<div class=\"container\">\n  <div class=\"board-columns\" cdkDropListGroup>\n    <div class=\"column\" *ngFor=\"let column of board?.columns\" cdkDropList [cdkDropListData]=\"tasks[column.id] || []\"\n         (cdkDropListDropped)=\"drop($event, column)\">\n      <div class=\"head\">\n        <h3>Status: {{column.taskStatus}}</h3>\n        <button (click)=\"addTask(column.id)\" mat-raised-button >Add Task</button>\n      </div>\n\n      <div >\n        <div class=\"card\" *ngFor=\"let card of tasks[column.id] || []\" cdkDrag>\n          <div class=\"example-custom-placeholder\" *cdkDragPlaceholder></div>\n          <h3>ID:{{card.id}}</h3>\n          <h4>Title:{{card.title}}</h4>\n        </div>\n      </div>\n\n    </div>\n\n\n  </div>\n</div>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}