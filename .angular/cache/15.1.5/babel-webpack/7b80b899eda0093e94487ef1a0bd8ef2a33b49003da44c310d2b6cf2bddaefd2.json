{"ast":null,"code":"import { BaseService } from \"./base.service\";\nimport * as i0 from \"@angular/core\";\nexport class RoleService extends BaseService {\n  getRoles(params = {}) {\n    return this.get('role', params);\n  }\n  getAllRoles() {\n    return this.get('role/all');\n  }\n  getRole(id) {\n    return this.get(`role/${id}`);\n  }\n  createRole(role) {\n    return this.post('role', role);\n  }\n  updateRole(role) {\n    return this.put(`role/${role.id}`, role);\n  }\n  deleteRole(id) {\n    return this.delete(`role/${id}`);\n  }\n  getPermissions() {\n    return this.get('role/permission');\n  }\n  setPermissions(params) {\n    return this.post(`role/permissions`, params);\n  }\n  getMyRoles() {\n    return this.get(`role/my`);\n  }\n}\nRoleService.ɵfac = /*@__PURE__*/function () {\n  let ɵRoleService_BaseFactory;\n  return function RoleService_Factory(t) {\n    return (ɵRoleService_BaseFactory || (ɵRoleService_BaseFactory = i0.ɵɵgetInheritedFactory(RoleService)))(t || RoleService);\n  };\n}();\nRoleService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: RoleService,\n  factory: RoleService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AACA,SAAQA,WAAW,QAAO,gBAAgB;;AAQ1C,OAAM,MAAOC,WAAY,SAAQD,WAAW;EAE1CE,QAAQ,CAACC,MAAM,GAAG,EAAE;IAClB,OAAO,IAAI,CAACC,GAAG,CAAC,MAAM,EAAED,MAAM,CAAC;EACjC;EACAE,WAAW;IACT,OAAO,IAAI,CAACD,GAAG,CAAC,UAAU,CAAC;EAC7B;EAEAE,OAAO,CAACC,EAAU;IAChB,OAAO,IAAI,CAACH,GAAG,CAAC,QAAQG,EAAE,EAAE,CAAC;EAC/B;EAEAC,UAAU,CAACC,IAAW;IACpB,OAAO,IAAI,CAACC,IAAI,CAAC,MAAM,EAAED,IAAI,CAAC;EAChC;EAEAE,UAAU,CAACF,IAAW;IACpB,OAAO,IAAI,CAACG,GAAG,CAAC,QAAQH,IAAI,CAACF,EAAE,EAAE,EAAEE,IAAI,CAAC;EAC1C;EAEAI,UAAU,CAACN,EAAU;IACnB,OAAO,IAAI,CAACO,MAAM,CAAC,QAAQP,EAAE,EAAE,CAAC;EAClC;EAEAQ,cAAc;IACZ,OAAO,IAAI,CAACX,GAAG,CAAC,iBAAiB,CAAC;EACpC;EAEAY,cAAc,CAACb,MAEd;IACC,OAAO,IAAI,CAACO,IAAI,CAAC,kBAAkB,EAAEP,MAAM,CAAC;EAC9C;EAEAc,UAAU;IACR,OAAO,IAAI,CAACb,GAAG,CAAC,SAAS,CAAC;EAC5B;;AArCWH,WAAY;;;6FAAZA,WAAW,SAAXA,WAAW;EAAA;AAAA;AAAXA,WAAY;SAAZA,WAAW;EAAAiB,SAAXjB,WAAW;EAAAkB,YAFV;AAAM","names":["BaseService","RoleService","getRoles","params","get","getAllRoles","getRole","id","createRole","role","post","updateRole","put","deleteRole","delete","getPermissions","setPermissions","getMyRoles","factory","providedIn"],"sourceRoot":"","sources":["/Users/macbookpro/Desktop/GitHubRepo/Task-Manager-with-NgRx/src/app/core/services/role.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport {BaseService} from \"./base.service\";\nimport {Observable} from \"rxjs\";\nimport {PaginationResponse} from \"../interfaces/pagination-response\";\nimport {IRole} from \"../interfaces/role\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RoleService extends BaseService{\n\n  getRoles(params = {}): Observable<PaginationResponse<IRole>> {\n    return this.get('role', params);\n  }\n  getAllRoles(): Observable<IRole[]> {\n    return this.get('role/all');\n  }\n\n  getRole(id: string): Observable<any> {\n    return this.get(`role/${id}`);\n  }\n\n  createRole(role: IRole) {\n    return this.post('role', role);\n  }\n\n  updateRole(role: IRole) {\n    return this.put(`role/${role.id}`, role);\n  }\n\n  deleteRole(id: number) {\n    return this.delete(`role/${id}`);\n  }\n\n  getPermissions(): Observable<any[]> {\n    return this.get('role/permission');\n  }\n\n  setPermissions(params: {\n    roleId: string, permissions: number[]\n  }): Observable<any> {\n    return this.post(`role/permissions`, params);\n  }\n\n  getMyRoles(): Observable<any> {\n    return this.get(`role/my`);\n  }\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}